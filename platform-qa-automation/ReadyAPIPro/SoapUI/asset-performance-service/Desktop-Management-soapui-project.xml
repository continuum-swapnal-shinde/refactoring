<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="f7f465a8-757c-40f9-9e49-cbe3eb15ab14" activeEnvironment="Default environment" name="Desktop-Management" lastOpened="2017-12-18T14:01:11.906+05:30" resourceRoot="" soapui-version="6.0.0" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="TestSuite" value="Asset API To Fetch Response based on PartnerID and EndPointID"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value="TestCase Report"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Run in-process" value="false"/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Test Case Tags" value=""/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="TestCase" value="C1836756- Validate Response Code of REST EndPoint Based on Partner Id"/>
  <con:entry key="Username" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Environment" value="Default environment"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" id="a711a6f8-92f8-45e6-af17-570a0b85aae0" wadlVersion="http://wadl.dev.java.net/2009/02" name="" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="Asset-Service" path="/Asset-Service" id="2dae7f98-07e7-44d3-9024-696a21dd6ebf"><con:settings/><con:parameters/><con:method name="Asset-Service" id="c9df5d08-a05a-4243-a0fe-6934e9437c52" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GET" id="607ab4c7-6f04-420d-b5e2-bd3b74aff7e7" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="6cabf1ea-6ec3-43d6-92a0-7eb5b3df741e" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 1" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/asset/v1/endpoint/1" path="" id="1d9762f4-ce18-47dd-bddd-f7b54d344779"><con:settings/><con:parameters/><con:method name="GET" id="97f56efa-734c-4460-93d1-baf44b85fb30" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ns="http://localhost/asset/v1/endpoint/1">ns:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>500</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GET Request" id="d3c56964-bfe4-42d3-88ff-e75673a7e34c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8084</con:endpoint><con:request/><con:originalUri>http://localhost/asset/v1/endpoint/1</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="0745cd85-710b-482f-bd1c-2a9f05f9aae8" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 2" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/asset/version" path="/asset/version" id="7f514f21-e86d-4633-a63d-b7c04dd46d6b"><con:settings/><con:parameters/><con:method name="GET" id="ec462bdc-38d5-496d-9b2e-4b52ac59e288" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ver="http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/version">ver:Response</con:element></con:representation><con:request name="GET Request" id="8056b958-2790-46cd-843c-b80f49ce3e07" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="c3ffd613-1224-4aec-8428-78ceff43b5a9" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 3" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/asset/version" path="/asset/version" id="085346ea-883b-4736-a36b-8717f714f657"><con:settings/><con:parameters/><con:method name="GET" id="6d9a519e-5ff0-4ec4-9675-220c917951fd" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ver="http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/version">ver:Response</con:element></con:representation><con:request name="GET Request" id="3a965f7b-3775-4055-9718-e9f512e69f8a" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="c7a8ebd5-23c4-485d-9270-1652c1fa3374" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 4" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/version" path="/performance/version" id="99a52075-0371-4ce6-adfc-6aee0594b0e8"><con:settings/><con:parameters/><con:method name="GET" id="c13bcfcb-57a3-4ca7-977f-7efba337c64b" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ver="http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version">ver:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ver="http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version">ver:Response</con:element></con:representation><con:request name="GET Request" id="606d8b24-0953-46dd-8866-7a72f9e93896" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="ea7ffdac-a933-40bd-a823-5017ce4d7414" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 5" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/asset/healthCheck" path="/asset/healthCheck" id="52aca3c5-447e-4fae-8db1-d7ff2f8d14ee"><con:settings/><con:parameters/><con:method name="GET" id="05ced811-94d5-4bb1-a490-45fae3d24ab3" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:heal="http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/asset/healthCheck">heal:Response</con:element></con:representation><con:request name="GET Request" id="3822f877-35d0-4cd6-90cc-b36b306d08dd" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="9e730bbf-b8ac-4861-92fc-762c8ea9ab55" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 6" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/healthCheck" path="/performance/health" id="41f5e247-5535-4aa4-ac47-f169ca349355"><con:settings/><con:parameters/><con:method name="GET" id="7b9fb362-9161-40de-87fd-7375cfa9a4c1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:heal="http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck">heal:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:heal="http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck">heal:Response</con:element></con:representation><con:request name="GET Request" id="7cda8296-ff08-480a-82a0-4851eb576b1b" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="f55f3176-6a80-494c-a206-54d6ea305e82" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 7" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/agent/v1/f6d990e6-bf7e-4f50-b465-66564dd8502c/execute" path="/agent/v1/{endpointid}/execute" id="915fc5f9-74f7-4ac0-a22e-f845537db374"><con:settings/><con:parameters><con:parameter><con:name>endpointid</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="POST" id="6eab2ba5-2bbb-4b0c-8531-285e11b1ffd8" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/x-www-form-urlencoded</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>400 404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:request name="POST Request" id="f7376b67-7c50-47a4-8bab-3c211579ca03" mediaType="application/x-www-form-urlencoded" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-Continuum-Agent-Service-ELB-Int-1915575479.us-east-1.elb.amazonaws.com</con:endpoint><con:request>{
"name": "perf memory Schedule",
"type": "schedule",
"timestampUTC": "2017-01-11T12:24:53.489110938Z",
"version": "2.0",
"task": "/schedule/performance/performance/memory",
"path": "/performance/performance/memory",
"message" : "{  \"task\": \"/schedule/performance/performance/memory\", \"executeNow\": \"false\",  \"schedule\" : \"@every 20s\"}"
}</con:request><con:originalUri>http://internal-Continuum-Agent-Service-ELB-Int-1915575479.us-east-1.elb.amazonaws.com/agent/v1/f6d990e6-bf7e-4f50-b465-66564dd8502c/execute</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="endpointid" value="${#TestSuite#endpointID}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>endpointid</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="4e39206a-bb8a-46c4-b9c7-a702f7b5f99f" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 8" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/endpoint/15aa517d-4e60-4b6c-a34f-01e2df2d6f8c/performanceCollection" path="/performance/v1/partner/{partnerId}/endpoint/{endpointid}/performanceCollection" id="c957446b-3abe-4fb0-8616-41cf293c1b13"><con:settings/><con:parameters><con:parameter><con:name>endpointid</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>partnerId</con:name><con:value>${#TestSuite#partnerId}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestSuite#partnerId}</con:default></con:parameter></con:parameters><con:method name="GET" id="a6e07e03-386a-4157-b6bf-1c85bf8ab2eb" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:per="http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/v1/4773860b-efbd-4001-8ff5-d884d00c2826/performanceCollection">per:Response</con:element></con:representation><con:request name="GET Request" id="74964b24-7f95-41dc-b293-4c1752dc9515" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointid" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>partnerId</con:entry><con:entry>endpointid</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="8bb7bf85-82e1-42f6-b57a-2e38321629c1" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 9" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/asset/v1/partner/50001743/endpoints" path="/asset/v1/partner/{partnerId}/endpoints" id="86f40186-d6eb-4567-9162-c40c5c56baad"><con:settings/><con:parameters><con:parameter><con:name>partnerId</con:name><con:value>partnerId</con:value><con:style>TEMPLATE</con:style><con:default>partnerId</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET" id="4c544727-19c5-4ccc-9d11-54c9c54c0750" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>503</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GET Request" id="1c3e36a0-ae2d-4689-9be7-4abbbd860aae" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#ServerHost_AssetMS}</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="partnerId" value="${#TestSuite#partnerId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>partnerId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="a2b0d943-8821-4a6e-a844-3fc9e06b3dcf" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 10" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/asset/v1/partner/50001743/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819" path="/asset/v1/partner/{partnerId}/endpoints/{endpointId}" id="ac9d664c-638f-4ba8-91a9-68e9e8581b80"><con:settings/><con:parameters><con:parameter><con:name>partnerId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>endpointId</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="GET" id="a5bf5ddf-dfaf-4ae6-9a1b-b6c92e6ff535" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:c3d="http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819">c3d:Response</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>503</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>503</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>503</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GET Request" id="9758e8ca-eadc-4fe9-a002-a9a8b059150d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#ServerHost_AssetMS}</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#TestSuite#endpointId}"/>
  <con:entry key="partnerId" value="${#TestSuite#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="f787b84d-5f6f-42ba-966a-ef36dd8a14a4" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 11" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/$partnerId/endpoint/$endpointId/process" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/process" id="f043cb8f-5435-42d9-ba8f-0a1c30ea3182"><con:settings/><con:parameters><con:parameter><con:name>partnerId</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>endpointId</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="GET" id="4ba3d751-7ac0-4487-b851-c898e8e46494" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GET Request" id="cc652672-910c-4337-8265-ee05a2dff41e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com/</con:originalUri><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry/></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="18c53af2-11eb-43b8-97b6-7c4af307842d" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 12" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/processor" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/processors" id="9df07620-f824-426b-802e-f916c62e3e1d"><con:settings/><con:parameters><con:parameter><con:name>partnerId</con:name><con:value>partnerId</con:value><con:style>TEMPLATE</con:style><con:default>partnerId</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>endpointId</con:value><con:style>TEMPLATE</con:style><con:default>endpointId</con:default></con:parameter></con:parameters><con:method name="GET" id="9331f05f-c880-48e2-b40a-056cd258bf54" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GET Request" id="505d40e8-3c9d-42ec-ad5c-dc34f4b57684" mediaType="application/json"><con:settings/><con:endpoint>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="d466b9bc-a7d6-4185-bbab-b7884edf2dea" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 13" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/storage" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/storage" id="e7d8adfb-8b09-4d28-b441-0ecdb0fc7ef4"><con:settings/><con:parameters><con:parameter><con:name>partnerId</con:name><con:value>partnerId</con:value><con:style>TEMPLATE</con:style><con:default>partnerId</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>endpointId</con:value><con:style>TEMPLATE</con:style><con:default>endpointId</con:default></con:parameter></con:parameters><con:method name="GET" id="e8a5bd14-2f5e-482d-82f6-22d442fff9fa" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GET Request" id="aa4c9d4c-402c-4183-b211-0b07115caade" mediaType="application/json"><con:settings/><con:endpoint>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="7498d8db-3cad-40af-8c84-578efeeb6564" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 14" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/memory" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/memory" id="dcb026da-2d41-42f9-905f-83d6a057f239"><con:settings/><con:parameters><con:parameter><con:name>partnerId</con:name><con:value>partnerId</con:value><con:style>TEMPLATE</con:style><con:default>partnerId</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>endpointId</con:value><con:style>TEMPLATE</con:style><con:default>endpointId</con:default></con:parameter></con:parameters><con:method name="GET" id="67de59fd-4108-4574-9de4-b9a8bcdc1043" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GET Request" id="b7e38ad5-1bd0-43a0-b9ff-4253a0c85e00" mediaType="application/json"><con:settings/><con:endpoint>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="9e616742-4bba-4235-a499-b509dd5db38b" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 15" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/$partnerId/endpoint/$endpointId/network" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/network" id="bfb092da-98e5-4946-aeec-b2396b0e404b"><con:settings/><con:parameters><con:parameter><con:name>partnerId</con:name><con:value>${#TestSuite#partnerId}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestSuite#partnerId}</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>${#TestSuite#partnerId}</con:value><con:style>TEMPLATE</con:style><con:default>${#TestSuite#partnerId}</con:default></con:parameter></con:parameters><con:method name="GET" id="13f89b3c-909c-4386-9348-438214a9411f" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GET Request" id="b400ca27-8aed-4570-bb6e-e8611fc1284a" mediaType="application/json"><con:settings/><con:endpoint>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="37d8d723-1ea3-4583-aa34-d0791a212eb4" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 16" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/process" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/process" id="4c6a0887-2548-4a13-96b0-ef62eb809780"><con:settings/><con:parameters><con:parameter><con:name>count</con:name><con:value>2</con:value><con:style>QUERY</con:style><con:default>2</con:default></con:parameter><con:parameter><con:name>partnerId</con:name><con:value>s</con:value><con:style>TEMPLATE</con:style><con:default>s</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>p</con:value><con:style>TEMPLATE</con:style><con:default>p</con:default></con:parameter></con:parameters><con:method name="GET" id="fadc9023-7892-4783-a0f9-a60bbc20db94" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GET Request" id="d71a5f70-d643-4205-88c7-b624a5ee1e3c" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="partnerId" value="p" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="77bbeace-aa8e-46fd-86d2-5b537dd8416b" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 17" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/process" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/process" id="2fc92ff7-a0c6-492b-b593-528cc3cc1e05"><con:settings/><con:parameters><con:parameter><con:name>count</con:name><con:value>2.6</con:value><con:style>QUERY</con:style><con:default>2.6</con:default></con:parameter><con:parameter><con:name>partnerId</con:name><con:value>p</con:value><con:style>TEMPLATE</con:style><con:default>p</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>s</con:value><con:style>TEMPLATE</con:style><con:default>s</con:default></con:parameter></con:parameters><con:method name="GET" id="5089d321-999e-48e2-b588-234979f99f6d" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GET Request" id="44070495-234e-44ff-b2b2-948cec2427d2" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="44242efb-cfe8-4923-b0c2-5cf78e978dbc" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 18" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/memory" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/memory" id="5d82f7a3-1a7b-4b14-b29f-113e3cc1700d"><con:settings/><con:parameters><con:parameter><con:name>count</con:name><con:value>2</con:value><con:style>QUERY</con:style><con:default>2</con:default></con:parameter><con:parameter><con:name>partnerId</con:name><con:value>p</con:value><con:style>TEMPLATE</con:style><con:default>p</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>s</con:value><con:style>TEMPLATE</con:style><con:default>s</con:default></con:parameter></con:parameters><con:method name="GET" id="2e4fe0f8-f53c-415f-8a2e-4020b9f56530" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GET Request" id="fc6db389-b8be-4142-9ae4-485c20743f2d" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="08fec6e3-8e88-4f4d-b408-b0a104dd8901" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 19" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/memory" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/memory" id="359b8ce8-8b0e-4e13-8d93-f37a4d11cbb7"><con:settings/><con:parameters><con:parameter><con:name>count</con:name><con:value>2</con:value><con:style>QUERY</con:style><con:default>2</con:default></con:parameter><con:parameter><con:name>partnerId</con:name><con:value>p</con:value><con:style>TEMPLATE</con:style><con:default>p</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>s</con:value><con:style>TEMPLATE</con:style><con:default>s</con:default></con:parameter></con:parameters><con:method name="GET" id="94664fee-1878-4bf1-8390-1c5397f81eb2" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GET Request" id="2604c03c-741a-4059-9a8b-5fb6cc387b1b" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="59f3331d-31c8-4ac0-a572-a5eccc5295f4" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 20" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/storage" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/storage" id="11c0e259-e070-42f7-9643-741263fe9d39"><con:settings/><con:parameters><con:parameter><con:name>count</con:name><con:value>2</con:value><con:style>QUERY</con:style><con:default>2</con:default></con:parameter><con:parameter><con:name>partnerId</con:name><con:value>p</con:value><con:style>TEMPLATE</con:style><con:default>p</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>s</con:value><con:style>TEMPLATE</con:style><con:default>s</con:default></con:parameter></con:parameters><con:method name="GET" id="90b47be1-1874-4687-be19-74bd1c7be55f" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GET Request" id="b3e5eb4b-b0b4-4819-8479-2c18f6cf8351" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="04d0dc3b-9f78-451b-9811-ed8c1931018f" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 21" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/storage" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/storage" id="3f3813c2-95f4-42cb-bf9a-eec465c7f3ac"><con:settings/><con:parameters><con:parameter><con:name>count</con:name><con:value>2</con:value><con:style>QUERY</con:style><con:default>2</con:default></con:parameter><con:parameter><con:name>partnerId</con:name><con:value>p</con:value><con:style>TEMPLATE</con:style><con:default>p</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>s</con:value><con:style>TEMPLATE</con:style><con:default>s</con:default></con:parameter></con:parameters><con:method name="GET" id="62614864-d78c-49ad-b834-721d6f38cbe3" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GET Request" id="2068febb-1075-45c2-b8c7-dd00c212c901" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="b3597ecb-a8e2-4461-b6eb-951f3d16ae15" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 22" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/50001743/endpoint/db3ed9b1-b1fb-4788-8ba8-f30f090e295a/network" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/network" id="01ab581e-0857-4dc2-ae0d-3ff27c2ccb75"><con:settings/><con:parameters><con:parameter><con:name>count</con:name><con:value>2</con:value><con:style>QUERY</con:style><con:default>2</con:default></con:parameter><con:parameter><con:name>partnerId</con:name><con:value>p</con:value><con:style>TEMPLATE</con:style><con:default>p</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>s</con:value><con:style>TEMPLATE</con:style><con:default>s</con:default></con:parameter></con:parameters><con:method name="GET" id="d65b6704-a45d-420c-a8ba-8f468e5f9d10" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GET Request" id="b25284ce-ac9c-43bc-9672-f2aadea10187" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="e8188b4d-b0a4-41dc-8142-84a143832937" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 23" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/50001743/endpoint/db3ed9b1-b1fb-4788-8ba8-f30f090e295a/network" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/network" id="ea3b40ae-06ef-4b59-8a72-e63c9d010bac"><con:settings/><con:parameters><con:parameter><con:name>count</con:name><con:value>2</con:value><con:style>QUERY</con:style><con:default>2</con:default></con:parameter><con:parameter><con:name>partnerId</con:name><con:value>p</con:value><con:style>TEMPLATE</con:style><con:default>p</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>s</con:value><con:style>TEMPLATE</con:style><con:default>s</con:default></con:parameter></con:parameters><con:method name="GET" id="97c488ac-9bac-4141-9372-9283dcff5772" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GET Request" id="494887f8-8f32-45f1-a947-6374f25acc9c" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="3bcc279b-7ec2-49f0-972c-02fd63f51dfd" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 24" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/processors" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/processors" id="5b468f58-68ea-490f-abf1-6311156118b0"><con:settings/><con:parameters><con:parameter><con:name>count</con:name><con:value>2</con:value><con:style>QUERY</con:style><con:default>2</con:default></con:parameter><con:parameter><con:name>partnerId</con:name><con:value>p</con:value><con:style>TEMPLATE</con:style><con:default>p</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>s</con:value><con:style>TEMPLATE</con:style><con:default>s</con:default></con:parameter></con:parameters><con:method name="GET" id="f81ca826-4623-40fc-a889-aa9d2a8a7b10" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GET Request" id="8bee7323-c429-4566-b3cb-50924a41674b" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="b5ee5d34-0324-4a50-a5d4-38d35b0a5b63" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 25" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/processors" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/processors" id="7b2ad004-fd67-4799-8d1e-1a7baf0e3677"><con:settings/><con:parameters><con:parameter><con:name>count</con:name><con:value>abcd@123</con:value><con:style>QUERY</con:style><con:default>abcd@123</con:default></con:parameter><con:parameter><con:name>partnerId</con:name><con:value>p</con:value><con:style>TEMPLATE</con:style><con:default>p</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>s</con:value><con:style>TEMPLATE</con:style><con:default>s</con:default></con:parameter></con:parameters><con:method name="GET" id="b865e524-fe8d-441f-a063-62fdded149c9" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>text/plain; charset=utf-8</con:mediaType><con:status>400</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GET Request" id="99d7c4e9-3143-45f1-9ac9-430cd0c2ed62" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="d228f29d-c634-4c1e-92ad-4e958021b0e6" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 26" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/processors/0" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/processors/0" id="aa2ebd87-c5d7-4962-979e-f21cff5aac5f"><con:settings/><con:parameters><con:parameter><con:name>partnerId</con:name><con:value>p</con:value><con:style>TEMPLATE</con:style><con:default>p</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>s</con:value><con:style>TEMPLATE</con:style><con:default>s</con:default></con:parameter></con:parameters><con:method name="GET" id="56f793c9-2776-4442-b167-288e8bc224e1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GET Request" id="d7980ece-5baf-43d0-8586-5e3d94e01e87" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="ff5af457-efc8-4b8e-964f-1bbedf934502" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 27" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/processors/0" path="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/processors/0" id="116e29f4-0004-4a1b-88d3-705c89c724e9"><con:settings/><con:parameters><con:parameter><con:name>count</con:name><con:value>2</con:value><con:style>QUERY</con:style><con:default>2</con:default></con:parameter><con:parameter><con:name>partnerId</con:name><con:value>p</con:value><con:style>TEMPLATE</con:style><con:default>p</con:default></con:parameter><con:parameter><con:name>endpointId</con:name><con:value>s</con:value><con:style>TEMPLATE</con:style><con:default>s</con:default></con:parameter></con:parameters><con:method name="GET" id="da0d44b5-7438-4f4a-a0bb-503629f74fe8" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GET Request" id="3dcd21fe-2034-4a5f-ad6d-78fe73099e03" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="61b6b829-fe09-40a4-97d5-48b37f416b52" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 28" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/systemstate/healthCheck" path="/systemstate/health" id="fddea5a6-d2e6-40f2-b6ea-711acf7ea941"><con:settings/><con:parameters/><con:method name="GET" id="f9ff180f-faaf-4174-90fa-510642478834" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:heal="http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck">heal:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:heal="http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck">heal:Response</con:element></con:representation><con:request name="GET Request" id="0bfc8e72-d5b6-413a-9c98-f286c068ad4c" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="1af1361a-7972-4df0-9d82-c394bc856782" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 29" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/systemstate/version" path="/systemstate/version" id="f911df59-f8bf-4cdf-8ac9-4a993273cc83"><con:settings/><con:parameters/><con:method name="GET" id="18e31236-ffc6-4a0a-9c7e-26417906fa2b" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ver="http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version">ver:Response</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ver="http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version">ver:Response</con:element></con:representation><con:request name="GET Request" id="f775a8fb-53a8-4f8c-9ff3-9b90ca2f0632" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com</con:endpoint><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="b39f4e3f-637f-4d8c-a671-7080a23bcd5c" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 30" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/systemstate/v1/partner/50001794/endpoints/80c6d631-2ae2-4ed1-9e9a-cd332eaa0d75" path="/systemstate/v1/partner/{partner_id}/endpoints/{endpoint_id}" id="91b3142f-e679-4469-b97d-009a658947cb"><con:settings/><con:parameters><con:parameter><con:name>partner_id</con:name><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>endpoint_id</con:name><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="GET" id="963b0bc2-8cdb-457c-bdc9-9d68359cbf37" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:c6d="http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/v1/partner/50001794/endpoints/80c6d631-2ae2-4ed1-9e9a-cd332eaa0d75">c6d:Response</con:element></con:representation><con:request name="GET Request" id="00a4d77d-e548-4f1e-bf31-16a00885b1e1" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="partner_id" value="p"/>
  <con:entry key="endpoint_id" value="p"/>
</con:parameters><con:parameterOrder><con:entry>partner_id</con:entry><con:entry>endpoint_id</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="ea9b0145-c25a-423b-9442-431b8f90f29c" wadlVersion="http://wadl.dev.java.net/2009/02" name="REST Service 31" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints/><con:resource name="/systemstate/v1/partner/50001794/endpoints" path="/systemstate/v1/partner/{partnerId}/endpoints" id="373e0481-e15c-4390-972c-16e00e368618"><con:settings/><con:parameters><con:parameter><con:name>partnerId</con:name><con:value>${#Project#partnerId}</con:value><con:style>TEMPLATE</con:style><con:default>${#Project#partnerId}</con:default></con:parameter></con:parameters><con:method name="GET" id="1207c040-f3bf-487f-94a1-469e83615f33" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="GET Request" id="4fb71eb5-3cb3-4c7b-9773-7c89b30500d5" mediaType="application/json"><con:settings/><con:endpoint>http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>partnerId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="7447154c-6c00-40a3-8870-826c908dac48" name="Fetching Endpoint and PartnerId from remote machine"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="abdad06f-0e65-4e94-a835-157036f202d3" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C2148029-Fetching endpoint and partner" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="groovy" name="Groovy Script" id="d63000e6-65a6-4e3a-b4d2-f07de1f1fb7a"><con:settings/><con:config><script>import SSHConnection.Ssh;
Ssh gSSHSessionObj = Ssh.CreateSession("administrator","10.2.114.113", "22","Abcd@123");
String endPointId = gSSHSessionObj.SshCommandExecution("EndPointID","cmd /c cd C:\\Program Files (x86)\\ITSPlatform\\config &amp; C:\\jq-win32.exe -r "+"\""+".EndPointID"+"\""+" platform_agent_core_cfg.json");    
//String partnerId = gSSHSessionObj.SshCommandExecution("Registry","cmd /c reg query " + "HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\SAAZOD" + " /v \"" + "MEMBERID" + "\"");
testRunner.testCase.testSuite.project.setPropertyValue('End_PointID', endPointId)
//testRunner.testCase.testSuite.project.setPropertyValue('partnerId', partnerId)
log.info(endPointId);
//log.info(partnerId);</script></con:config></con:testStep><con:properties><con:property><con:name>End_PointID</con:name><con:value>jq: error: Could not open file platform_agent_core_cfg.json: No such file or directory</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="fbe65828-59f1-4104-b7f3-1da40a0f702d" name="Asset Versioning API Validation TestSuite"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="f9fb4139-1f1a-43fc-a9fe-bf99490fba0c" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C1448268-Validate REST endpoint for Version API" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Step1_GetAssetServiceVersion_Request" id="f7d3be96-90df-4c6d-b84d-11aa710e32e0"><con:settings/><con:config service="REST Service 3" resourcePath="/asset/version" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1_GetAssetServiceVersion_Request" id="3a965f7b-3775-4055-9718-e9f512e69f8a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#serverHost}</con:endpoint><con:request/><con:originalUri>http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/version</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="969c1de7-09f4-4afd-a59e-b524ec7bf111" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e7092e41-abe7-4928-b5f7-c5a8a52fb0e8" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C1448270-Validate REST response" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Step1_GetAssetServiceVersion_Request" id="ee02ea8d-7eb7-4f62-ae2c-58656dbc8663"><con:settings/><con:config service="REST Service 3" resourcePath="/asset/version" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1_GetAssetServiceVersion_Request" id="3a965f7b-3775-4055-9718-e9f512e69f8a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#serverHost}</con:endpoint><con:request/><con:originalUri>http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/version</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="023defbd-f7f6-4901-bce8-b0ab423220dc" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REST response validations" id="b1a4786c-66f2-400e-b22f-a47225fc878a"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import java.text.SimpleDateFormat
import org.joda.time.format.ISODateTimeFormat
import org.joda.time.DateTime
def response = context.expand('${Step1_GetAssetServiceVersion_Request#Response}')
if(response != "")
{
log.info("Verifying timeStampUTC field in JSON response")
def jsonResponse = new JsonSlurper().parseText(response)
def timeStampUTC = jsonResponse.timeStampUTC
assert jsonResponse.containsKey('timeStampUTC'), "timeStampUTC field not found"
assert timeStampUTC.trim() != "", "timeStampUTC field is empty"
def dateTimeFormatStr = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
 assert(ISODateTimeFormat.dateTimeParser().parseDateTime(timeStampUTC)),"timeStampUTC is not in format: " + dateTimeFormatStr
 log.info("Verified timeStampUTC field in JSON asset version response")
}

else
	{
		testRunner.fail("Version API Response is null")
	}



def response1 = context.expand( '${Step1_GetAssetServiceVersion_Request#Response}' ).toString()
if(response1 != "")
{
def slurper1 = new JsonSlurper()
def jsonResponse1 = slurper1.parseText response1
//def name = context.expand( '${#TestSuite#name}' )
log.info("Verifying name field in JSON response")
assert (jsonResponse1.name != null)
assert (jsonResponse1.name != "")
assert jsonResponse1.containsKey("name"), "Name property not found in JSON response"
assert(jsonResponse1.name == "AssetServiceSolution"),"Name property is not same as AssetServiceSolution"
log.info("Verified name field in JSON response")
}
else
	{
		testRunner.fail("Version API Response is null")
	}



def response2 = context.expand( '${Step1_GetAssetServiceVersion_Request#Response}' ).toString()
if(response2 != "")
{
def slurper2 = new JsonSlurper()
def jsonResponse2 = slurper2.parseText response2
//def type = context.expand( '${#TestSuite#type}' )
log.info("Verifying type field in JSON response")
assert (jsonResponse2.type != null)
assert (jsonResponse2.type != "")
assert jsonResponse2.containsKey("type"), "type property not found in JSON response"
assert(jsonResponse2.type == "Version"),"type property is not same as Version"
log.info("Verified type field in JSON response")
}
else
	{
		testRunner.fail("Version API Response is null")
	}



def response3 = context.expand( '${Step1_GetAssetServiceVersion_Request#Response}' ).toString()
if(response3 != "")
{
def slurper3 = new JsonSlurper()
def jsonResponse3 = slurper3.parseText response3
//def serviceName = context.expand( '${#TestSuite#serviceName}' )
log.info("Verifying serviceName field in JSON response")
assert (jsonResponse3.serviceName != null)
assert (jsonResponse3.serviceName != "")
assert jsonResponse3.containsKey("serviceName"), "serviceName property not found in JSON response"
assert(jsonResponse3.serviceName == "Asset Micro-Service"),"serviceName property is not same as Asset Micro-Service"
log.info("Verified serviceName field in JSON response")
}
else
	{
		testRunner.fail("Version API Response is null")
	}



def response4 = context.expand( '${Step1_GetAssetServiceVersion_Request#Response}' ).toString()
if(response4 != "")
{
def slurper4 = new JsonSlurper()
def jsonResponse4 = slurper4.parseText response4
//def serviceProvider = context.expand( '${#TestSuite#serviceProvider}' )
log.info("Verifying serviceProvider field in JSON response")
assert (jsonResponse4.serviceProvider != null)
assert (jsonResponse4.serviceProvider != "")
assert jsonResponse4.containsKey("serviceProvider"), "serviceProvider property not found in JSON response"
assert(jsonResponse4.serviceProvider == "Continuum LLC"),"serviceProvider property is not same as Asset Micro-Service"
log.info("Verified serviceProvider field in JSON response")
}
else
	{
		testRunner.fail("Version API Response is null")
	}

def response5 = context.expand( '${Step1_GetAssetServiceVersion_Request#Response}' ).toString()
if(response5 != "")
{
def slurper5 = new JsonSlurper()
def jsonResponse5 = slurper5.parseText response5
//def serviceVersion = context.expand( '${#TestSuite#serviceVersion}' )

log.info("Verifying serviceVersion field in JSON response")
assert (jsonResponse5.serviceVersion != null)
assert (jsonResponse5.serviceVersion != "")
assert jsonResponse5.containsKey("serviceVersion"), "serviceVersion property not found in JSON response"




log.info("Verified serviceVersion field in JSON response.")
}
else
	{
		testRunner.fail("Version API Response is null")
	}


def response6 = context.expand( '${Step1_GetAssetServiceVersion_Request#Response}' ).toString()
if(response6 != "")
{
def slurper6 = new JsonSlurper()
def jsonResponse6 = slurper6.parseText response6
//def buildNumber = context.expand( '${#TestSuite#buildNumber}' )
log.info("Verifying buildNumber field in JSON response")
assert (jsonResponse6.buildNumber != null)
//assert (jsonResponse.buildNumber != "")
assert jsonResponse6.containsKey("buildNumber"), "buildNumber property not found in JSON response"

}
else
	{
		testRunner.fail("Version API Response is null")
	}


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>serverHost</con:name><con:value>http://internal-continuum-asset-service-elb-int-1972580147.ap-south-1.elb.amazonaws.com</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite id="478a2b49-ad40-4e72-aa0d-51df5db878b2" name="Performance Versioning API Validation TestSuite"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="98a12e2c-81ee-4aa1-b28b-9331ab2ba100" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C1448269-Validate REST endpoint for Version API" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Step1_GetPerformanceServiceVersion_Request" id="8d6fde72-663d-46bc-9391-5c19bc6cc7e0"><con:settings/><con:config service="REST Service 4" resourcePath="/performance/version" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1_GetPerformanceServiceVersion_Request" id="606d8b24-0953-46dd-8866-7a72f9e93896" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#serverHost}</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="cfbdc48b-395c-43e9-8b18-5f88a4446420" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="e6a41afd-cec1-48a3-bcc1-eb1718a8e871" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C1448271-Validate REST response" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Step1_GetPerformanceServiceVersion_Request" id="3e6553b1-a79c-4f9e-9cc2-2ed8eb1811cd"><con:settings/><con:config service="REST Service 4" resourcePath="/performance/version" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1_GetPerformanceServiceVersion_Request" id="606d8b24-0953-46dd-8866-7a72f9e93896" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#serverHost}</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="9fe3f6eb-e832-4435-a271-c8cc99805667" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="f4d39660-6163-43dc-8877-1ee05d8e9dca" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version';
//ns1:Response[1]/ns1:buildCommitSHA[1]</con:xpath><con:element>buildCommitSHA</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version';
//ns1:Response[1]/ns1:buildNumber[1]</con:xpath><con:element>buildNumber</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version';
//ns1:Response[1]/ns1:name[1]</con:xpath><con:element>name</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>PerformanceServiceSolution</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version';
//ns1:Response[1]/ns1:repository[1]</con:xpath><con:element>repository</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>https://github.com/ContinuumLLC/platform-performance-service</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version';
//ns1:Response[1]/ns1:serviceName[1]</con:xpath><con:element>serviceName</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Performance Micro-Service</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version';
//ns1:Response[1]/ns1:serviceProvider[1]</con:xpath><con:element>serviceProvider</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Continuum LLC</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version';
//ns1:Response[1]/ns1:serviceVersion[1]</con:xpath><con:element>serviceVersion</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>v1.0</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version';
//ns1:Response[1]/ns1:supportedAPIVersions[1]/ns1:e[1]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>/v1</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version';
//ns1:Response[1]/ns1:type[1]</con:xpath><con:element>type</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>version</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version';
//ns1:Response[1]/ns1:timeStampUTC[1]</con:xpath><con:element>timeStampUTC</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/version">
   <buildCommitSHA>4ec7c2220b86e4baa9b53437eb13470cfd9b4835</buildCommitSHA>
   <buildNumber>4ec7c2220b86e4baa9b53437eb13470cfd9b4835</buildNumber>
   <name>PerformanceServiceSolution</name>
   <repository>https://github.com/ContinuumLLC/platform-performance-service</repository>
   <serviceName>Performance Micro-Service</serviceName>
   <serviceProvider>Continuum LLC</serviceProvider>
   <serviceVersion>v1.0</serviceVersion>
   <supportedAPIVersions>
      <e>/v1</e>
   </supportedAPIVersions>
   <timeStampUTC>2017-12-18T08:09:25.840959681Z</timeStampUTC>
   <type>version</type>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REST response validations" id="0e46db30-931b-4422-a1d2-09b92e9f3378"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import java.text.SimpleDateFormat
import org.joda.time.format.ISODateTimeFormat
import org.joda.time.DateTime
def response = context.expand('${Step1_GetPerformanceServiceVersion_Request#Response}')
if(response != "")
{
log.info("Verifying timeStampUTC field in JSON response")
def jsonResponse = new JsonSlurper().parseText(response)
def timeStampUTC = jsonResponse.timeStampUTC
assert jsonResponse.containsKey('timeStampUTC'), "timeStampUTC field not found"
assert timeStampUTC.trim() != "", "timeStampUTC field is empty"
def dateTimeFormatStr = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
 assert(ISODateTimeFormat.dateTimeParser().parseDateTime(timeStampUTC)),"timeStampUTC is not in format: " + dateTimeFormatStr
 log.info("Verified timeStampUTC field in JSON performance version response")
}

else
	{
		testRunner.fail("Version API Response is null")
	}



def response1 = context.expand( '${Step1_GetPerformanceServiceVersion_Request#Response}' ).toString()
if(response1 != "")
{
def slurper1 = new JsonSlurper()
def jsonResponse1 = slurper1.parseText response1
//def name = context.expand( '${#TestSuite#name}' )
log.info("Verifying name field in JSON response")
assert (jsonResponse1.name != null)
assert (jsonResponse1.name != "")
assert jsonResponse1.containsKey("name"), "Name property not found in JSON response"
assert(jsonResponse1.name == "PerformanceServiceSolution"),"Name property is not same as PerformanceServiceSolution"
log.info("Verified name field in JSON response")
}
else
	{
		testRunner.fail("Version API Response is null")
	}



def response2 = context.expand( '${Step1_GetPerformanceServiceVersion_Request#Response}' ).toString()
if(response2 != "")
{
def slurper2 = new JsonSlurper()
def jsonResponse2 = slurper2.parseText response2
//def type = context.expand( '${#TestSuite#type}' )
log.info("Verifying type field in JSON response")
assert (jsonResponse2.type != null)
assert (jsonResponse2.type != "")
assert jsonResponse2.containsKey("type"), "type property not found in JSON response"
assert(jsonResponse2.type == "version"),"type property is not same as Version"
log.info("Verified type field in JSON response")
}
else
	{
		testRunner.fail("Version API Response is null")
	}



def response3 = context.expand( '${Step1_GetPerformanceServiceVersion_Request#Response}' ).toString()
if(response3 != "")
{
def slurper3 = new JsonSlurper()
def jsonResponse3 = slurper3.parseText response3
//def serviceName = context.expand( '${#TestSuite#serviceName}' )
log.info("Verifying serviceName field in JSON response")
assert (jsonResponse3.serviceName != null)
assert (jsonResponse3.serviceName != "")
assert jsonResponse3.containsKey("serviceName"), "serviceName property not found in JSON response"
assert(jsonResponse3.serviceName == "Performance Micro-Service"),"serviceName property is not same as Performance Micro-Service"
log.info("Verified serviceName field in JSON response")
}
else
	{
		testRunner.fail("Version API Response is null")
	}



def response4 = context.expand( '${Step1_GetPerformanceServiceVersion_Request#Response}' ).toString()
if(response4 != "")
{
def slurper4 = new JsonSlurper()
def jsonResponse4 = slurper4.parseText response4
//def serviceProvider = context.expand( '${#TestSuite#serviceProvider}' )
log.info("Verifying serviceProvider field in JSON response")
assert (jsonResponse4.serviceProvider != null)
assert (jsonResponse4.serviceProvider != "")
assert jsonResponse4.containsKey("serviceProvider"), "serviceProvider property not found in JSON response"
assert(jsonResponse4.serviceProvider == "Continuum LLC"),"serviceProvider property is not same as Asset Micro-Service"
log.info("Verified serviceProvider field in JSON response")
}
else
	{
		testRunner.fail("Version API Response is null")
	}

def response5 = context.expand( '${Step1_GetPerformanceServiceVersion_Request#Response}' ).toString()
if(response5 != "")
{
def slurper5 = new JsonSlurper()
def jsonResponse5 = slurper5.parseText response5
//def serviceVersion = context.expand( '${#TestSuite#serviceVersion}' )

log.info("Verifying serviceVersion field in JSON response")
assert (jsonResponse5.serviceVersion != null)
assert (jsonResponse5.serviceVersion != "")
assert jsonResponse5.containsKey("serviceVersion"), "serviceVersion property not found in JSON response"




log.info("Verified serviceVersion field in JSON response.")
}
else
	{
		testRunner.fail("Version API Response is null")
	}


def response6 = context.expand( '${Step1_GetPerformanceServiceVersion_Request#Response}' ).toString()
if(response6 != "")
{
def slurper6 = new JsonSlurper()
def jsonResponse6 = slurper6.parseText response6
//def buildNumber = context.expand( '${#TestSuite#buildNumber}' )
log.info("Verifying buildNumber field in JSON response")
assert (jsonResponse6.buildNumber != null)
//assert (jsonResponse.buildNumber != "")
assert jsonResponse6.containsKey("buildNumber"), "buildNumber property not found in JSON response"

}
else
	{
		testRunner.fail("Version API Response is null")
	}


</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>serverHost</con:name><con:value>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite id="6da9e2ed-4173-484a-91f6-bb21a6339876" name="Asset healthCheck API Validation TestSuite"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="8d29cf26-e1d9-421d-8986-982368c92f98" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C1388649-Validate REST endpoint for Health Check API" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Step1_GetAssetServiceHealthCheck_Request" id="e1f0ac4c-1e1b-4cab-bdf8-826fbfa539dc"><con:settings/><con:config service="REST Service 5" resourcePath="/asset/healthCheck" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1_GetAssetServiceHealthCheck_Request" id="3822f877-35d0-4cd6-90cc-b36b306d08dd" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#serverHost}</con:endpoint><con:request/><con:originalUri>http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/asset/healthCheck</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="361ea47a-6e92-442c-bfbb-275490ac5c4f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="08e31499-bb04-4886-8566-0a353bf639b3" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C1388653-Validate REST response" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Step1_GetAssetServiceHealthCheck_Request" id="6da7dfaf-f001-4949-8485-1e9cdb443eaf"><con:settings/><con:config service="REST Service 5" resourcePath="/asset/healthCheck" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1_GetAssetServiceHealthCheck_Request" id="3822f877-35d0-4cd6-90cc-b36b306d08dd" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#serverHost}</con:endpoint><con:request/><con:originalUri>http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/asset/healthCheck</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="33779149-71a3-4edf-a2ae-31c27f3abe14" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="REST response validations" id="fd4caa99-3523-4342-ac67-0536bb8f0b2b"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import java.text.SimpleDateFormat
import org.joda.time.format.ISODateTimeFormat
import org.joda.time.DateTime
def response = context.expand('${Step1_GetAssetServiceHealthCheck_Request#Response}')
if(response != "")
{
log.info("Verifying timeStampUTC field in JSON response")
def jsonResponse = new JsonSlurper().parseText(response)
def timeStampUTC = jsonResponse.timeStampUTC
assert jsonResponse.containsKey('timeStampUTC'), "timeStampUTC field not found"
assert timeStampUTC.trim() != "", "timeStampUTC field is empty"
def dateTimeFormatStr = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
 assert(ISODateTimeFormat.dateTimeParser().parseDateTime(timeStampUTC)),"timeStampUTC is not in format: " + dateTimeFormatStr
 log.info("Verified timeStampUTC field in JSON asset healthcheck response")
}
else
	{
		testRunner.fail("HealthCheck API Response is null")
	}


def response1 = context.expand( '${Step1_GetAssetServiceHealthCheck_Request#Response}' ).toString()
if(response1 != "")
{
def slurper1 = new JsonSlurper()
def jsonResponse1 = slurper1.parseText response1

log.info("Verifying name field in JSON response")
assert (jsonResponse1.name != null)
assert (jsonResponse1.name != "")
assert jsonResponse1.containsKey("name"), "Name property not found in JSON response"
assert(jsonResponse1.name == "AssetServiceSolution"),"Name property is not same as AssetServiceSolution"
log.info("Verified name field in JSON response")
}
else
	{
		testRunner.fail("HealthCheck API Response is null")
	}


def response2 = context.expand( '${Step1_GetAssetServiceHealthCheck_Request#Response}' ).toString()
if(response2 != "")
{
def slurper2 = new JsonSlurper()
def jsonResponse2 = slurper2.parseText response2

log.info("Verifying type field in JSON response")
assert (jsonResponse2.type != null)
assert (jsonResponse2.type != "")
assert jsonResponse2.containsKey("type"), "type property not found in JSON response"
assert(jsonResponse2.type == "HealthCheck"),"type property is not same as Version"
log.info("Verified type field in JSON response")
}
else
	{
		testRunner.fail("HealthCheck API Response is null")
	}

def response3 = context.expand( '${Step1_GetAssetServiceHealthCheck_Request#Response}' ).toString()
if(response3 != "")
{
def slurper3 = new JsonSlurper()
def jsonResponse3 = slurper3.parseText response3

log.info("Verifying serviceName field in JSON response")
assert (jsonResponse3.serviceName != null)
assert (jsonResponse3.serviceName != "")
assert jsonResponse3.containsKey("serviceName"), "serviceName property not found in JSON response"
assert(jsonResponse3.serviceName == "Asset Micro-Service"),"serviceName property is not same as Asset Micro-Service"
log.info("Verified serviceName field in JSON response")
}
else
	{
		testRunner.fail("HealthCheck API Response is null")
	}


def response4 = context.expand( '${Step1_GetAssetServiceHealthCheck_Request#Response}' ).toString()
if(response4 != "")
{
def slurper4 = new JsonSlurper()
def jsonResponse4 = slurper4.parseText response4

log.info("Verifying serviceProvider field in JSON response")
assert (jsonResponse4.serviceProvider != null)
assert (jsonResponse4.serviceProvider != "")
assert jsonResponse4.containsKey("serviceProvider"), "serviceProvider property not found in JSON response"
assert(jsonResponse4.serviceProvider == "Continuum LLC"),"serviceProvider property is not same as Asset Micro-Service"
log.info("Verified serviceProvider field in JSON response")
}
else
	{
		testRunner.fail("HealthCheck API Response is null")
	}


def response5 = context.expand( '${Step1_GetAssetServiceHealthCheck_Request#Response}' ).toString()
if(response5 != "")
{
def slurper5 = new JsonSlurper()
def jsonResponse5 = slurper5.parseText response5


log.info("Verifying serviceVersion field in JSON response")
assert (jsonResponse5.serviceVersion != null)
assert (jsonResponse5.serviceVersion != "")
assert jsonResponse5.containsKey("serviceVersion"), "serviceVersion property not found in JSON response"




log.info("Verified serviceVersion field in JSON response")
}
else
	{
		testRunner.fail("HealthCheck API Response is null")
	}


def response6 = context.expand( '${Step1_GetAssetServiceHealthCheck_Request#Response}' ).toString()
if(response6 != "")
{
def slurper6 = new JsonSlurper()
def jsonResponse6 = slurper6.parseText response6

log.info("Verifying buildNumber field in JSON response")
assert (jsonResponse6.buildNumber != null)

assert jsonResponse6.containsKey("buildNumber"), "buildNumber property not found in JSON response"

log.info("Verified buildNumber field in JSON response")
}
else
	{
		testRunner.fail("HealthCheck API Response is null")
	}




def response7 = context.expand( '${Step1_GetAssetServiceHealthCheck_Request#Response}' ).toString()
if(response7 != "")
{
def slurper7 = new JsonSlurper()
def jsonResponse7 = slurper7.parseText response7
assert (jsonResponse7.networkInterfaces != null)
assert (jsonResponse7.networkInterfaces != "")
assert jsonResponse7.containsKey("networkInterfaces"), "networkInterfaces property not found in JSON response"
def jsonResponse8 = new JsonSlurper().parseText(response7).networkInterfaces

assert jsonResponse8.size() > 0, "Response is empty"
}
else
	{
		testRunner.fail("HealthCheck API Response is null")
	}
//


def response9 = context.expand( '${Step1_GetAssetServiceHealthCheck_Request#Response}' ).toString()
if(response9 != "")
{
def slurper9 = new JsonSlurper()
def jsonResponse9 = slurper9.parseText response9

log.info("Verifying status field in JSON response")
assert (jsonResponse9.status != null)

assert jsonResponse9.containsKey("status"), "status property not found in JSON response"

log.info("Verified status field in JSON response")
}
else
	{
		testRunner.fail("HealthCheck API Response is null")
	}

//


def response10 = context.expand( '${Step1_GetAssetServiceHealthCheck_Request#Response}' ).toString()
if(response10 != "")
{
def slurper10 = new JsonSlurper()
def jsonResponse10 = slurper10.parseText response10

log.info("Verifying startTime field in JSON response")
assert (jsonResponse10.startTime != null)

assert jsonResponse10.containsKey("startTime"), "startTime property not found in JSON response"

log.info("Verified startTime field in JSON response")
}
else
	{
		testRunner.fail("HealthCheck API Response is null")
	}

//

def response11 = context.expand( '${Step1_GetAssetServiceHealthCheck_Request#Response}' ).toString()
if(response11 != "")
{
def slurper11 = new JsonSlurper()
def jsonResponse11 = slurper11.parseText response11

log.info("Verifying cpuPercentage field in JSON response")
assert (jsonResponse11.cpuPercentage != null)

assert jsonResponse11.containsKey("cpuPercentage"), "cpuPercentage property not found in JSON response"

log.info("Verified cpuPercentage field in JSON response")
}
else
	{
		testRunner.fail("HealthCheck API Response is null")
	}


//


def response12 = context.expand( '${Step1_GetAssetServiceHealthCheck_Request#Response}' ).toString()
if(response12 != "")
{
def slurper12 = new JsonSlurper()
def jsonResponse12 = slurper12.parseText response12

log.info("Verifying numOfOSThreads field in JSON response")
assert (jsonResponse12.numOfOSThreads != null)

assert jsonResponse12.containsKey("numOfOSThreads"), "numOfOSThreads property not found in JSON response"

log.info("Verified numOfOSThreads field in JSON response")
}
else
	{
		testRunner.fail("HealthCheck API Response is null")
	}

//



def response13 = context.expand( '${Step1_GetAssetServiceHealthCheck_Request#Response}' ).toString()
if(response13 != "")
{
def slurper13 = new JsonSlurper()
def jsonResponse13 = slurper13.parseText response13

log.info("Verifying memoryPercentage field in JSON response")
assert (jsonResponse13.memoryPercentage != null)

assert jsonResponse13.containsKey("memoryPercentage"), "memoryPercentage property not found in JSON response"

log.info("Verified memoryPercentage field in JSON response")
}
else
	{
		testRunner.fail("HealthCheck API Response is null")
	}
</script></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>serverHost</con:name><con:value>http://internal-continuum-asset-service-elb-int-1972580147.ap-south-1.elb.amazonaws.com</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite id="3aab6547-ca5f-46e8-b46a-4a00a253c76d" name="Performance healthCheck API Validation TestSuite"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="9897d369-509c-44d8-8277-ac7b1097c4f1" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C1448266-Validate REST endpoint for Health Check API" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Step1_GetPerformanceServiceHealthCheck_Request" id="f99f25c9-d886-4e79-88cf-844ac4e27ee5"><con:settings/><con:config service="REST Service 6" resourcePath="/performance/health" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1_GetPerformanceServiceHealthCheck_Request" id="7cda8296-ff08-480a-82a0-4851eb576b1b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#serverHost}</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="4bf62364-30b4-41bd-af39-71dd636411c1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase id="2ffcc26f-95a1-4b84-a3f7-b81e7dbed542" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C1448267-Validate REST response" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Step1_GetPerformanceServiceHealthCheck_Request" id="d0fed314-da0a-4ec9-9f13-b7fc24f5afe5"><con:settings/><con:config service="REST Service 6" resourcePath="/performance/health" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1_GetPerformanceServiceHealthCheck_Request" id="7cda8296-ff08-480a-82a0-4851eb576b1b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#serverHost}</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck</con:originalUri><con:assertion type="MessageContentAssertion" id="67751a3e-55e9-4f92-bfcf-75e37d69129a" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"/></con:assertion><con:assertion type="MessageContentAssertion" id="4de7df8c-ce0d-4c82-b93b-475bbc74acd8" name="Message Content Assertion 2"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:type[1]</con:xpath><con:element>type</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>health</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:status[1]</con:xpath><con:element>status</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Running</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:serviceVersion[1]</con:xpath><con:element>serviceVersion</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>v1.0</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:serviceProvider[1]</con:xpath><con:element>serviceProvider</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Continuum LLC</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:serviceName[1]</con:xpath><con:element>serviceName</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Performance Micro-Service</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:type[1]</con:xpath><con:element>type</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>OutboundConnectionStatus</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:name[1]</con:xpath><con:element>name</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Performance Micro-Service-OutboundConnectionStatus</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:connectionURLs[1]/ns1:e[1]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.48.173:9092</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:connectionURLs[1]/ns1:e[2]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.48.78:9092</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:connectionURLs[1]/ns1:e[3]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.49.107:9092</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:connectionURLs[1]/ns1:e[4]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.49.135:9092</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:connectionStatus[1]</con:xpath><con:element>connectionStatus</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Active</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:connectionType[1]</con:xpath><con:element>connectionType</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Kafka</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:type[1]</con:xpath><con:element>type</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>OutboundConnectionStatus</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:name[1]</con:xpath><con:element>name</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Performance Micro-Service-OutboundConnectionStatus</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:connectionURLs[1]/ns1:e[4]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.49.233:9042</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:connectionURLs[1]/ns1:e[3]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.49.69:9042</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:connectionURLs[1]/ns1:e[2]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.48.60:9042</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:connectionURLs[1]/ns1:e[1]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.48.6:9042</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:connectionStatus[1]</con:xpath><con:element>connectionStatus</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Active</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:connectionType[1]</con:xpath><con:element>connectionType</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Cassandra</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:networkInterfaces[1]/ns1:e[1]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>127.0.0.1:80</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:networkInterfaces[1]/ns1:e[2]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.49.195:80</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck';
//ns1:Response[1]/ns1:name[1]</con:xpath><con:element>name</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>PerformanceServiceSolution</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/healthCheck">
   <lastStartTimeUTC>2017-12-15T12:42:14.397418177Z</lastStartTimeUTC>
   <name>PerformanceServiceSolution</name>
   <networkInterfaces>
      <e>127.0.0.1:80</e>
      <e>172.28.49.195:80</e>
   </networkInterfaces>
   <outboundConnectionStatus>
      <e>
         <connectionStatus>Active</connectionStatus>
         <connectionType>Cassandra</connectionType>
         <connectionURLs>
            <e>172.28.48.6:9042</e>
            <e>172.28.48.60:9042</e>
            <e>172.28.49.69:9042</e>
            <e>172.28.49.233:9042</e>
         </connectionURLs>
         <name>Performance Micro-Service-OutboundConnectionStatus</name>
         <timeStampUTC>2017-12-18T08:31:13.153949743Z</timeStampUTC>
         <type>OutboundConnectionStatus</type>
      </e>
      <e>
         <connectionStatus>Active</connectionStatus>
         <connectionType>Kafka</connectionType>
         <connectionURLs>
            <e>172.28.48.173:9092</e>
            <e>172.28.48.78:9092</e>
            <e>172.28.49.107:9092</e>
            <e>172.28.49.135:9092</e>
         </connectionURLs>
         <name>Performance Micro-Service-OutboundConnectionStatus</name>
         <timeStampUTC>2017-12-18T08:31:13.153949743Z</timeStampUTC>
         <type>OutboundConnectionStatus</type>
      </e>
   </outboundConnectionStatus>
   <serviceName>Performance Micro-Service</serviceName>
   <serviceProvider>Continuum LLC</serviceProvider>
   <serviceVersion>v1.0</serviceVersion>
   <status>Running</status>
   <timeStampUTC>2017-12-18T08:31:13.153949448Z</timeStampUTC>
   <type>health</type>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>serverHost</con:name><con:value>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite id="8126974f-e503-415a-b085-f6e551495ba2" name="Performance Collection API Validation TestSuite"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="13290623-6767-416b-a15b-ca516a606e04" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C1712139-Validate REST Endpoint for Performance Collection" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="delay" name="Delay" id="12218ab5-aa5a-4b4f-9068-80434c8f0f24"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step1_Performance_Collection_request" id="355ed758-96a9-4cd0-bb12-13269cc44de8"><con:settings/><con:config service="REST Service 8" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointid}/performanceCollection" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1_Performance_Collection_request" id="74964b24-7f95-41dc-b293-4c1752dc9515" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#serverHost}</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/v1/4773860b-efbd-4001-8ff5-d884d00c2826/performanceCollection</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f7994b18-b794-4d4e-a9ce-34d4ad121d17" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="7bd986b6-2ff0-44d2-9ea9-f9a339816a78" name="JsonPath Match"><con:configuration><path>$['endpointID']</path><content>${Step1_Performance_Collection_request#endpointid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="17dcbfed-95cc-46e1-bf28-478c4002edd3" name="JsonPath Match 2"><con:configuration><path>$['partnerID']</path><content>${Step1_Performance_Collection_request#partnerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointid" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>partnerId</con:entry><con:entry>endpointid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b26dae98-eaa7-4772-9329-41f3435992ae</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>12218ab5-aa5a-4b4f-9068-80434c8f0f24</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="f404af2f-5f98-4c35-b25f-eabd9903a74b" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C1712140-Validate Response format for Performance Collection API" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="delay" name="Delay" id="b0cae7f6-7094-4621-866c-74e6e4e7ffbe"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step1_Performance_Collection_request" id="b89aa4a0-8095-4833-9352-d22d4db4f7b1"><con:settings/><con:config service="REST Service 8" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointid}/performanceCollection" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1_Performance_Collection_request" id="74964b24-7f95-41dc-b293-4c1752dc9515" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#TestSuite#serverHost}</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-1199294839.us-east-1.elb.amazonaws.com/performance/v1/4773860b-efbd-4001-8ff5-d884d00c2826/performanceCollection</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f7994b18-b794-4d4e-a9ce-34d4ad121d17" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="0fdedcd1-ae75-4bac-83cc-553d5353e4e1" name="JsonPath Count"><con:configuration><path>$['processors'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="64ea85d6-27b9-428d-b10e-668e23916cef" name="JsonPath Count 2"><con:configuration><path>$['memory'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="bef59b2e-db54-4422-aa43-21689ad79a81" name="JsonPath Count 3"><con:configuration><path>$['storages'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="798040dc-0c7f-45fb-8da8-587ab50d5c20" name="JsonPath Count 4"><con:configuration><path>$['network'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="bb557188-6665-450f-a113-b653039fbdc8" name="JsonPath Count 5"><con:configuration><path>$['processes'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c5928a7a-6cd5-4c96-b9e7-324a0de90946" name="JsonPath Match"><con:configuration><path>$['name']</path><content>performanceCollection</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="36b5d29c-827b-47ac-9e59-6180ffebabbb" name="JsonPath Match 2"><con:configuration><path>$['type']</path><content>performanceCollection</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2038da66-4b38-4f64-82e1-6969a7b518b1" name="JsonPath Match 3"><con:configuration><path>$['processors'][0]['endpointID']</path><content>${Step1_Performance_Collection_request#endpointid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b8f89667-5a01-4f31-a1c9-da25cd958048" name="JsonPath Match 4"><con:configuration><path>$['processors'][0]['partnerID']</path><content>${Step1_Performance_Collection_request#partnerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="02fa63a2-270e-4fe5-9735-e4efbdd28224" name="JsonPath Match 5"><con:configuration><path>$['memory'][0]['endpointID']</path><content>${Step1_Performance_Collection_request#endpointid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e0e30661-f373-4b72-a72a-f1cee34ce055" name="JsonPath Match 6"><con:configuration><path>$['memory'][0]['partnerID']</path><content>${Step1_Performance_Collection_request#partnerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="c4e10511-2f5d-45a8-934a-4a26c28bd3e4" name="JsonPath Match 7"><con:configuration><path>$['storages'][0]['endpointID']</path><content>${Step1_Performance_Collection_request#endpointid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="d1e747f9-d4c6-4b5c-8178-e24423de590a" name="JsonPath Match 8"><con:configuration><path>$['storages'][0]['partnerID']</path><content>${Step1_Performance_Collection_request#partnerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="490adc0a-9cea-4e29-8bb2-eaf9b8d0bf60" name="JsonPath Match 9"><con:configuration><path>$['network'][0]['endpointID']</path><content>${Step1_Performance_Collection_request#endpointid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3cb64059-a731-4f71-a543-6c308dbc5e15" name="JsonPath Match 10"><con:configuration><path>$['network'][0]['partnerID']</path><content>${Step1_Performance_Collection_request#partnerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a6997772-6d14-45fc-8f5f-37be0829f6a2" name="JsonPath Match 11"><con:configuration><path>$['processes'][0]['endpointID']</path><content>${Step1_Performance_Collection_request#endpointid}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a8f552fb-1be3-4e56-803e-74f1205a418d" name="JsonPath Match 12"><con:configuration><path>$['processes'][0]['partnerID']</path><content>${Step1_Performance_Collection_request#partnerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointid" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>partnerId</con:entry><con:entry>endpointid</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties_createdBy" id="76ee77ed-c077-4c8d-b407-d50c02e046d9"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>createdBy</con:name><con:value>/continuum/agent/plugin/performance</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties_name" id="f61d4895-d4d0-4cb2-80c6-45b1f56c6822"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>name</con:name><con:value>performanceCollection</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="properties" name="Properties_type" id="34451241-ebef-46ba-a4e3-0152ac780c73"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>type</con:name><con:value>performanceCollection</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="groovy" name="Step2_response_format_validation" id="fd34b42f-610e-43a1-b41c-40683a0eef27"><con:settings/><con:config><script>import groovy.json.JsonSlurper
import java.text.SimpleDateFormat
import org.joda.time.format.ISODateTimeFormat
import org.joda.time.DateTime

createdByProperty = context.expand( '${Properties_createdBy#createdBy}')
nameProperty = context.expand( '${Properties_name#name}')
typeProperty = context.expand( '${Properties_type#type}')

def response = context.expand('${Step1_Performance_Collection_request#Response}')
def assertionList = []
if(!(response.size() > 0)) {assertionList.add("Response is empty!")}
if(response != "")
{
log.info("Verifying Performance_Collection JSON response format")
def jsonObj = new JsonSlurper().parseText(response)

if(!(jsonObj.containsKey("createTimeUTC"))) { assertionList.add("createTimeUTC not found in response") }

def createTimeUTC = jsonObj.createTimeUTC
if(!(createTimeUTC.trim() != "")) { assertionList.add("createTimeUTC field is empty")}
def dateTimeFormatStr = "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
if(!(ISODateTimeFormat.dateTimeParser().parseDateTime(createTimeUTC))) { assertionList.add("createTimeUTC is not in format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'")}
 

if(!(jsonObj.containsKey("createdBy"))) { assertionList.add("createTimeUTC not found in response") }

//assert jsonObj.createdBy != null, "createdBy property in JSON response is null"
//assert jsonObj.createdBy==createdByProperty ,"createdBy field value is invalid"

if(!( jsonObj.containsKey("name"))) { assertionList.add("name not found in response") }
if(!( jsonObj.name != null )){ assertionList.add("name property in JSON response is null") }
if(!( jsonObj.name==nameProperty )) { assertionList.add("name field value is invalid") }

if(!( jsonObj.containsKey("type") )) { assertionList.add("type not found in response") }
if(!( jsonObj.type != null)) { assertionList.add("type property in JSON response is null") }
if(!( jsonObj.type==typeProperty)) { assertionList.add("type field value is invalid") }

if(!( jsonObj.containsKey("processors"))) { assertionList.add("processors not found in response") }
if(!( jsonObj.containsKey("memory"))) { assertionList.add("memory not found in response") }
if(!( jsonObj.containsKey("storages"))) { assertionList.add("storages not found in response") }
if(!( jsonObj.containsKey("network"))) { assertionList.add("network not found in response") }
if(!( jsonObj.containsKey("processes"))) { assertionList.add("processes not found in response") }

def processorsArray = jsonObj.processors
if(!( processorsArray.size > 0)) { assertionList.add("processors array is empty") }

def memoryArray = jsonObj.memory
if(!( memoryArray.size > 0)) { assertionList.add("memory array is empty") }

def storagesArray = jsonObj.storages
if(!( storagesArray.size > 0)) { assertionList.add("storages array is empty") }

def networkArray = jsonObj.network
if(!( networkArray.size > 0)) { assertionList.add("network array is empty") }

def processesArray = jsonObj.processes
if(!( processesArray.size > 0)) { assertionList.add("processes array is empty") }

assert assertionList.isEmpty() : assertionList.toString()

log.info("Verified Performance_Collection JSON response API format")

}
</script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>0c408f59-ee8a-441b-b385-4c74d6e7f0a0</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>ffe17111-43ae-478e-945a-7cf2d93f6b7b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b89aa4a0-8095-4833-9352-d22d4db4f7b1</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>b0cae7f6-7094-4621-866c-74e6e4e7ffbe</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties><con:property><con:name>serverHost</con:name><con:value>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite id="980c0efa-119e-4752-be19-b062852b31f7" name="Asset API To Fetch Response based on PartnerID and EndPointID"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="bd27fbaa-6b91-4597-8c93-e8e6bd545686" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C1836756- Validate Response Code of REST EndPoint Based on Partner Id" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="delay" name="Delay" id="15909342-2ac7-4780-9ad2-cee91b282b1d"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Get_Request_PartnerId_AssetAPI" id="0aea63ec-ec24-43a0-ac0d-eced237902f3"><con:settings/><con:config service="REST Service 9" resourcePath="/asset/v1/partner/{partnerId}/endpoints" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Request_PartnerId_AssetAPI" id="1c3e36a0-ae2d-4689-9be7-4abbbd860aae" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-Continuum-Asset-Service-ELB-Int-1972580147.ap-south-1.elb.amazonaws.com/</con:endpoint><con:request/><con:originalUri>http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints</con:originalUri><con:assertion type="GroovyScriptAssertion" id="a90cbd5a-c876-4393-84af-83d1133d2f58" name="Script Assertion"><con:configuration><scriptText>import groovy.json.JsonSlurper 
def response = context.expand('${Get_Request_PartnerId_AssetAPI#Response}').toString()
def assertionList = []
if(!(response.size() > 0)) {assertionList.add("Asset collection JSON response is empty!")}
if(response != "")
{
def slurper = new JsonSlurper()
def jsonResponse = slurper.parseText response
log.info("Verifying asset collection in JSON response")
if(!( jsonResponse.size > 0)) { assertionList.add("partnerID array is empty") }
assert assertionList.isEmpty() : assertionList.toString()
log.info("Verified asset collection in JSON response")
}</scriptText></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="87e0c5eb-23a5-460c-b6e3-5d73404424ab" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><entry key="partnerId" value="${#Project#partnerId}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>partnerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>15909342-2ac7-4780-9ad2-cee91b282b1d</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:testCase id="14464fb3-3d87-4a37-9e0b-edff6deb976d" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C1884381-Validate Response Code of REST API for Fetching Partner ID of specific endpoint" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="delay" name="Delay" id="6628ec23-305a-49f3-ba09-f2aec2349ea5"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Get_Request_PartnerId_EndpointID" id="e37d24fe-3bc0-40de-bfd2-116e60f105bd"><con:settings/><con:config service="REST Service 10" resourcePath="/asset/v1/partner/{partnerId}/endpoints/{endpointId}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get_Request_PartnerId_EndpointID" id="9758e8ca-eadc-4fe9-a002-a9a8b059150d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-Continuum-Asset-Service-ELB-Int-1972580147.ap-south-1.elb.amazonaws.com/</con:endpoint><con:request/><con:originalUri>http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819</con:originalUri><con:assertion type="JsonPath Existence Match" id="f5fca0a0-a9a7-45f7-9fd9-6f38c8f2042b" name="JsonPath Existence Match 2"><con:configuration><path>$['createdBy']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f31888a8-186b-44de-8684-ac3505be1b3e" name="JsonPath Existence Match"><con:configuration><path>$['createTimeUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4a246adf-683b-4cf5-b801-c2de0ad6b2cb" name="JsonPath Existence Match 5"><con:configuration><path>$['clientID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="96244af0-7791-4d64-96bf-b0ae11a6afdf" name="JsonPath Existence Match 6"><con:configuration><path>$['regID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7ec7155a-b6ba-4208-8f20-650ec37d8223" name="JsonPath Existence Match 7"><con:configuration><path>$['friendlyName']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a0b4600d-5ef0-4daf-9a52-85d2cf0153a0" name="JsonPath Existence Match 8"><con:configuration><path>$['remoteAddress']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3882c121-a976-4c0e-9f5e-2a463adc7b71" name="JsonPath Existence Match 9"><con:configuration><path>$['baseBoard']['product']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="350dcdc3-bcf7-48b1-9a40-34deadf83df7" name="JsonPath Existence Match 10"><con:configuration><path>$['baseBoard']['manufacturer']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="26769272-813e-403d-a1b8-846a7b066c2d" name="JsonPath Existence Match 11"><con:configuration><path>$['baseBoard']['model']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="dd874126-e352-4d61-828e-5dcc1daaa10d" name="JsonPath Existence Match 12"><con:configuration><path>$['baseBoard']['serialNumber']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5898ca5d-2b84-4265-8328-8a9d5af9ba6a" name="JsonPath Existence Match 13"><con:configuration><path>$['baseBoard']['version']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9a4bbe4e-ff4b-4a60-a755-19718619d49c" name="JsonPath Existence Match 14"><con:configuration><path>$['baseBoard']['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8ee814a7-a01a-4dc1-8f5e-e8ed444b3fa4" name="JsonPath Existence Match 15"><con:configuration><path>$['baseBoard']['installDate']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c5deca54-8dbc-4296-be64-8e3e3b050b9e" name="JsonPath Existence Match 16"><con:configuration><path>$['bios']['product']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a968be6c-921d-4d7f-9b79-95adc417de7e" name="JsonPath Existence Match 17"><con:configuration><path>$['bios']['manufacturer']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0f43d909-ce11-4e9c-9e6a-f315a5c9acc0" name="JsonPath Existence Match 18"><con:configuration><path>$['bios']['version']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="616bd545-5b84-43d6-bb1b-2971726cd10b" name="JsonPath Existence Match 19"><con:configuration><path>$['bios']['serialNumber']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b3e8fe50-e2b6-406a-8ebc-6597695ad3a6" name="JsonPath Existence Match 20"><con:configuration><path>$['bios']['smbiosVersion']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8f9599d9-9627-4e98-80e0-62f46640c11b" name="JsonPath Existence Match 21"><con:configuration><path>$['drives'][0]['product']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="57e80f60-a79c-4fa4-a925-418d5a30be23" name="JsonPath Existence Match 22"><con:configuration><path>$['drives'][0]['manufacturer']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="22cd202e-66a6-471d-9d23-25e1e724c715" name="JsonPath Existence Match 23"><con:configuration><path>$['drives'][0]['mediaType']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5457baa1-69e5-4323-a57a-8eb6153d610a" name="JsonPath Existence Match 24"><con:configuration><path>$['drives'][0]['logicalName']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4e1b53df-a837-4e26-9496-682d82cc9d48" name="JsonPath Existence Match 25"><con:configuration><path>$['drives'][0]['serialNumber']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5f78f230-7e2a-4960-823b-91e6027afd62" name="JsonPath Existence Match 26"><con:configuration><path>$['drives'][0]['serialNumber']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e7a34d6c-12ca-4c59-a1b7-2cbfd80a612e" name="JsonPath Existence Match 27"><con:configuration><path>$['drives'][0]['partitions']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5a3b180c-166d-4ae0-8e6c-7e7db230ea74" name="JsonPath Existence Match 28"><con:configuration><path>$['drives'][0]['sizeBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09db5589-3609-46aa-af0d-be2f9e7b13f4" name="JsonPath Existence Match 29"><con:configuration><path>$['drives'][0]['numberOfPartitions']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="25876090-63a1-420f-807c-fd734d628158" name="JsonPath Existence Match 30"><con:configuration><path>$['drives'][0]['partitionData'][0]['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="470f5087-cecf-44bb-b615-53eec7e8e7ea" name="JsonPath Existence Match 31"><con:configuration><path>$['drives'][0]['partitionData'][0]['label']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2ea7401d-6949-44ba-99f4-82e22ab70107" name="JsonPath Existence Match 32"><con:configuration><path>$['drives'][0]['partitionData'][0]['fileSystem']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6a47e60e-05be-4933-baf7-c6f3a16d08a7" name="JsonPath Existence Match 33"><con:configuration><path>$['drives'][0]['partitionData'][0]['description']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="66ff2ed6-8812-436d-8cf4-cecf49f61f7c" name="JsonPath Existence Match 34"><con:configuration><path>$['drives'][0]['partitionData'][0]['sizeBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="53dbffe4-10f3-4b7d-9eb7-5d3d9d1a4e70" name="JsonPath Existence Match 35"><con:configuration><path>$['networks'][0]['vendor']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b6ad28fe-464b-441d-811b-fa6230e79ca3" name="JsonPath Existence Match 36"><con:configuration><path>$['networks'][0]['product']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8ef1a9ce-eae2-45d2-8b63-ec51969ed03a" name="JsonPath Existence Match 37"><con:configuration><path>$['networks'][0]['dhcpEnabled']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d03df9bc-17a6-42f3-80bb-ea42d0a286be" name="JsonPath Existence Match 38"><con:configuration><path>$['networks'][0]['dhcpServer']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8ed157e0-8cc8-44ce-aeab-9581e0dc19aa" name="JsonPath Existence Match 39"><con:configuration><path>$['networks'][0]['dhcpLeaseObtained']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e1550dcd-ae47-4396-811e-75286b20d1f0" name="JsonPath Existence Match 40"><con:configuration><path>$['networks'][0]['dhcpLeaseExpires']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="12db4842-e811-438b-b97e-8c7de39fafab" name="JsonPath Existence Match 41"><con:configuration><path>$['networks'][0]['dnsServers']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d48da61a-dc93-48a5-8941-57883ed29e61" name="JsonPath Existence Match 42"><con:configuration><path>$['networks'][0]['ipEnabled']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0e2cd1ac-89bc-44ea-902f-8f577abc27a7" name="JsonPath Existence Match 43"><con:configuration><path>$['networks'][0]['ipv4']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="90ff3d75-529d-4ff7-8852-1316673cfec3" name="JsonPath Existence Match 44"><con:configuration><path>$['networks'][0]['ipv4List']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="44b2802b-7cbc-4a1e-9056-46982cdb3c0a" name="JsonPath Existence Match 45"><con:configuration><path>$['networks'][0]['ipv6']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e325571a-877a-4238-8b18-a6c8003dd80c" name="JsonPath Existence Match 46"><con:configuration><path>$['networks'][0]['ipv6List']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="bbac397d-62a1-4de6-9b80-466984e92ecf" name="JsonPath Existence Match 47"><con:configuration><path>$['networks'][0]['subnetMask']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="396a8f3b-594f-4c57-b6bb-3680600edf86" name="JsonPath Existence Match 48"><con:configuration><path>$['networks'][0]['subnetMasks']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="838b1654-9c44-4bb9-bd75-0ab69393c520" name="JsonPath Existence Match 49"><con:configuration><path>$['networks'][0]['defaultIPGateway']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="043df7b1-e52a-4633-a27f-77e2a5c7afc5" name="JsonPath Existence Match 50"><con:configuration><path>$['networks'][0]['defaultIPGateways']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="36a25d24-b12c-4b5c-b5da-9b7184627960" name="JsonPath Existence Match 51"><con:configuration><path>$['networks'][0]['macAddress']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ac03fc85-be0b-4bd9-b19b-eb4520a3c1f4" name="JsonPath Existence Match 52"><con:configuration><path>$['networks'][0]['winsPrimaryServer']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ba0914aa-845e-40a0-b538-78e8b14a2fe4" name="JsonPath Existence Match 53"><con:configuration><path>$['networks'][0]['winsSecondaryServer']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="44dce227-ab0e-4e5c-8ebd-9dae40352145" name="JsonPath Existence Match 54"><con:configuration><path>$['networks'][0]['logicalName']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0c4c504e-7ceb-4b04-b39b-429ebb74d3dd" name="JsonPath Existence Match 55"><con:configuration><path>$['os']['product']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e82c1f81-429b-4784-8918-9c4504576565" name="JsonPath Existence Match 56"><con:configuration><path>$['os']['manufacturer']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b43d6f92-ce62-4860-8f48-09ff6e8e9aae" name="JsonPath Existence Match 57"><con:configuration><path>$['os']['osLanguage']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8c035172-8e64-4979-9000-cc5fe577a685" name="JsonPath Existence Match 58"><con:configuration><path>$['os']['serialNumber']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ab8b3f05-b0c6-47b1-9425-2814021b9855" name="JsonPath Existence Match 59"><con:configuration><path>$['os']['version']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="89c42ab9-522e-4aa0-8a6b-81b1fc9af534" name="JsonPath Existence Match 60"><con:configuration><path>$['os']['installDate']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d8278eee-7b60-4e13-b891-16bed1cb8210" name="JsonPath Existence Match 61"><con:configuration><path>$['os']['type']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="240e52cb-9cec-4123-9814-94b06e00123a" name="JsonPath Existence Match 62"><con:configuration><path>$['os']['arch']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3571b00c-0958-40d4-a246-dbcdf7a68268" name="JsonPath Existence Match 63"><con:configuration><path>$['os']['servicePack']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="bc264b32-5410-4d2e-9e65-d691759c2ec0" name="JsonPath Existence Match 64"><con:configuration><path>$['processors'][0]['product']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b51716a2-6ea5-4d13-b696-8866b9f8b57e" name="JsonPath Existence Match 65"><con:configuration><path>$['processors'][0]['numberOfCores']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="26f0c653-4b80-4c30-ab8b-4e2d3099b9dc" name="JsonPath Existence Match 66"><con:configuration><path>$['processors'][0]['clockSpeedMhz']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cb5e205-659c-415c-9bae-88eb5acf0115" name="JsonPath Existence Match 67"><con:configuration><path>$['processors'][0]['family']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="496c98a5-6e66-4ce8-8555-074f7404d7f2" name="JsonPath Existence Match 68"><con:configuration><path>$['processors'][0]['manufacturer']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="89a0235d-4c07-4e71-92fe-cf804ccdb389" name="JsonPath Existence Match 69"><con:configuration><path>$['processors'][0]['processorType']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="00ea6c44-91bc-4232-b28a-c38cc3f461ba" name="JsonPath Existence Match 70"><con:configuration><path>$['processors'][0]['serialNumber']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="49dc2498-c5a5-41f1-9a82-e86bb0d000d6" name="JsonPath Existence Match 71"><con:configuration><path>$['processors'][0]['level']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="acd9e2b2-1bee-4855-8b5f-a748998eec49" name="JsonPath Existence Match 72"><con:configuration><path>$['system']['product']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="19079fc6-71cc-49df-95a5-b8d2a92564b1" name="JsonPath Existence Match 73"><con:configuration><path>$['system']['model']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="93573804-7484-45c9-82c1-923527549e8e" name="JsonPath Existence Match 74"><con:configuration><path>$['system']['timeZone']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8e2c88ed-c8a8-4b1a-8dc3-21034da795a2" name="JsonPath Existence Match 75"><con:configuration><path>$['system']['timeZoneDescription']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e92618b1-b9d1-4122-9bc4-50a8b1f3388f" name="JsonPath Existence Match 76"><con:configuration><path>$['system']['serialNumber']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3a0eb936-ec6b-4fd2-9746-d95f0cdc0f28" name="JsonPath Existence Match 77"><con:configuration><path>$['system']['systemName']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6fb41090-068a-42ed-ab4e-42bc0b8471d9" name="JsonPath Existence Match 78"><con:configuration><path>$['system']['category']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="aa32eaa1-d6cd-441a-87f9-c625418ba8a3" name="JsonPath Existence Match 79"><con:configuration><path>$['installedSoftwares'][0]['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ff579399-a480-4f00-a73e-a82a23e035e3" name="JsonPath Existence Match 80"><con:configuration><path>$['installedSoftwares'][0]['publisher']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9cd66ef1-9566-4dce-bdb9-a8d13965f55a" name="JsonPath Existence Match 81"><con:configuration><path>$['installedSoftwares'][0]['version']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1b11b657-7ebd-456f-8299-11bd9c7388c4" name="JsonPath Existence Match 82"><con:configuration><path>$['installedSoftwares'][0]['installDate']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1abbb3df-1d94-4bc6-8897-5393a9de6e82" name="JsonPath Existence Match 83"><con:configuration><path>$['drives'][0]['interfaceType']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="60d83126-c36a-45bd-a1f0-ed545e527cd5" name="JsonPath Existence Match 84"><con:configuration><path>$['siteID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="2340a2b1-8672-49f0-8954-36cbe825f673" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b3d4dd8f-707b-4d55-b797-255ab86f6490" name="JsonPath Match"><con:configuration><path>$['endpointID']</path><content>${Get_Request_PartnerId_EndpointID#endpointId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="980e1372-d4e9-4f6f-8041-a2dc414797a0" name="JsonPath Match 2"><con:configuration><path>$['partnerID']</path><content>${Get_Request_PartnerId_EndpointID#partnerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1a430fc5-e56e-411b-9070-7a57e46076ef" name="JsonPath Existence Match 85"><con:configuration><path>$['keyboards']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e0f891af-61a6-4386-822b-5f580b6b5fd1" name="JsonPath Existence Match 86"><con:configuration><path>$['keyboards'][0]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="85e36a10-2b13-47f3-b531-d5a6bb46cc73" name="JsonPath Existence Match 87"><con:configuration><path>$['keyboards'][0]['deviceID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7e92086a-7068-4097-ad53-f138c01c26de" name="JsonPath Existence Match 88"><con:configuration><path>$['keyboards'][0]['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b8bc2b1c-0b4a-4269-bdf4-2415969a2a41" name="JsonPath Existence Match 89"><con:configuration><path>$['keyboards'][0]['description']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1d7abab7-fd70-45a4-8481-f9f8f5af2998" name="JsonPath Existence Match 90"><con:configuration><path>$['mouse']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7ec433b7-bd1e-4d52-abca-d574047f2b37" name="JsonPath Existence Match 91"><con:configuration><path>$['mouse'][0]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="75536a0f-0dba-4bcc-9635-f4a4dfb8b9cf" name="JsonPath Existence Match 93"><con:configuration><path>$['mouse'][0]['deviceId']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="49c0f2e7-46bc-4826-a370-523bbe00a98d" name="JsonPath Existence Match 94"><con:configuration><path>$['mouse'][0]['deviceInterface']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d393616f-67ef-42cc-aab3-b2850012b493" name="JsonPath Existence Match 95"><con:configuration><path>$['mouse'][0]['manufacturer']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="940775c2-50b1-45cf-8a86-ee551173cf55" name="JsonPath Existence Match 96"><con:configuration><path>$['mouse'][0]['pointingType']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="bbfb7197-96bd-4905-99d3-f22338c5ae24" name="JsonPath Existence Match 97"><con:configuration><path>$['mouse'][0]['buttons']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7cfdfa50-88c3-4f91-8d95-8fd39767dc67" name="JsonPath Existence Match 98"><con:configuration><path>$['monitors']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="d7286450-5ccc-4bc0-a043-e55f171b6973" name="JsonPath Count"><con:configuration><path>$['keyboards'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="863f06fe-d1db-4820-8999-be4287107bc9" name="JsonPath Count 2"><con:configuration><path>$['keyboards'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="c969b46d-e4be-4efe-b90f-e524660c5f3c" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:keyboards[1]/ns1:e[1]/ns1:description[1]</con:xpath><con:element>description</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>null</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:keyboards[1]/ns1:e[1]/ns1:deviceID[1]</con:xpath><con:element>deviceID</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>null</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:keyboards[1]/ns1:e[1]/ns1:name[1]</con:xpath><con:element>name</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>null</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:mouse[1]/ns1:e[1]/ns1:deviceId[1]</con:xpath><con:element>deviceId</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>null</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:mouse[1]/ns1:e[1]/ns1:manufacturer[1]</con:xpath><con:element>manufacturer</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>null</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:mouse[1]/ns1:e[1]/ns1:name[1]</con:xpath><con:element>name</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>null</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:createTimeUTC[1]</con:xpath><con:element>createTimeUTC</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>0001-01-01T00:00:00Z</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819">
   <baseBoard>
      <installDate>0001-01-01T00:00:00Z</installDate>
      <manufacturer>Intel Corporation</manufacturer>
      <model/>
      <name>Base Board</name>
      <product>440BX Desktop Reference Platform</product>
      <serialNumber>None</serialNumber>
      <version>None</version>
   </baseBoard>
   <bios>
      <manufacturer>Phoenix Technologies LTD</manufacturer>
      <product>PhoenixBIOS 4.0 Release 6.0</product>
      <serialNumber>VMware-42 27 3c 9f e4 40 cc 17-55 ca 6b 70 03 45 c8 48</serialNumber>
      <smbiosVersion>6.00</smbiosVersion>
      <version>INTEL  - 6040000</version>
   </bios>
   <clientID>50109539</clientID>
   <createTimeUTC>2017-09-13T14:10:25.088Z</createTimeUTC>
   <createdBy>/agent/plugin/asset</createdBy>
   <drives>
      <e>
         <interfaceType>SCSI</interfaceType>
         <logicalName>PHYSICALDRIVE0</logicalName>
         <manufacturer>(Standard disk drives)</manufacturer>
         <mediaType>Fixed hard disk media</mediaType>
         <numberOfPartitions>4</numberOfPartitions>
         <partitionData>
            <e>
               <description>Local Fixed Disk</description>
               <fileSystem>NTFS</fileSystem>
               <label/>
               <name>C:</name>
               <sizeBytes>42691719168</sizeBytes>
            </e>
            <e>
               <description>Local Fixed Disk</description>
               <fileSystem>NTFS</fileSystem>
               <label>New Volume</label>
               <name>E:</name>
               <sizeBytes>91222016</sizeBytes>
            </e>
            <e>
               <description>Local Fixed Disk</description>
               <fileSystem>NTFS</fileSystem>
               <label>New Volume</label>
               <name>F:</name>
               <sizeBytes>9433088</sizeBytes>
            </e>
         </partitionData>
         <partitions null="true"/>
         <product>VMware Virtual disk SCSI Disk Device</product>
         <serialNumber/>
         <sizeBytes>42944186880</sizeBytes>
      </e>
   </drives>
   <endpointID>95104292-8b3c-4d60-a0d3-2a4112770f08</endpointID>
   <friendlyName>JUNO-WIN7-64</friendlyName>
   <installedSoftwares>
      <e>
         <installDate>2017-06-01T00:00:00Z</installDate>
         <name>freeSSHd 1.3.1</name>
         <publisher>Kresimir Petric</publisher>
         <userName>Everyone</userName>
         <version/>
      </e>
      <e>
         <installDate>0001-01-01T00:00:00Z</installDate>
         <name>Progress Telerik Fiddler</name>
         <publisher>Telerik</publisher>
         <userName>Everyone</userName>
         <version>4.6.20171.26113</version>
      </e>
      <e>
         <installDate>2017-08-21T00:00:00Z</installDate>
         <name>Google Chrome</name>
         <publisher>Google Inc.</publisher>
         <userName>Everyone</userName>
         <version>60.0.3112.113</version>
      </e>
      <e>
         <installDate>0001-01-01T00:00:00Z</installDate>
         <name>Notepad++ (32-bit x86)</name>
         <publisher>Notepad++ Team</publisher>
         <userName>Everyone</userName>
         <version>7.5</version>
      </e>
      <e>
         <installDate>0001-01-01T00:00:00Z</installDate>
         <name>ITSupport247- DPMA</name>
         <publisher>ITSupport247</publisher>
         <userName>Everyone</userName>
         <version>5.3.8</version>
      </e>
      <e>
         <installDate>2017-03-15T00:00:00Z</installDate>
         <name>Microsoft Visual C++ 2008 Redistributable - x86 9.0.30729.4148</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>9.0.30729.4148</version>
      </e>
      <e>
         <installDate>2017-07-19T00:00:00Z</installDate>
         <name>Java 8 Update 141</name>
         <publisher>Oracle Corporation</publisher>
         <userName>Everyone</userName>
         <version>8.0.1410.15</version>
      </e>
      <e>
         <installDate>0001-01-01T00:00:00Z</installDate>
         <name>Microsoft Visual C++ 2013 Redistributable (x86) - 12.0.40649</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>12.0.40649.5</version>
      </e>
      <e>
         <installDate>0001-01-01T00:00:00Z</installDate>
         <name>Microsoft Visual C++ 2013 Redistributable (x64) - 12.0.40649</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>12.0.40649.5</version>
      </e>
      <e>
         <installDate>2017-06-07T00:00:00Z</installDate>
         <name>PowerShell Community Extensions 3.2.0</name>
         <publisher>PowerShell Community Developers</publisher>
         <userName>Everyone</userName>
         <version>3.2.0.0</version>
      </e>
      <e>
         <installDate>2017-03-15T00:00:00Z</installDate>
         <name>Microsoft Visual C++ 2008 Redistributable - x64 9.0.30729.6161</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>9.0.30729.6161</version>
      </e>
      <e>
         <installDate>0001-01-01T00:00:00Z</installDate>
         <name>Microsoft .NET Framework 4.6.1</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>4.6.01055</version>
      </e>
      <e>
         <installDate>2017-03-31T00:00:00Z</installDate>
         <name>VMware Tools</name>
         <publisher>VMware, Inc.</publisher>
         <userName>Everyone</userName>
         <version>10.0.6.3560309</version>
      </e>
   </installedSoftwares>
   <keyboards>
      <e>
         <description>Standard PS/2 Keyboard</description>
         <deviceID>ACPI\PNP0303\4&amp;205AD762&amp;0</deviceID>
         <name>Enhanced (101- or 102-key)</name>
      </e>
   </keyboards>
   <monitors>
      <e>
         <deviceID/>
         <manufacturer/>
         <name>Generic Non-PnP Monitor</name>
         <screenHeight>768</screenHeight>
         <screenWidth>1024</screenWidth>
      </e>
   </monitors>
   <mouse>
      <e>
         <buttons>0</buttons>
         <deviceId>ACPI\PNP0F13\4&amp;205AD762&amp;0</deviceId>
         <deviceInterface>1</deviceInterface>
         <manufacturer>VMware, Inc.</manufacturer>
         <name>VMware Pointing Device</name>
         <pointingType>2</pointingType>
      </e>
   </mouse>
   <name/>
   <networks>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (SSTP)</logicalName>
         <macAddress/>
         <product>WAN Miniport (SSTP)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (IKEv2)</logicalName>
         <macAddress/>
         <product>WAN Miniport (IKEv2)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (L2TP)</logicalName>
         <macAddress/>
         <product>WAN Miniport (L2TP)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (PPTP)</logicalName>
         <macAddress/>
         <product>WAN Miniport (PPTP)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (PPPOE)</logicalName>
         <macAddress/>
         <product>WAN Miniport (PPPOE)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (IPv6)</logicalName>
         <macAddress/>
         <product>WAN Miniport (IPv6)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (Network Monitor)</logicalName>
         <macAddress/>
         <product>WAN Miniport (Network Monitor)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>10.2.114.1</defaultIPGateway>
         <defaultIPGateways>
            <e>10.2.114.1</e>
         </defaultIPGateways>
         <dhcpEnabled>true</dhcpEnabled>
         <dhcpLeaseExpires>2017-09-26T14:58:16Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>2017-09-11T14:58:16Z</dhcpLeaseObtained>
         <dhcpServer>10.2.114.20</dhcpServer>
         <dnsServers>
            <e>10.2.17.25</e>
            <e>10.2.17.6</e>
         </dnsServers>
         <ipEnabled>true</ipEnabled>
         <ipv4>10.2.114.113</ipv4>
         <ipv4List>
            <e>10.2.114.113</e>
         </ipv4List>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>Intel(R) PRO/1000 MT Network Connection</logicalName>
         <macAddress>00:50:56:A7:7B:69</macAddress>
         <product>Intel(R) PRO/1000 MT Network Connection</product>
         <subnetMask>255.255.254.0</subnetMask>
         <subnetMasks>
            <e>255.255.254.0</e>
         </subnetMasks>
         <vendor>Intel</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (IP)</logicalName>
         <macAddress/>
         <product>WAN Miniport (IP)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>Microsoft ISATAP Adapter</logicalName>
         <macAddress/>
         <product>Microsoft ISATAP Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>RAS Async Adapter</logicalName>
         <macAddress>20:41:53:59:4E:FF</macAddress>
         <product>RAS Async Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>true</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>vmxnet3 Ethernet Adapter</logicalName>
         <macAddress/>
         <product>vmxnet3 Ethernet Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor/>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>true</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>vmxnet3 Ethernet Adapter</logicalName>
         <macAddress/>
         <product>vmxnet3 Ethernet Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor/>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>true</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>vmxnet3 Ethernet Adapter</logicalName>
         <macAddress/>
         <product>vmxnet3 Ethernet Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor/>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>Microsoft ISATAP Adapter</logicalName>
         <macAddress/>
         <product>Microsoft ISATAP Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>true</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>vmxnet3 Ethernet Adapter</logicalName>
         <macAddress/>
         <product>vmxnet3 Ethernet Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor/>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>Teredo Tunneling Pseudo-Interface</logicalName>
         <macAddress/>
         <product>Teredo Tunneling Pseudo-Interface</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
   </networks>
   <os>
      <arch>64-bit</arch>
      <installDate>2017-02-27T18:14:30Z</installDate>
      <manufacturer>Microsoft Corporation</manufacturer>
      <osLanguage>English (United States)</osLanguage>
      <product>Microsoft Windows 7 Professional</product>
      <serialNumber>00371-220-7340795-06641</serialNumber>
      <servicePack>Service Pack 1</servicePack>
      <type>windows</type>
      <version>6.1.7601</version>
   </os>
   <partnerID>50001794</partnerID>
   <physicalDrives>
      <e>
         <partitionData>
            <e>
               <description>CD-ROM Disc</description>
               <fileSystem/>
               <label/>
               <name>D:</name>
               <sizeBytes>0</sizeBytes>
            </e>
         </partitionData>
         <type>CDDrive</type>
      </e>
   </physicalDrives>
   <physicalMemory>
      <e>
         <manufacturer/>
         <serialNumber/>
         <sizeBytes>2147483648</sizeBytes>
      </e>
   </physicalMemory>
   <processors>
      <e>
         <clockSpeedMhz>2397</clockSpeedMhz>
         <family>2</family>
         <level>6</level>
         <manufacturer>GenuineIntel</manufacturer>
         <numberOfCores>2</numberOfCores>
         <processorType>64</processorType>
         <product>Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz</product>
         <serialNumber/>
      </e>
   </processors>
   <raidController>
      <hardwareRaid/>
      <softwareRaid/>
      <vendor/>
   </raidController>
   <regID>53752099</regID>
   <remoteAddress>124.124.246.134</remoteAddress>
   <siteID>50109539</siteID>
   <system>
      <category/>
      <domain>WORKGROUP</domain>
      <domainRole>0</domainRole>
      <model>VMware Virtual Platform</model>
      <product>VMware, Inc.</product>
      <serialNumber/>
      <systemName>Juno-win7-64</systemName>
      <timeZone>-0700</timeZone>
      <timeZoneDescription>PDT</timeZoneDescription>
   </system>
   <type/>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="133b8b9a-a9b4-4175-b1d6-3fcba0ba22f5" name="JsonPath Existence Match 99"><con:configuration><path>$['users']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7336e708-52c3-462f-80dd-aa3aef8b1773" name="JsonPath Existence Match 100"><con:configuration><path>$['users'][0]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="52d8d842-29df-4762-95cf-9696c79db409" name="JsonPath Count 3"><con:configuration><path>$['users'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f968f80a-e626-4d4e-8336-016989c09a4f" name="JsonPath Existence Match 101"><con:configuration><path>$['users'][0]['username']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="122ecc72-6f42-4050-8cd9-203773cd106f" name="JsonPath Existence Match 102"><con:configuration><path>$['users'][0]['userDisabled']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d637d60b-600d-4b9e-be16-5c2a1de4903e" name="JsonPath Existence Match 103"><con:configuration><path>$['users'][0]['userType']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a0196040-4fa9-43ee-abc5-6e37209110d7" name="JsonPath Existence Match 104"><con:configuration><path>$['users'][0]['userLockout']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0388544a-9948-4a88-bd42-918493140172" name="JsonPath Existence Match 105"><con:configuration><path>$['users'][0]['passwordRequired']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="8d8e7152-3913-450f-8dd7-d1766da2afb2" name="Message Content Assertion 2"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:users[1]/ns1:e[1]/ns1:passwordRequired[1]</con:xpath><con:element>passwordRequired</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:users[1]/ns1:e[1]/ns1:userDisabled[1]</con:xpath><con:element>userDisabled</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:users[1]/ns1:e[1]/ns1:userLockout[1]</con:xpath><con:element>userLockout</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:users[1]/ns1:e[1]/ns1:username[1]</con:xpath><con:element>username</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:users[1]/ns1:e[1]/ns1:userType[1]</con:xpath><con:element>userType</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue xsi:nil="true"/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819">
   <baseBoard>
      <installDate>0001-01-01T00:00:00Z</installDate>
      <manufacturer>Intel Corporation</manufacturer>
      <model/>
      <name>Base Board</name>
      <product>440BX Desktop Reference Platform</product>
      <serialNumber>None</serialNumber>
      <version>None</version>
   </baseBoard>
   <bios>
      <manufacturer>Phoenix Technologies LTD</manufacturer>
      <product>PhoenixBIOS 4.0 Release 6.0</product>
      <serialNumber>VMware-42 27 42 80 9e 81 f8 9b-8b 2f b2 14 48 0d 7d 30</serialNumber>
      <smbiosVersion>6.00</smbiosVersion>
      <version>INTEL  - 6040000</version>
   </bios>
   <clientID>50109539</clientID>
   <createTimeUTC>2017-10-05T17:16:30.144Z</createTimeUTC>
   <createdBy>/agent/plugin/asset</createdBy>
   <drives>
      <e>
         <interfaceType>SCSI</interfaceType>
         <logicalName>PHYSICALDRIVE0</logicalName>
         <manufacturer>(Standard disk drives)</manufacturer>
         <mediaType>Fixed hard disk media</mediaType>
         <numberOfPartitions>2</numberOfPartitions>
         <partitionData>
            <e>
               <description>Local Fixed Disk</description>
               <fileSystem>NTFS</fileSystem>
               <label/>
               <name>C:</name>
               <sizeBytes>53160701952</sizeBytes>
            </e>
         </partitionData>
         <partitions null="true"/>
         <product>VMware Virtual disk SCSI Disk Device</product>
         <serialNumber/>
         <sizeBytes>53686402560</sizeBytes>
      </e>
   </drives>
   <endpointID>a7a1d65a-c0e1-438b-a112-4b7886ef4496</endpointID>
   <friendlyName>Juno-Win10-32bit</friendlyName>
   <installedSoftwares>
      <e>
         <installDate>2017-09-23T00:00:00Z</installDate>
         <name>freeFTPd 1.0.13</name>
         <publisher>Kresimir Petric</publisher>
         <userName>Everyone</userName>
         <version/>
      </e>
      <e>
         <installDate>2017-09-28T00:00:00Z</installDate>
         <name>ITSupport247- DPMA</name>
         <publisher>ITSupport247</publisher>
         <userName>Everyone</userName>
         <version>5.3.8</version>
      </e>
      <e>
         <installDate>2017-09-26T00:00:00Z</installDate>
         <name>Webroot SecureAnywhere</name>
         <publisher>Webroot</publisher>
         <userName>Everyone</userName>
         <version>9.0.17.28</version>
      </e>
      <e>
         <installDate>2017-09-20T00:00:00Z</installDate>
         <name>VMware Tools</name>
         <publisher>VMware, Inc.</publisher>
         <userName>Everyone</userName>
         <version>10.1.5.5055683</version>
      </e>
      <e>
         <installDate>2017-09-25T00:00:00Z</installDate>
         <name>Microsoft Visual C++ 2013 Redistributable (x86) - 12.0.40649</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>12.0.40649.5</version>
      </e>
      <e>
         <installDate>2017-10-04T00:00:00Z</installDate>
         <name>LogMeIn</name>
         <publisher>LogMeIn, Inc.</publisher>
         <userName>Everyone</userName>
         <version>4.1.9768</version>
      </e>
      <e>
         <installDate>2017-10-03T00:00:00Z</installDate>
         <name>ITSPlatform</name>
         <publisher>Continuum Managed Services LLC</publisher>
         <userName>Everyone</userName>
         <version>1.0.173</version>
      </e>
      <e>
         <installDate>2017-09-20T00:00:00Z</installDate>
         <name>Microsoft Visual C++ 2008 Redistributable - x86 9.0.30729.6161</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>9.0.30729.6161</version>
      </e>
      <e>
         <installDate>2017-09-22T00:00:00Z</installDate>
         <name>Microsoft OneDrive</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>JUNO-WIN10-32BI\rmmengg</userName>
         <version>17.3.6998.0830</version>
      </e>
   </installedSoftwares>
   <keyboards>
      <e>
         <description>Standard PS/2 Keyboard</description>
         <deviceID>ACPI\PNP0303\4&amp;1BD7F811&amp;0</deviceID>
         <name>Enhanced (101- or 102-key)</name>
      </e>
      <e>
         <description>Remote Desktop Keyboard Device</description>
         <deviceID>TERMINPUT_BUS\UMB\2&amp;2C22BCC9&amp;0&amp;SESSION3KEYBOARD0</deviceID>
         <name>Enhanced (101- or 102-key)</name>
      </e>
   </keyboards>
   <monitors>
      <e>
         <deviceID/>
         <manufacturer/>
         <name>Default Monitor</name>
         <screenHeight>768</screenHeight>
         <screenWidth>1024</screenWidth>
      </e>
   </monitors>
   <mouse>
      <e>
         <buttons>0</buttons>
         <deviceId>TERMINPUT_BUS\UMB\2&amp;2C22BCC9&amp;0&amp;SESSION3MOUSE0</deviceId>
         <deviceInterface>1</deviceInterface>
         <manufacturer>(Standard mouse types)</manufacturer>
         <name>Remote Desktop Mouse Device</name>
         <pointingType>2</pointingType>
      </e>
      <e>
         <buttons>0</buttons>
         <deviceId>ACPI\PNP0F13\4&amp;1BD7F811&amp;0</deviceId>
         <deviceInterface>1</deviceInterface>
         <manufacturer>VMware, Inc.</manufacturer>
         <name>VMware Pointing Device</name>
         <pointingType>2</pointingType>
      </e>
   </mouse>
   <name/>
   <networks>
      <e>
         <defaultIPGateway>10.2.114.1</defaultIPGateway>
         <defaultIPGateways>
            <e>10.2.114.1</e>
         </defaultIPGateways>
         <dhcpEnabled>true</dhcpEnabled>
         <dhcpLeaseExpires>2017-10-18T13:50:28Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>2017-10-03T13:50:28Z</dhcpLeaseObtained>
         <dhcpServer>10.2.114.20</dhcpServer>
         <dnsServers>
            <e>10.2.17.25</e>
            <e>10.2.17.6</e>
         </dnsServers>
         <ipEnabled>true</ipEnabled>
         <ipv4>10.2.114.75</ipv4>
         <ipv4List>
            <e>10.2.114.75</e>
         </ipv4List>
         <ipv6>fe80::4db4:39b5:7dda:4f20</ipv6>
         <ipv6List>
            <e>fe80::4db4:39b5:7dda:4f20</e>
         </ipv6List>
         <logicalName>Intel(R) 82574L Gigabit Network Connection</logicalName>
         <macAddress>00:50:56:A7:26:55</macAddress>
         <product>Intel(R) 82574L Gigabit Network Connection</product>
         <subnetMask>255.255.254.0</subnetMask>
         <subnetMasks>
            <e>255.255.254.0</e>
            <e>64</e>
         </subnetMasks>
         <vendor>Intel Corporation</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>true</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>Microsoft Kernel Debug Network Adapter</logicalName>
         <macAddress/>
         <product>Microsoft Kernel Debug Network Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>Teredo Tunneling Pseudo-Interface</logicalName>
         <macAddress/>
         <product>Teredo Tunneling Pseudo-Interface</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>Microsoft ISATAP Adapter</logicalName>
         <macAddress/>
         <product>Microsoft ISATAP Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
   </networks>
   <os>
      <arch>32-bit</arch>
      <installDate>2017-09-19T18:13:30Z</installDate>
      <manufacturer>Microsoft Corporation</manufacturer>
      <osLanguage>English (United States)</osLanguage>
      <product>Microsoft Windows 10 Enterprise Evaluation</product>
      <serialNumber>00329-20000-00001-AA548</serialNumber>
      <servicePack/>
      <type>windows</type>
      <version>10.0.10586</version>
   </os>
   <partnerID>50001794</partnerID>
   <physicalDrives>
      <e>
         <partitionData>
            <e>
               <description>3 1/2 Inch Floppy Drive</description>
               <fileSystem/>
               <label/>
               <name>A:</name>
               <sizeBytes>0</sizeBytes>
            </e>
         </partitionData>
         <type>RemovableDrive</type>
      </e>
      <e>
         <partitionData>
            <e>
               <description>CD-ROM Disc</description>
               <fileSystem/>
               <label/>
               <name>D:</name>
               <sizeBytes>0</sizeBytes>
            </e>
         </partitionData>
         <type>CDDrive</type>
      </e>
   </physicalDrives>
   <physicalMemory>
      <e>
         <manufacturer/>
         <serialNumber/>
         <sizeBytes>2147483648</sizeBytes>
      </e>
      <e>
         <manufacturer/>
         <serialNumber/>
         <sizeBytes>1073741824</sizeBytes>
      </e>
   </physicalMemory>
   <processors>
      <e>
         <clockSpeedMhz>2397</clockSpeedMhz>
         <family>2</family>
         <level>6</level>
         <manufacturer>GenuineIntel</manufacturer>
         <numberOfCores>4</numberOfCores>
         <processorType>64</processorType>
         <product>Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz</product>
         <serialNumber/>
      </e>
   </processors>
   <raidController>
      <hardwareRaid/>
      <softwareRaid/>
      <vendor/>
   </raidController>
   <regID>53757310</regID>
   <remoteAddress>124.124.246.134</remoteAddress>
   <siteID>50109539</siteID>
   <system>
      <category/>
      <domain>WORKGROUP</domain>
      <domainRole>0</domainRole>
      <model>VMware Virtual Platform</model>
      <product>VMware, Inc.</product>
      <serialNumber/>
      <systemName>Juno-Win10-32bit</systemName>
      <timeZone>-0700</timeZone>
      <timeZoneDescription>PDT</timeZoneDescription>
   </system>
   <type/>
   <users>
      <e>
         <passwordRequired>true</passwordRequired>
         <userDisabled>false</userDisabled>
         <userLockout>false</userLockout>
         <userType/>
         <username>Administrator</username>
      </e>
      <e>
         <passwordRequired>false</passwordRequired>
         <userDisabled>true</userDisabled>
         <userLockout>false</userLockout>
         <userType/>
         <username>DefaultAccount</username>
      </e>
      <e>
         <passwordRequired>false</passwordRequired>
         <userDisabled>true</userDisabled>
         <userLockout>false</userLockout>
         <userType/>
         <username>Guest</username>
      </e>
      <e>
         <passwordRequired>true</passwordRequired>
         <userDisabled>false</userDisabled>
         <userLockout>false</userLockout>
         <userType/>
         <username>Remote Support</username>
      </e>
      <e>
         <passwordRequired>true</passwordRequired>
         <userDisabled>false</userDisabled>
         <userLockout>false</userLockout>
         <userType/>
         <username>rmmengg</username>
      </e>
   </users>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="44730509-7e2d-4709-8a25-931b3ac58aed" name="Message Content Assertion 3"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:monitors[1]/ns1:e[1]/ns1:name[1]</con:xpath><con:element>name</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:monitors[1]/ns1:e[1]/ns1:screenHeight[1]</con:xpath><con:element>screenHeight</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:monitors[1]/ns1:e[1]/ns1:screenWidth[1]</con:xpath><con:element>screenWidth</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819">
   <baseBoard>
      <installDate>0001-01-01T00:00:00Z</installDate>
      <manufacturer>Intel Corporation</manufacturer>
      <model/>
      <name>Base Board</name>
      <product>440BX Desktop Reference Platform</product>
      <serialNumber>None</serialNumber>
      <version>None</version>
   </baseBoard>
   <bios>
      <manufacturer>Phoenix Technologies LTD</manufacturer>
      <product>PhoenixBIOS 4.0 Release 6.0</product>
      <serialNumber>VMware-42 27 3c 9f e4 40 cc 17-55 ca 6b 70 03 45 c8 48</serialNumber>
      <smbiosVersion>6.00</smbiosVersion>
      <version>INTEL  - 6040000</version>
   </bios>
   <clientID>50109539</clientID>
   <createTimeUTC>2017-10-10T07:00:07.702Z</createTimeUTC>
   <createdBy>/agent/plugin/asset</createdBy>
   <drives>
      <e>
         <interfaceType>SCSI</interfaceType>
         <logicalName>PHYSICALDRIVE0</logicalName>
         <manufacturer>(Standard disk drives)</manufacturer>
         <mediaType>Fixed hard disk media</mediaType>
         <numberOfPartitions>4</numberOfPartitions>
         <partitionData>
            <e>
               <description>Local Fixed Disk</description>
               <fileSystem>NTFS</fileSystem>
               <label/>
               <name>C:</name>
               <sizeBytes>42691719168</sizeBytes>
            </e>
            <e>
               <description>Local Fixed Disk</description>
               <fileSystem>NTFS</fileSystem>
               <label>New Volume</label>
               <name>E:</name>
               <sizeBytes>91222016</sizeBytes>
            </e>
            <e>
               <description>Local Fixed Disk</description>
               <fileSystem>NTFS</fileSystem>
               <label>New Volume</label>
               <name>F:</name>
               <sizeBytes>9433088</sizeBytes>
            </e>
         </partitionData>
         <partitions null="true"/>
         <product>VMware Virtual disk SCSI Disk Device</product>
         <serialNumber/>
         <sizeBytes>68713989120</sizeBytes>
      </e>
   </drives>
   <endpointID>95104292-8b3c-4d60-a0d3-2a4112770f08</endpointID>
   <friendlyName>JUNO-WIN7-64</friendlyName>
   <installedSoftwares>
      <e>
         <installDate>2017-06-01T00:00:00Z</installDate>
         <name>freeSSHd 1.3.1</name>
         <publisher>Kresimir Petric</publisher>
         <userName>Everyone</userName>
         <version/>
      </e>
      <e>
         <installDate>2017-07-18T00:00:00Z</installDate>
         <name>Progress Telerik Fiddler</name>
         <publisher>Telerik</publisher>
         <userName>Everyone</userName>
         <version>4.6.20171.26113</version>
      </e>
      <e>
         <installDate>2017-08-21T00:00:00Z</installDate>
         <name>Google Chrome</name>
         <publisher>Google Inc.</publisher>
         <userName>Everyone</userName>
         <version>61.0.3163.100</version>
      </e>
      <e>
         <installDate>2017-09-25T00:00:00Z</installDate>
         <name>Malwarebytes Anti-Malware version 1.80.2.1012</name>
         <publisher>Malwarebytes Corporation</publisher>
         <userName>Everyone</userName>
         <version>1.80.2.1012</version>
      </e>
      <e>
         <installDate>2017-08-23T00:00:00Z</installDate>
         <name>Notepad++ (32-bit x86)</name>
         <publisher>Notepad++ Team</publisher>
         <userName>Everyone</userName>
         <version>7.5</version>
      </e>
      <e>
         <installDate>2017-10-06T00:00:00Z</installDate>
         <name>ITSupport247- DPMA</name>
         <publisher>ITSupport247</publisher>
         <userName>Everyone</userName>
         <version>5.3.8</version>
      </e>
      <e>
         <installDate>2017-09-15T00:00:00Z</installDate>
         <name>Webroot SecureAnywhere</name>
         <publisher>Webroot</publisher>
         <userName>Everyone</userName>
         <version>9.0.17.28</version>
      </e>
      <e>
         <installDate>2017-03-15T00:00:00Z</installDate>
         <name>Microsoft Visual C++ 2008 Redistributable - x86 9.0.30729.4148</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>9.0.30729.4148</version>
      </e>
      <e>
         <installDate>2017-07-19T00:00:00Z</installDate>
         <name>Java 8 Update 141</name>
         <publisher>Oracle Corporation</publisher>
         <userName>Everyone</userName>
         <version>8.0.1410.15</version>
      </e>
      <e>
         <installDate>2017-09-14T00:00:00Z</installDate>
         <name>Microsoft Visual C++ 2013 Redistributable (x86) - 12.0.40649</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>12.0.40649.5</version>
      </e>
      <e>
         <installDate>2017-10-05T00:00:00Z</installDate>
         <name>LogMeIn</name>
         <publisher>LogMeIn, Inc.</publisher>
         <userName>Everyone</userName>
         <version>4.1.9768</version>
      </e>
      <e>
         <installDate>2017-09-14T00:00:00Z</installDate>
         <name>Microsoft Visual C++ 2013 Redistributable (x64) - 12.0.40649</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>12.0.40649.5</version>
      </e>
      <e>
         <installDate>2017-06-07T00:00:00Z</installDate>
         <name>PowerShell Community Extensions 3.2.0</name>
         <publisher>PowerShell Community Developers</publisher>
         <userName>Everyone</userName>
         <version>3.2.0.0</version>
      </e>
      <e>
         <installDate>2017-09-28T00:00:00Z</installDate>
         <name>Microsoft Visual C++ 2008 Redistributable - x86 9.0.30729.6161</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>9.0.30729.6161</version>
      </e>
      <e>
         <installDate>2017-10-06T00:00:00Z</installDate>
         <name>ITSPlatform</name>
         <publisher>Continuum Managed Services LLC</publisher>
         <userName>Everyone</userName>
         <version>1.0.175</version>
      </e>
      <e>
         <installDate>2017-03-15T00:00:00Z</installDate>
         <name>Microsoft Visual C++ 2008 Redistributable - x64 9.0.30729.6161</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>9.0.30729.6161</version>
      </e>
      <e>
         <installDate>2017-05-25T00:00:00Z</installDate>
         <name>Microsoft .NET Framework 4.6.1</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>4.6.01055</version>
      </e>
      <e>
         <installDate>2017-03-31T00:00:00Z</installDate>
         <name>VMware Tools</name>
         <publisher>VMware, Inc.</publisher>
         <userName>Everyone</userName>
         <version>10.0.6.3560309</version>
      </e>
   </installedSoftwares>
   <keyboards>
      <e>
         <description>Standard PS/2 Keyboard</description>
         <deviceID>ACPI\PNP0303\4&amp;205AD762&amp;0</deviceID>
         <name>Enhanced (101- or 102-key)</name>
      </e>
   </keyboards>
   <monitors>
      <e>
         <deviceID/>
         <manufacturer/>
         <name>Default Monitor</name>
         <screenHeight>768</screenHeight>
         <screenWidth>1024</screenWidth>
      </e>
   </monitors>
   <mouse>
      <e>
         <buttons>0</buttons>
         <deviceId>ACPI\PNP0F13\4&amp;205AD762&amp;0</deviceId>
         <deviceInterface>1</deviceInterface>
         <manufacturer>VMware, Inc.</manufacturer>
         <name>VMware Pointing Device</name>
         <pointingType>2</pointingType>
      </e>
   </mouse>
   <name/>
   <networks>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (SSTP)</logicalName>
         <macAddress/>
         <product>WAN Miniport (SSTP)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (IKEv2)</logicalName>
         <macAddress/>
         <product>WAN Miniport (IKEv2)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (L2TP)</logicalName>
         <macAddress/>
         <product>WAN Miniport (L2TP)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (PPTP)</logicalName>
         <macAddress/>
         <product>WAN Miniport (PPTP)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (PPPOE)</logicalName>
         <macAddress/>
         <product>WAN Miniport (PPPOE)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (IPv6)</logicalName>
         <macAddress/>
         <product>WAN Miniport (IPv6)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (Network Monitor)</logicalName>
         <macAddress/>
         <product>WAN Miniport (Network Monitor)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>10.2.114.1</defaultIPGateway>
         <defaultIPGateways>
            <e>10.2.114.1</e>
         </defaultIPGateways>
         <dhcpEnabled>true</dhcpEnabled>
         <dhcpLeaseExpires>2017-10-20T06:57:43Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>2017-10-05T06:57:43Z</dhcpLeaseObtained>
         <dhcpServer>10.2.114.20</dhcpServer>
         <dnsServers>
            <e>10.2.17.25</e>
            <e>10.2.17.6</e>
         </dnsServers>
         <ipEnabled>true</ipEnabled>
         <ipv4>10.2.114.113</ipv4>
         <ipv4List>
            <e>10.2.114.113</e>
         </ipv4List>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>Intel(R) PRO/1000 MT Network Connection</logicalName>
         <macAddress>00:50:56:A7:7B:69</macAddress>
         <product>Intel(R) PRO/1000 MT Network Connection</product>
         <subnetMask>255.255.254.0</subnetMask>
         <subnetMasks>
            <e>255.255.254.0</e>
         </subnetMasks>
         <vendor>Intel</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>WAN Miniport (IP)</logicalName>
         <macAddress/>
         <product>WAN Miniport (IP)</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>Microsoft ISATAP Adapter</logicalName>
         <macAddress/>
         <product>Microsoft ISATAP Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>RAS Async Adapter</logicalName>
         <macAddress>20:41:53:59:4E:FF</macAddress>
         <product>RAS Async Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>true</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>vmxnet3 Ethernet Adapter</logicalName>
         <macAddress/>
         <product>vmxnet3 Ethernet Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor/>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>true</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>vmxnet3 Ethernet Adapter</logicalName>
         <macAddress/>
         <product>vmxnet3 Ethernet Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor/>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>true</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>vmxnet3 Ethernet Adapter</logicalName>
         <macAddress/>
         <product>vmxnet3 Ethernet Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor/>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>Microsoft ISATAP Adapter</logicalName>
         <macAddress/>
         <product>Microsoft ISATAP Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>true</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>vmxnet3 Ethernet Adapter</logicalName>
         <macAddress/>
         <product>vmxnet3 Ethernet Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor/>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>Teredo Tunneling Pseudo-Interface</logicalName>
         <macAddress/>
         <product>Teredo Tunneling Pseudo-Interface</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
   </networks>
   <os>
      <arch>64-bit</arch>
      <installDate>2017-02-27T18:14:30Z</installDate>
      <manufacturer>Microsoft Corporation</manufacturer>
      <osLanguage>English (United States)</osLanguage>
      <product>Microsoft Windows 7 Professional</product>
      <serialNumber>00371-220-7340795-06641</serialNumber>
      <servicePack>Service Pack 1</servicePack>
      <type>windows</type>
      <version>6.1.7601</version>
   </os>
   <partnerID>50001794</partnerID>
   <physicalDrives>
      <e>
         <partitionData>
            <e>
               <description>CD-ROM Disc</description>
               <fileSystem/>
               <label/>
               <name>D:</name>
               <sizeBytes>0</sizeBytes>
            </e>
         </partitionData>
         <type>CDDrive</type>
      </e>
   </physicalDrives>
   <physicalMemory>
      <e>
         <manufacturer/>
         <serialNumber/>
         <sizeBytes>4294967296</sizeBytes>
      </e>
   </physicalMemory>
   <processors>
      <e>
         <clockSpeedMhz>2397</clockSpeedMhz>
         <family>2</family>
         <level>6</level>
         <manufacturer>GenuineIntel</manufacturer>
         <numberOfCores>2</numberOfCores>
         <processorType>64</processorType>
         <product>Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz</product>
         <serialNumber/>
      </e>
   </processors>
   <raidController>
      <hardwareRaid/>
      <softwareRaid/>
      <vendor/>
   </raidController>
   <regID>53757277</regID>
   <remoteAddress>124.124.246.134</remoteAddress>
   <siteID>50109539</siteID>
   <system>
      <category/>
      <domain>WORKGROUP</domain>
      <domainRole>0</domainRole>
      <model>VMware Virtual Platform</model>
      <product>VMware, Inc.</product>
      <serialNumber/>
      <systemName>Juno-win7-64</systemName>
      <timeZone>-0700</timeZone>
      <timeZoneDescription>PDT</timeZoneDescription>
   </system>
   <type/>
   <users>
      <e>
         <passwordRequired>false</passwordRequired>
         <userDisabled>false</userDisabled>
         <userLockout>false</userLockout>
         <userType/>
         <username>admin</username>
      </e>
      <e>
         <passwordRequired>true</passwordRequired>
         <userDisabled>false</userDisabled>
         <userLockout>false</userLockout>
         <userType/>
         <username>Administrator</username>
      </e>
      <e>
         <passwordRequired>true</passwordRequired>
         <userDisabled>false</userDisabled>
         <userLockout>false</userLockout>
         <userType/>
         <username>ansibleuser</username>
      </e>
      <e>
         <passwordRequired>false</passwordRequired>
         <userDisabled>true</userDisabled>
         <userLockout>false</userLockout>
         <userType/>
         <username>Guest</username>
      </e>
      <e>
         <passwordRequired>true</passwordRequired>
         <userDisabled>false</userDisabled>
         <userLockout>false</userLockout>
         <userType/>
         <username>rmmengg</username>
      </e>
      <e>
         <passwordRequired>true</passwordRequired>
         <userDisabled>false</userDisabled>
         <userLockout>false</userLockout>
         <userType/>
         <username>User01</username>
      </e>
   </users>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="22df2c95-1489-4fe9-a225-a0448f8901a7" name="JsonPath Existence Match 106"><con:configuration><path>$['physicalDrives']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="cc90bdc1-b0ea-43ab-a67f-771480e5efbf" name="JsonPath Existence Match 107"><con:configuration><path>$['physicalDrives'][0]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f7a449a5-227c-4297-b2ce-66573dd84823" name="JsonPath Existence Match 108"><con:configuration><path>$['physicalDrives'][0]['type']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e03e4589-b018-416e-86a6-20cb783396fe" name="JsonPath Existence Match 109"><con:configuration><path>$['physicalDrives'][0]['partitionData'][0]['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="bc153faf-0576-4429-807c-4b2fd7d36ca1" name="JsonPath Existence Match 110"><con:configuration><path>$['physicalDrives'][0]['partitionData'][0]['description']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43073c02-4f11-4c6f-8229-f27a2422cde4" name="JsonPath Existence Match 111"><con:configuration><path>$['physicalDrives'][0]['partitionData'][0]['sizeBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1437ce27-dc7e-49ed-bcef-91b5a6afa7a5" name="JsonPath Existence Match 112"><con:configuration><path>$['physicalDrives'][0]['partitionData'][0]['fileSystem']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="af7be92b-8ab7-413c-9a08-68b6d4de9ddf" name="JsonPath Existence Match 113"><con:configuration><path>$['resourceType']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="e61caeb1-9a8c-456a-b988-857c1a6570f5" name="Message Content Assertion 4"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819';
//ns1:Response[1]/ns1:resourceType[1]</con:xpath><con:element>resourceType</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Desktop</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://internal-continuum-asset-service-elb-int-782930276.us-east-1.elb.amazonaws.com/asset/v1/partner/endpoints/c3d49ca5-c8da-495e-871a-1835ff5eb819">
   <baseBoard>
      <installDate>0001-01-01T00:00:00Z</installDate>
      <manufacturer>Intel Corporation</manufacturer>
      <model/>
      <name>Base Board</name>
      <product>440BX Desktop Reference Platform</product>
      <serialNumber>None</serialNumber>
      <version>None</version>
   </baseBoard>
   <bios>
      <manufacturer>Phoenix Technologies LTD</manufacturer>
      <product>PhoenixBIOS 4.0 Release 6.0</product>
      <serialNumber>VMware-42 27 9c 5f 2d c2 88 85-77 16 6d 1e b3 e2 1a 98</serialNumber>
      <smbiosVersion>6.00</smbiosVersion>
      <version>INTEL  - 6040000</version>
   </bios>
   <clientID>50109539</clientID>
   <createTimeUTC>2017-11-30T18:11:28.774Z</createTimeUTC>
   <createdBy>/agent/plugin/asset</createdBy>
   <drives>
      <e>
         <interfaceType>SCSI</interfaceType>
         <logicalName>PHYSICALDRIVE0</logicalName>
         <manufacturer>(Standard disk drives)</manufacturer>
         <mediaType>Fixed hard disk media</mediaType>
         <numberOfPartitions>2</numberOfPartitions>
         <partitionData>
            <e>
               <description>Local Fixed Disk</description>
               <fileSystem>NTFS</fileSystem>
               <label/>
               <name>C:</name>
               <sizeBytes>53160701952</sizeBytes>
            </e>
         </partitionData>
         <partitions null="true"/>
         <product>VMware Virtual disk SCSI Disk Device</product>
         <serialNumber/>
         <sizeBytes>53686402560</sizeBytes>
      </e>
   </drives>
   <endpointID>4a81d29a-0b0b-47f3-a29f-22bd1b6d64a6</endpointID>
   <friendlyName>Juno-Win10321</friendlyName>
   <installedSoftwares>
      <e>
         <installDate>2017-09-23T00:00:00Z</installDate>
         <name>freeFTPd 1.0.13</name>
         <publisher>Kresimir Petric</publisher>
         <userName>Everyone</userName>
         <version/>
      </e>
      <e>
         <installDate>2017-10-09T00:00:00Z</installDate>
         <name>Malwarebytes Anti-Malware version 1.80.2.1012</name>
         <publisher>Malwarebytes Corporation</publisher>
         <userName>Everyone</userName>
         <version>1.80.2.1012</version>
      </e>
      <e>
         <installDate>2017-11-24T00:00:00Z</installDate>
         <name>ITSupport247- DPMA</name>
         <publisher>ITSupport247</publisher>
         <userName>Everyone</userName>
         <version>5.3.9</version>
      </e>
      <e>
         <installDate>2017-10-16T00:00:00Z</installDate>
         <name>Webroot SecureAnywhere</name>
         <publisher>Webroot</publisher>
         <userName>Everyone</userName>
         <version>9.0.18.34</version>
      </e>
      <e>
         <installDate>2017-09-20T00:00:00Z</installDate>
         <name>VMware Tools</name>
         <publisher>VMware, Inc.</publisher>
         <userName>Everyone</userName>
         <version>10.1.5.5055683</version>
      </e>
      <e>
         <installDate>2017-09-25T00:00:00Z</installDate>
         <name>Microsoft Visual C++ 2013 Redistributable (x86) - 12.0.40649</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>12.0.40649.5</version>
      </e>
      <e>
         <installDate>2017-11-22T00:00:00Z</installDate>
         <name>LogMeIn</name>
         <publisher>LogMeIn, Inc.</publisher>
         <userName>Everyone</userName>
         <version>4.1.9768</version>
      </e>
      <e>
         <installDate>2017-11-17T00:00:00Z</installDate>
         <name>Update for Windows 10 (KB4023057)</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>2.7.0.0</version>
      </e>
      <e>
         <installDate>2017-09-20T00:00:00Z</installDate>
         <name>Microsoft Visual C++ 2008 Redistributable - x86 9.0.30729.6161</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>Everyone</userName>
         <version>9.0.30729.6161</version>
      </e>
      <e>
         <installDate>2017-11-30T00:00:00Z</installDate>
         <name>ITSPlatform</name>
         <publisher>Continuum Managed Services LLC</publisher>
         <userName>Everyone</userName>
         <version>1.0.254</version>
      </e>
      <e>
         <installDate>2017-11-07T00:00:00Z</installDate>
         <name>Microsoft OneDrive</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>JUNO-WIN10321\rmmengg</userName>
         <version>17.3.7076.1026</version>
      </e>
      <e>
         <installDate>2017-11-14T00:00:00Z</installDate>
         <name>Microsoft OneDrive</name>
         <publisher>Microsoft Corporation</publisher>
         <userName>JUNO-WIN10321\Administrator</userName>
         <version>17.3.7076.1026</version>
      </e>
   </installedSoftwares>
   <keyboards>
      <e>
         <description>Remote Desktop Keyboard Device</description>
         <deviceID>TERMINPUT_BUS\UMB\2&amp;2C22BCC9&amp;0&amp;SESSION2KEYBOARD0</deviceID>
         <name>Enhanced (101- or 102-key)</name>
      </e>
      <e>
         <description>Standard PS/2 Keyboard</description>
         <deviceID>ACPI\PNP0303\4&amp;1BD7F811&amp;0</deviceID>
         <name>Enhanced (101- or 102-key)</name>
      </e>
   </keyboards>
   <monitors>
      <e>
         <deviceID>DISPLAY\DEFAULT_MONITOR\4&amp;427137E&amp;0&amp;UID0</deviceID>
         <manufacturer>(Standard monitor types)</manufacturer>
         <name>Generic Non-PnP Monitor</name>
         <screenHeight>768</screenHeight>
         <screenWidth>1024</screenWidth>
      </e>
   </monitors>
   <mouse>
      <e>
         <buttons>0</buttons>
         <deviceId>ACPI\PNP0F13\4&amp;1BD7F811&amp;0</deviceId>
         <deviceInterface>1</deviceInterface>
         <manufacturer>VMware, Inc.</manufacturer>
         <name>VMware Pointing Device</name>
         <pointingType>2</pointingType>
      </e>
      <e>
         <buttons>0</buttons>
         <deviceId>TERMINPUT_BUS\UMB\2&amp;2C22BCC9&amp;0&amp;SESSION2MOUSE0</deviceId>
         <deviceInterface>1</deviceInterface>
         <manufacturer>(Standard mouse types)</manufacturer>
         <name>Remote Desktop Mouse Device</name>
         <pointingType>2</pointingType>
      </e>
   </mouse>
   <name/>
   <networks>
      <e>
         <defaultIPGateway>10.2.114.1</defaultIPGateway>
         <defaultIPGateways>
            <e>10.2.114.1</e>
         </defaultIPGateways>
         <dhcpEnabled>true</dhcpEnabled>
         <dhcpLeaseExpires>2017-12-14T05:22:06Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>2017-11-29T05:22:06Z</dhcpLeaseObtained>
         <dhcpServer>10.2.114.20</dhcpServer>
         <dnsServers>
            <e>10.2.17.25</e>
            <e>10.2.17.6</e>
         </dnsServers>
         <ipEnabled>true</ipEnabled>
         <ipv4>10.2.114.79</ipv4>
         <ipv4List>
            <e>10.2.114.79</e>
         </ipv4List>
         <ipv6>fe80::19a:b1e:4e6d:db40</ipv6>
         <ipv6List>
            <e>fe80::19a:b1e:4e6d:db40</e>
         </ipv6List>
         <logicalName>Intel(R) 82574L Gigabit Network Connection</logicalName>
         <macAddress>00:50:56:A7:36:9E</macAddress>
         <product>Intel(R) 82574L Gigabit Network Connection</product>
         <subnetMask>255.255.254.0</subnetMask>
         <subnetMasks>
            <e>255.255.254.0</e>
            <e>64</e>
         </subnetMasks>
         <vendor>Intel Corporation</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>true</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>Microsoft Kernel Debug Network Adapter</logicalName>
         <macAddress/>
         <product>Microsoft Kernel Debug Network Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>Teredo Tunneling Pseudo-Interface</logicalName>
         <macAddress/>
         <product>Teredo Tunneling Pseudo-Interface</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
      <e>
         <defaultIPGateway>0.0.0.0</defaultIPGateway>
         <defaultIPGateways null="true"/>
         <dhcpEnabled>false</dhcpEnabled>
         <dhcpLeaseExpires>0001-01-01T00:00:00Z</dhcpLeaseExpires>
         <dhcpLeaseObtained>0001-01-01T00:00:00Z</dhcpLeaseObtained>
         <dhcpServer>0.0.0.0</dhcpServer>
         <dnsServers null="true"/>
         <ipEnabled>false</ipEnabled>
         <ipv4>0.0.0.0</ipv4>
         <ipv4List null="true"/>
         <ipv6>::</ipv6>
         <ipv6List null="true"/>
         <logicalName>Microsoft ISATAP Adapter</logicalName>
         <macAddress/>
         <product>Microsoft ISATAP Adapter</product>
         <subnetMask>0.0.0.0</subnetMask>
         <subnetMasks null="true"/>
         <vendor>Microsoft</vendor>
         <winsPrimaryServer>0.0.0.0</winsPrimaryServer>
         <winsSecondaryServer>0.0.0.0</winsSecondaryServer>
      </e>
   </networks>
   <os>
      <arch>32-bit</arch>
      <installDate>2017-09-19T18:13:30Z</installDate>
      <manufacturer>Microsoft Corporation</manufacturer>
      <osLanguage>English (United States)</osLanguage>
      <product>Microsoft Windows 10 Enterprise Evaluation</product>
      <serialNumber>00329-20000-00001-AA548</serialNumber>
      <servicePack/>
      <type>windows</type>
      <version>10.0.10586</version>
   </os>
   <partnerID>50001794</partnerID>
   <physicalDrives>
      <e>
         <partitionData>
            <e>
               <description>CD-ROM Disc</description>
               <fileSystem/>
               <label/>
               <name>D:</name>
               <sizeBytes>0</sizeBytes>
            </e>
         </partitionData>
         <type>CDDrive</type>
      </e>
      <e>
         <partitionData>
            <e>
               <description>3 1/2 Inch Floppy Drive</description>
               <fileSystem/>
               <label/>
               <name>A:</name>
               <sizeBytes>0</sizeBytes>
            </e>
         </partitionData>
         <type>RemovableDrive</type>
      </e>
   </physicalDrives>
   <physicalMemory>
      <e>
         <manufacturer/>
         <serialNumber/>
         <sizeBytes>2147483648</sizeBytes>
      </e>
      <e>
         <manufacturer/>
         <serialNumber/>
         <sizeBytes>1073741824</sizeBytes>
      </e>
   </physicalMemory>
   <processors>
      <e>
         <clockSpeedMhz>2397</clockSpeedMhz>
         <family>2</family>
         <level>6</level>
         <manufacturer>GenuineIntel</manufacturer>
         <numberOfCores>4</numberOfCores>
         <processorType>64</processorType>
         <product>Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz</product>
         <serialNumber/>
      </e>
   </processors>
   <raidController>
      <hardwareRaid/>
      <softwareRaid/>
      <vendor/>
   </raidController>
   <regID>53757310</regID>
   <remoteAddress>124.124.246.134</remoteAddress>
   <resourceType>Desktop</resourceType>
   <siteID>50109539</siteID>
   <system>
      <category/>
      <domain>WORKGROUP</domain>
      <domainRole>0</domainRole>
      <model>VMware Virtual Platform</model>
      <product>VMware, Inc.</product>
      <serialNumber/>
      <systemName>Juno-Win10321</systemName>
      <timeZone>-0800</timeZone>
      <timeZoneDescription>PST</timeZoneDescription>
   </system>
   <type/>
   <users>
      <e>
         <passwordRequired>true</passwordRequired>
         <userDisabled>false</userDisabled>
         <userLockout>false</userLockout>
         <userType>Admin</userType>
         <username>Administrator</username>
      </e>
      <e>
         <passwordRequired>true</passwordRequired>
         <userDisabled>false</userDisabled>
         <userLockout>false</userLockout>
         <userType>Admin</userType>
         <username>rmmengg</username>
      </e>
      <e>
         <passwordRequired>true</passwordRequired>
         <userDisabled>false</userDisabled>
         <userLockout>false</userLockout>
         <userType>Admin</userType>
         <username>Remote Support</username>
      </e>
      <e>
         <passwordRequired>true</passwordRequired>
         <userDisabled>false</userDisabled>
         <userLockout>false</userLockout>
         <userType>Standard User</userType>
         <username>rmmengg</username>
      </e>
      <e>
         <passwordRequired>true</passwordRequired>
         <userDisabled>false</userDisabled>
         <userLockout>false</userLockout>
         <userType>Standard User</userType>
         <username>remote</username>
      </e>
      <e>
         <passwordRequired>false</passwordRequired>
         <userDisabled>true</userDisabled>
         <userLockout>false</userLockout>
         <userType>Guest</userType>
         <username>Guest</username>
      </e>
   </users>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Asset_collection_field_validations" id="0e05e5d3-2f7b-4756-aee1-e3df7bca0c51"><con:settings/><con:config><script><![CDATA[import groovy.json.JsonSlurper 
def response = context.expand('${Get_Request_PartnerId_EndpointID#Response}').toString()
def assertionList = []
if(!(response.size() > 0)) {assertionList.add("Asset collection JSON response is empty!")}
if(response != "")
{

def tstamp = "0001-01-01T00:00:00Z"
def slurper = new JsonSlurper()
def jsonResponse = slurper.parseText response
log.info("Verifying asset collection in JSON response")

if(!(jsonResponse.createdBy != null)) {assertionList.add("createdBy property in JSON response is null")}
if(!(jsonResponse.createdBy != "")) {assertionList.add("createdBy field is empty")}

if(!(jsonResponse.createTimeUTC != null)) {assertionList.add("createTimeUTC property in JSON response is null")}
if(!(jsonResponse.createTimeUTC != "")) {assertionList.add("createTimeUTC field is empty")}
if(!(jsonResponse.createTimeUTC != tstamp)) {assertionList.add("createTimeUTC value can't be defaulted")}

if(!(jsonResponse.endpointID != null)) {assertionList.add("endpointID property in JSON response is null")}
if(!(jsonResponse.endpointID != "")) {assertionList.add("endpointID field is empty")}

if(!(jsonResponse.partnerID != null)) {assertionList.add("partnerID property in JSON response is null")}
if(!(jsonResponse.partnerID != "")) {assertionList.add("partnerID field is empty")}

if(!(jsonResponse.clientID != null)) {assertionList.add("clientID property in JSON response is null")}
if(!(jsonResponse.clientID != "")) {assertionList.add("clientID field is empty")}

if(!(jsonResponse.siteID != null)) {assertionList.add("siteID property in JSON response is null")}
if(!(jsonResponse.siteID != "")) {assertionList.add("siteID field is empty")}

if(!(jsonResponse.regID != null)) {assertionList.add("regID property in JSON response is null")}
if(!(jsonResponse.regID != "")) {assertionList.add("regID field is empty")}

if(!(jsonResponse.friendlyName != null)) {assertionList.add("friendlyName property in JSON response is null")}
if(!(jsonResponse.friendlyName != "")) {assertionList.add("friendlyName field is empty")}

if(!(jsonResponse.remoteAddress != null)) {assertionList.add("remoteAddress property in JSON response is null")}
if(!(jsonResponse.remoteAddress != "")) {assertionList.add("remoteAddress field is empty")}

if(!(jsonResponse.baseBoard != null)) {assertionList.add("baseBoard property in JSON response is null")}
if(!(jsonResponse.baseBoard != "")) {assertionList.add("baseBoard field is empty")}

if(!(jsonResponse.baseBoard.product != null)) {assertionList.add("baseBoard.product property in JSON response is null")}
if(!(jsonResponse.baseBoard.product != "")) {assertionList.add("baseBoard.product field is empty")}

if(!(jsonResponse.baseBoard.manufacturer != null)) {assertionList.add("baseBoard.manufacturer property in JSON response is null")}
if(!(jsonResponse.baseBoard.manufacturer != "")) {assertionList.add("baseBoard.manufacturer field is empty")}

if(!(jsonResponse.baseBoard.name != null)) {assertionList.add("baseBoard.name property in JSON response is null")}
if(!(jsonResponse.baseBoard.name != "")) {assertionList.add("baseBoard.name field is empty")}

if(!(jsonResponse.bios != null)) {assertionList.add("bios property in JSON response is null")}
if(!(jsonResponse.bios != "")) {assertionList.add("bios field is empty")}

if(!(jsonResponse.bios.product != null)) {assertionList.add("bios.product property in JSON response is null")}
if(!(jsonResponse.bios.product != "")) {assertionList.add("bios.product field is empty")}

if(!(jsonResponse.bios.manufacturer != null)) {assertionList.add("bios.manufacturer property in JSON response is null")}
if(!(jsonResponse.bios.manufacturer != "")) {assertionList.add("bios.manufacturer field is empty")}

if(!(jsonResponse.bios.serialNumber != null)) {assertionList.add("bios.serialNumber property in JSON response is null")}
if(!(jsonResponse.bios.serialNumber != "")) {assertionList.add("bios.serialNumber field is empty")}

if(!(jsonResponse.drives != null)) {assertionList.add("drives property in JSON response is null")}
if(!(jsonResponse.drives != "")) {assertionList.add("drives field is empty")}

def drivesArray = jsonResponse.drives
if(!( drivesArray.size > 0)) { assertionList.add("asset drive array is empty") }

for (int i = 0; i < drivesArray.size(); i++) {

if(!(jsonResponse.drives[i].product != null)) {assertionList.add("drives.product property in JSON response is null")}
if(!(jsonResponse.drives[i].product != "")) {assertionList.add("drives.product field is empty")}

if(!(jsonResponse.drives[i].manufacturer != null)) {assertionList.add("drives.manufacturer property in JSON response is null")}
if(!(jsonResponse.drives[i].manufacturer != "")) {assertionList.add("drives.manufacturer field is empty")}

if(!(jsonResponse.drives[i].mediaType != null)) {assertionList.add("drives.mediaType property in JSON response is null")}
if(!(jsonResponse.drives[i].mediaType != "")) {assertionList.add("drives.mediaType field is empty")}

if(!(jsonResponse.drives[i].interfaceType != null)) {assertionList.add("drives.interfaceType property in JSON response is null")}
if(!(jsonResponse.drives[i].interfaceType != "")) {assertionList.add("drives.interfaceType field is empty")}

if(!(jsonResponse.drives[i].logicalName != null)) {assertionList.add("drives.logicalName property in JSON response is null")}
if(!(jsonResponse.drives[i].logicalName != "")) {assertionList.add("drives.logicalName field is empty")}

if(!(jsonResponse.drives[i].sizeBytes != null)) {assertionList.add("drives.sizeBytes property in JSON response is null")}
if(!(jsonResponse.drives[i].sizeBytes != "")) {assertionList.add("drives.sizeBytes field is empty")}
if(!(jsonResponse.drives[i].sizeBytes > 0)) {assertionList.add("drives.sizeBytes field has zero value")}

if(!(jsonResponse.drives[i].numberOfPartitions != null)) {assertionList.add("drives.numberOfPartitions property in JSON response is null")}
if(!(jsonResponse.drives[i].numberOfPartitions != "")) {assertionList.add("drives.numberOfPartitions field is empty")}
if(!(jsonResponse.drives[i].numberOfPartitions > 0)) {assertionList.add("drives.numberOfPartitions field has zero value")}

def drivesPartitionArray = jsonResponse.drives[i].partitionData
if(!( drivesPartitionArray.size > 0)) { assertionList.add("asset drive.partitionData array is empty") }

if(!(jsonResponse.drives[i].partitionData != null)) {assertionList.add("drives.partitionData property in JSON response is null")}
if(!(jsonResponse.drives[i].partitionData != "")) {assertionList.add("drives.partitionData field is empty")}

for (int j = 0; j < drivesPartitionArray.size(); j++) {

if(!(jsonResponse.drives[i].partitionData[j].name != null)) {assertionList.add("drives.partitionData.name field is null")}
if(!(jsonResponse.drives[i].partitionData[j].name != "")) {assertionList.add("drives.partitionData.name field is null")}

if(!(jsonResponse.drives[i].partitionData[j].fileSystem != null)) {assertionList.add("drives.partitionData.fileSystem field is null")}
if(!(jsonResponse.drives[i].partitionData[j].fileSystem != "")) {assertionList.add("drives.partitionData.fileSystem field is null")}

if(!(jsonResponse.drives[i].partitionData[j].description != null)) {assertionList.add("drives.partitionData.description field is null")}
if(!(jsonResponse.drives[i].partitionData[j].description != "")) {assertionList.add("drives.partitionData.description field is null")}

if(!(jsonResponse.drives[i].partitionData[j].sizeBytes != null)) {assertionList.add("drives.partitionData.sizeBytes field is null")}
if(!(jsonResponse.drives[i].partitionData[j].sizeBytes != "")) {assertionList.add("drives.partitionData.sizeBytes field is null")}
if(!(jsonResponse.drives[i].partitionData[j].sizeBytes > 0)) {assertionList.add("drives.partitionData.sizeBytes field has zero value")}

}
}

if(!(jsonResponse.os != null)) {assertionList.add("os property in JSON response is null")}
if(!(jsonResponse.os != "")) {assertionList.add("os field is empty")}

if(!(jsonResponse.os.product != null)) {assertionList.add("os.product property in JSON response is null")}
if(!(jsonResponse.os.product != "")) {assertionList.add("os.product field is empty")}

if(!(jsonResponse.os.manufacturer != null)) {assertionList.add("os.manufacturer property in JSON response is null")}
if(!(jsonResponse.os.manufacturer != "")) {assertionList.add("os.manufacturer field is empty")}

if(!(jsonResponse.os.osLanguage != null)) {assertionList.add("os.osLanguage property in JSON response is null")}
if(!(jsonResponse.os.osLanguage != "")) {assertionList.add("os.osLanguage field is empty")}

if(!(jsonResponse.os.serialNumber != null)) {assertionList.add("os.serialNumber property in JSON response is null")}
if(!(jsonResponse.os.serialNumber != "")) {assertionList.add("os.serialNumber field is empty")}

if(!(jsonResponse.os.version != null)) {assertionList.add("os.version property in JSON response is null")}
if(!(jsonResponse.os.version != "")) {assertionList.add("os.version field is empty")}

if(!(jsonResponse.os.installDate != null)) {assertionList.add("os.installDate property in JSON response is null")}
if(!(jsonResponse.os.installDate != "")) {assertionList.add("os.installDate field is empty")}

if(!(jsonResponse.os.type != null)) {assertionList.add("os.type property in JSON response is null")}
if(!(jsonResponse.os.type != "")) {assertionList.add("os.type field is empty")}

if(!(jsonResponse.os.arch != null)) {assertionList.add("os.arch property in JSON response is null")}
if(!(jsonResponse.os.arch != "")) {assertionList.add("os.arch field is empty")}

if(!(jsonResponse.system != null)) {assertionList.add("system property in JSON response is null")}
if(!(jsonResponse.system != "")) {assertionList.add("system field is empty")}


if(!(jsonResponse.system.product != null)) {assertionList.add("system.product property in JSON response is null")}
if(!(jsonResponse.system.product != "")) {assertionList.add("system.product field is empty")}

if(!(jsonResponse.system.model != null)) {assertionList.add("system.model property in JSON response is null")}
if(!(jsonResponse.system.model != "")) {assertionList.add("system.model field is empty")}

if(!(jsonResponse.system.timeZone != null)) {assertionList.add("system.timeZone property in JSON response is null")}
if(!(jsonResponse.system.timeZone != "")) {assertionList.add("system.timeZone field is empty")}

//if(!(jsonResponse.system.domain != null)) {assertionList.add("system.domain property in JSON response is null")}
//if(!(jsonResponse.system.domain != "")) {assertionList.add("system.domain field is empty")}

if(!(jsonResponse.system.timeZoneDescription != null)) {assertionList.add("system.timeZoneDescription property in JSON response is null")}
if(!(jsonResponse.system.timeZoneDescription != "")) {assertionList.add("system.timeZoneDescription field is empty")}

if(!(jsonResponse.system.systemName != null)) {assertionList.add("system.systemName property in JSON response is null")}
if(!(jsonResponse.system.systemName != "")) {assertionList.add("system.systemName field is empty")}

if(!(jsonResponse.installedSoftwares != null)) {assertionList.add("installedSoftwares property in JSON response is null")}
if(!(jsonResponse.installedSoftwares != "")) {assertionList.add("installedSoftwares field is empty")}

def installedSoftwaresArray = jsonResponse.installedSoftwares
if(!( installedSoftwaresArray.size > 0)) { assertionList.add("asset installedSoftwaresArray is empty") }

for (int s = 0; s < installedSoftwaresArray.size(); s++) {

if(!(jsonResponse.installedSoftwares[s].name != null)) {assertionList.add("installedSoftwaresName property in JSON response is null")}
if(!(jsonResponse.installedSoftwares[s].name != "")) {assertionList.add("installedSoftwaresName field is empty")}
}

def physicalMemoryArray = jsonResponse.physicalMemory
if(!( physicalMemoryArray.size > 0)) { assertionList.add("asset physicalMemoryArray is empty") }

for (int pm = 0; pm < physicalMemoryArray.size(); pm++) {
if(!(jsonResponse.physicalMemory[pm].containsKey("manufacturer"))) { assertionList.add("manufacturer not found in response") }
if(!(jsonResponse.physicalMemory[pm].containsKey("serialNumber"))) { assertionList.add("serialNumber not found in response") }
if(!(jsonResponse.physicalMemory[pm].containsKey("sizeBytes"))) { assertionList.add("sizeBytes not found in response") }
if(!(jsonResponse.physicalMemory[pm].sizeBytes != null)) {assertionList.add(" physicalMemory.sizeBytes property in JSON response is null")}
if(!(jsonResponse.physicalMemory[pm].sizeBytes != "")) {assertionList.add("physicalMemory.sizeBytes field is empty")}
}


if(!(jsonResponse.processors != null)) {assertionList.add("processors property in JSON response is null")}
if(!(jsonResponse.processors != "")) {assertionList.add("processors field is empty")}

def processorsArray = jsonResponse.processors
if(!( processorsArray.size > 0)) { assertionList.add("asset processorsArray is empty") }

for (int p = 0; p < processorsArray.size(); p++) {

if(!(jsonResponse.processors[p].product != null)) {assertionList.add(" processors.product property in JSON response is null")}
if(!(jsonResponse.processors[p].product != "")) {assertionList.add("processors.product field is empty")}

if(!(jsonResponse.processors[p].manufacturer != null)) {assertionList.add(" processors.manufacturer property in JSON response is null")}
if(!(jsonResponse.processors[p].manufacturer != "")) {assertionList.add("processors.manufacturer field is empty")}

if(!(jsonResponse.processors[p].processorType != null)) {assertionList.add(" processors.processorType property in JSON response is null")}
if(!(jsonResponse.processors[p].processorType != "")) {assertionList.add("processors.processorType field is empty")}

if(!(jsonResponse.processors[p].numberOfCores != null)) {assertionList.add(" processors.numberOfCores property in JSON response is null")}
if(!(jsonResponse.processors[p].numberOfCores != "")) {assertionList.add("processors.numberOfCores field is empty")}
if(!(jsonResponse.processors[p].numberOfCores > 0)) {assertionList.add("processors.numberOfCores field has zero value")}

if(!(jsonResponse.processors[p].clockSpeedMhz != null)) {assertionList.add(" processors.clockSpeedMhz property in JSON response is null")}
if(!(jsonResponse.processors[p].clockSpeedMhz != "")) {assertionList.add("processors.clockSpeedMhz field is empty")}
if(!(jsonResponse.processors[p].clockSpeedMhz > 0)) {assertionList.add("processors.clockSpeedMhz field has zero value")}

if(!(jsonResponse.processors[p].family != null)) {assertionList.add(" processors.family property in JSON response is null")}
if(!(jsonResponse.processors[p].family != "")) {assertionList.add("processors.family field is empty")}
if(!(jsonResponse.processors[p].family > 0)) {assertionList.add("processors.family field has zero value")}

if(!(jsonResponse.processors[p].level != null)) {assertionList.add(" processors.level property in JSON response is null")}
if(!(jsonResponse.processors[p].level != "")) {assertionList.add("processors.level field is empty")}
if(!(jsonResponse.processors[p].level > 0)) {assertionList.add("processors.level field has zero value")}
}

if(!(jsonResponse.networks != null)) {assertionList.add("networks property in JSON response is null")}
if(!(jsonResponse.networks != "")) {assertionList.add("networks field is empty")}

def networksArray = jsonResponse.networks
if(!( networksArray.size > 0)) { assertionList.add("asset networksArray is empty") }

//def dhcpenabled = true
//def dhcpServer = "0.0.0.0"
//def lease = "0001-01-01T00:00:00Z"
def ipenabled = true
def vipv4 = "0.0.0.0"
def vsubnetMask = "0.0.0.0"
def vdefaultIPGateway = "0.0.0.0"
def vipv6 = "::"

for (int n = 0; n < networksArray.size(); n++) {

/*
 * Removing assertions as following fields might be optional on some windows flavours
 * if(jsonResponse.networks[n].dhcpEnabled==dhcpenabled)
{
	
if(!(jsonResponse.networks[n].dhcpServer != null)) {assertionList.add("dhcpServer property in JSON response is null")}
if(!(jsonResponse.networks[n].dhcpServer != "")) {assertionList.add("dhcpServer field is empty")}
if(!(jsonResponse.networks[n].dhcpServer !=dhcpServer )) {assertionList.add("dhcpServer field is empty")}


if(!(jsonResponse.networks[n].dhcpLeaseObtained != null)) {assertionList.add("dhcpLeaseObtained property in JSON response is null")}
if(!(jsonResponse.networks[n].dhcpLeaseObtained != "")) {assertionList.add("dhcpLeaseObtained field is empty")}
if(!(jsonResponse.networks[n].dhcpLeaseObtained != lease)) {assertionList.add("dhcpLeaseObtained field is empty")}

if(!(jsonResponse.networks[n].dhcpLeaseExpires != null)) {assertionList.add("dhcpLeaseExpires property in JSON response is null")}
if(!(jsonResponse.networks[n].dhcpLeaseExpires != "")) {assertionList.add("dhcpLeaseExpires field is empty")}
if(!(jsonResponse.networks[n].dhcpLeaseExpires != lease)) {assertionList.add("dhcpLeaseExpires field is empty")}
}

if(!(jsonResponse.networks[n].vendor != null)) {assertionList.add("vendor property in JSON response is null")}
if(!(jsonResponse.networks[n].vendor != "")) {assertionList.add("vendor field is empty")}
*/

if(!(jsonResponse.networks[n].product != null)) {assertionList.add("product property in JSON response is null")}
if(!(jsonResponse.networks[n].product != "")) {assertionList.add("product field is empty")}

if(!(jsonResponse.networks[n].logicalName != null)) {assertionList.add("logicalName property in JSON response is null")}
if(!(jsonResponse.networks[n].logicalName != "")) {assertionList.add("logicalName field is empty")}

if(jsonResponse.networks[n].ipEnabled==ipenabled)
{
//if(!(jsonResponse.networks[n].defaultIPGateway != null)) {assertionList.add("defaultIPGateway property in JSON response is null")}
if(!(jsonResponse.networks[n].defaultIPGateway != "")) {assertionList.add("defaultIPGateway field is empty")}
//if(!(jsonResponse.networks[n].defaultIPGateway != vdefaultIPGateway )) {assertionList.add("defaultIPGateway field is empty")}

if(!(jsonResponse.networks[n].subnetMask != null)) {assertionList.add("subnetMask property in JSON response is null")}
if(!(jsonResponse.networks[n].subnetMask != "")) {assertionList.add("subnetMask field is empty")}
if(!(jsonResponse.networks[n].subnetMask != vsubnetMask )) {assertionList.add("subnetMask field is empty")}

if(!(jsonResponse.networks[n].ipv4 != null)) {assertionList.add("ipv4 property in JSON response is null")}
if(!(jsonResponse.networks[n].ipv4 != "")) {assertionList.add("ipv4 field is empty")}
if(!(jsonResponse.networks[n].ipv4 != vipv4 )) {assertionList.add("ipv4 field is empty")}

if(!(jsonResponse.networks[n].ipv6 != null)) {assertionList.add("ipv6 property in JSON response is null")}
if(!(jsonResponse.networks[n].ipv6 != "")) {assertionList.add("ipv6 field is empty")}
//if(!(jsonResponse.networks[n].ipv6 != vipv6 )) {assertionList.add("ipv6 field is not valid")}

if(!(jsonResponse.networks[n].macAddress != null)) {assertionList.add("macAddress property in JSON response is null")}
if(!(jsonResponse.networks[n].macAddress != "")) {assertionList.add("macAddress field is empty")}

if(!(jsonResponse.networks[n].ipv4List != null)) {assertionList.add("ipv4List property in JSON response is null")}
if(!(jsonResponse.networks[n].ipv4List != "")) {assertionList.add("ipv4List field is empty")}

/*
if(!(jsonResponse.networks[n].ipv6List != null)) {assertionList.add("ipv6List property in JSON response is null")}
if(!(jsonResponse.networks[n].ipv6List != "")) {assertionList.add("ipv6List field is empty")}
*/
if(!(jsonResponse.networks[n].subnetMasks != null)) {assertionList.add("subnetMasks property in JSON response is null")}
if(!(jsonResponse.networks[n].subnetMasks != "")) {assertionList.add("subnetMasks field is empty")}

//if(!(jsonResponse.networks[n].defaultIPGateways != null)) {assertionList.add("defaultIPGateways property in JSON response is null")}
if(!(jsonResponse.networks[n].defaultIPGateways != "")) {assertionList.add("defaultIPGateways field is empty")}

}

}
assert assertionList.isEmpty() : assertionList.toString()
log.info("Verified asset collection in JSON response")
}]]></script></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>e37d24fe-3bc0-40de-bfd2-116e60f105bd</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints><con:breakPoints><con:testStepId>6628ec23-305a-49f3-ba09-f2aec2349ea5</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="4741ab3a-f983-4d4a-bace-d26d5432f2af" name="Performance Process API Validation"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="e9e78dc8-545b-4f29-adb4-1e117dc36729" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C934568-Validate response format based on PartnerID and EndpointID" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="delay" name="Delay" id="851b35af-a3e5-4e0a-acec-f9c0cb61391c"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step1-Get_Request_Perf_Process" id="c0f2de50-7949-4dd0-83dc-dddf3f6e8d3d"><con:settings/><con:config service="REST Service 11" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/process" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1-Get_Request_Perf_Process" id="cc652672-910c-4337-8265-ee05a2dff41e" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com/</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="c6d629e8-8053-4400-863e-c8917a669eb2" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="adb8e8f9-a6c6-4220-b09f-9cf5452e248c" name="JsonPath Existence Match"><con:configuration><path>$[0]['createTimeUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c6ae5153-de99-47e4-95e1-fd146f49932d" name="JsonPath Existence Match 2"><con:configuration><path>$[0]['createdBy']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d7acce81-dc4a-4198-8957-ae50e445079c" name="JsonPath Existence Match 3"><con:configuration><path>$[0]['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="cb491949-7605-48d6-8352-e033de0e20ec" name="JsonPath Existence Match 4"><con:configuration><path>$[0]['type']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0e7280fc-1ea0-4fda-b1be-50d87622efc4" name="JsonPath Existence Match 7"><con:configuration><path>$[0]['clientID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="35fa71bc-6c99-40bb-b6b2-8f71ff315c4b" name="JsonPath Existence Match 8"><con:configuration><path>$[0]['siteID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="05ef8d77-c757-44c1-a05e-133d0879a3e6" name="JsonPath Existence Match 9"><con:configuration><path>$[0]['processes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="197b2ef8-df02-4b99-a981-16cdad0884b6" name="JsonPath Existence Match 10"><con:configuration><path>$[0]['processes'][0]['createTimeUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="232a81f4-c348-42b4-990d-8c1354441ee5" name="JsonPath Existence Match 11"><con:configuration><path>$[0]['processes'][0]['createdBy']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="860f3e3a-2a97-4b48-b27e-b18d40c97705" name="JsonPath Existence Match 12"><con:configuration><path>$[0]['processes'][0]['index']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="70a57c91-ffbe-4846-b471-19944d33d423" name="JsonPath Existence Match 13"><con:configuration><path>$[0]['processes'][0]['processID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="17da452e-d011-4967-bef2-5955e3685410" name="JsonPath Existence Match 14"><con:configuration><path>$[0]['processes'][0]['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="99c79d49-ae07-4253-90bf-6094e15b8ebc" name="JsonPath Existence Match 15"><con:configuration><path>$[0]['processes'][0]['percentCPUUsage']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a8188962-20ae-4f8d-aa00-769c6c5d889c" name="JsonPath Existence Match 16"><con:configuration><path>$[0]['processes'][0]['type']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a512a964-a174-4db9-ae9a-eefd1ebefbfa" name="JsonPath Existence Match 17"><con:configuration><path>$[0]['processes'][0]['handleCount']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="8340277d-8781-42e6-8ba3-3fb0b816f0b0" name="JsonPath Match"><con:configuration><path>$[0]['processes'][0]['type']</path><content>performanceProcess</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="b841bcda-2afb-44df-b3d9-aadf661eda7e" name="JsonPath Match 2"><con:configuration><path>$[0]['name']</path><content>processes</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4795c0a5-75bc-4279-a6ca-95ce6d61b8b8" name="JsonPath Match 3"><con:configuration><path>$[0]['type']</path><content>performanceProcesses</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6cfbe8f8-a48b-48ef-96cb-f88e295aba6e" name="JsonPath Existence Match 18"><con:configuration><path>$[0]['processes'][0]['threadCount']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="24f91adb-3921-4723-aa0a-2fea7a493114" name="JsonPath Existence Match 19"><con:configuration><path>$[0]['processes'][0]['privateBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e44a8313-7e66-4c1c-b98f-94133327cc37" name="JsonPath Existence Match 20"><con:configuration><path>$[0]['processes'][0]['userName']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="924c4286-1321-4a8f-b1f3-d131b08194d5" name="JsonPath Count"><con:configuration><path>$[0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="803a48c3-9fb6-429e-98ec-10c4b4476aa1" name="JsonPath Count 2"><con:configuration><path>$[1]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="eea46e55-abb6-4099-b90d-6786a2d8a726" name="JsonPath Existence Match 21"><con:configuration><path>$[0]['processes'][0]['diskReadBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="23b7d43a-1121-447b-97cb-b23d5f14ac38" name="JsonPath Existence Match 22"><con:configuration><path>$[0]['processes'][0]['diskWriteBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="be8e2e69-d7e8-44b1-a8a7-97c19ff7ac35" name="JsonPath Existence Match 23"><con:configuration><path>$[0]['processes'][0]['netSendBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="62cb663b-4430-4171-9848-40abc02bcf3a" name="JsonPath Existence Match 24"><con:configuration><path>$[0]['processes'][0]['netReceiveBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4a6ac6c4-205c-43c9-9f45-806c9cc340dd" name="JsonPath Match 4"><con:configuration><path>$[0]['endpointID']</path><content>${Step1-Get_Request_Perf_Process#endpointId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ee56c3d0-b6ca-4e09-81a9-2078d81ceb8e" name="JsonPath Match 5"><con:configuration><path>$[0]['partnerID']</path><content>${Step1-Get_Request_Perf_Process#partnerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Step2-Perf_Process_Response_Validation" id="e05a243c-18fc-480a-82fb-3eb91eda5fc7"><con:settings/><con:config><script>import groovy.json.JsonSlurper 
def response = context.expand('${Step1-Get_Request_Perf_Process#Response}').toString()
def assertionList = []
if(!(response.size() > 0)) {assertionList.add("Process JSON response is empty!")}
if(response != "")
{
def slurper = new JsonSlurper()
def jsonResponse = slurper.parseText response
log.info("Verifying Process fields in JSON response")
for (int g=0; g&lt;1;g++ )
{
	
def tstamp = "0001-01-01T00:00:00Z"
if(!(jsonResponse[g].createTimeUTC != null)) {assertionList.add("createTimeUTC property in JSON response is null")}
if(!(jsonResponse[g].createTimeUTC != "")) {assertionList.add("createTimeUTC field is empty")}
if(!(jsonResponse[g].createTimeUTC != tstamp)) {assertionList.add("createTimeUTC value can't be defaulted")}

if(!(jsonResponse[g].name != null)) {assertionList.add("name property in JSON response is null")}
if(!(jsonResponse[g].name != "")) {assertionList.add("name field is empty")}

if(!(jsonResponse[g].type != null)) {assertionList.add("name property in JSON response is null")}
if(!(jsonResponse[g].type != "")) {assertionList.add("name field is empty")}

if(!(jsonResponse[g].endpointID != null)) {assertionList.add("endpointID property in JSON response is null")}
if(!(jsonResponse[g].endpointID != "")) {assertionList.add("endpointID field is empty")}

if(!(jsonResponse[g].partnerID != null)) {assertionList.add("partnerID property in JSON response is null")}
if(!(jsonResponse[g].partnerID != "")) {assertionList.add("partnerID field is empty")}

if(!(jsonResponse[g].clientID != null)) {assertionList.add("clientID property in JSON response is null")}
if(!(jsonResponse[g].clientID != "")) {assertionList.add("clientID field is empty")}

if(!(jsonResponse[g].siteID != null)) {assertionList.add("siteID property in JSON response is null")}
if(!(jsonResponse[g].siteID != "")) {assertionList.add("siteID field is empty")}


if(!(jsonResponse[g].processes != null)) {assertionList.add("processes JSON response is null")}
if(!(jsonResponse[g].processes != "")) {assertionList.add("processes field is empty")}

def processesArray = jsonResponse[g].processes
if(!( processesArray.size > 0)) { assertionList.add("processesArray is empty") }

for (int i = 0; i &lt; processesArray.size(); i++) {

if(!(jsonResponse[g].processes[i].createTimeUTC != null)) {assertionList.add("createTimeUTC property in JSON response is null")}
if(!(jsonResponse[g].processes[i].createTimeUTC != "")) {assertionList.add("createTimeUTC field is empty")}
if(!(jsonResponse[g].processes[i].createTimeUTC != tstamp)) {assertionList.add("createTimeUTC value can't be defaulted")}

if(!(jsonResponse[g].processes[i].name != null)) {assertionList.add("name property in JSON response is null")}
if(!(jsonResponse[g].processes[i].name != "")) {assertionList.add("name field is empty")}

if(!((jsonResponse[g].processes[i].name == "Idle") || (jsonResponse[g].processes[i].name == "_Total" ) ))
{
if(!(jsonResponse[g].processes[i].processID >0)) {assertionList.add("processID property value is zero")}
if(!(jsonResponse[g].processes[i].handleCount >0)) {assertionList.add("handleCount property value is zero")}
if(!(jsonResponse[g].processes[i].threadCount >0)) {assertionList.add("type property value is zero")}
if(!(jsonResponse[g].processes[i].privateBytes >0)) {assertionList.add("privateBytes property value is zero")}
}
if(!(jsonResponse[g].processes[i].processID != null)) {assertionList.add("processID property in JSON response is null")}
if(!(jsonResponse[g].processes[i].processID != "")) {assertionList.add("processID field is empty")}

if(!(jsonResponse[g].processes[i].type != null)) {assertionList.add("type property in JSON response is null")}
if(!(jsonResponse[g].processes[i].type != "")) {assertionList.add("type field is empty")}

if(!(jsonResponse[g].processes[i].handleCount != null)) {assertionList.add("handleCount property in JSON response is null")}
if(!(jsonResponse[g].processes[i].handleCount != "")) {assertionList.add("handleCount field is empty")}

if(!(jsonResponse[g].processes[i].threadCount != null)) {assertionList.add("type property in JSON response is null")}
if(!(jsonResponse[g].processes[i].threadCount != "")) {assertionList.add("type field is empty")}

if(!(jsonResponse[g].processes[i].privateBytes != null)) {assertionList.add("handleCount property in JSON response is null")}
if(!(jsonResponse[g].processes[i].privateBytes != "")) {assertionList.add("handleCount field is empty")}
}
}
assert assertionList.isEmpty() : assertionList.toString()
log.info("Verified Process fields in JSON response")
}</script></con:config></con:testStep><con:testStep type="restrequest" name="Step3-GET_Process_byCount" id="ae26f382-499a-4166-84d1-5ea85272697f"><con:settings/><con:config service="REST Service 16" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/process" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step3-GET_Process_byCount" id="d71a5f70-d643-4205-88c7-b624a5ee1e3c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/process</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ab5ccff5-cc15-41a5-a598-ed6c4e80a162" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5a99b180-89cb-4efb-8c99-0039dec73eab" name="JsonPath Existence Match"><con:configuration><path>$[2]</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step4-GET_Process_BadRequest" id="0998c83e-1609-47e1-8dfb-f7a592bc7b57"><con:settings/><con:config service="REST Service 17" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/process" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step4-GET_Process_BadRequest" id="44070495-234e-44ff-b2b2-948cec2427d2" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/process</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="de43ea56-3700-470a-9e1e-a12a11627647" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="count" value="abc12*("/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>851b35af-a3e5-4e0a-acec-f9c0cb61391c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="cf34fe07-347c-4721-bc20-d64aa2532d80" name="Performance Memory API Validation"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="b67c84c7-e33d-4837-b979-845fcbe5ad2c" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C816735-Validate response format based on PartnerID and EndpointID" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="delay" name="Delay" id="4bfa0686-8d58-4f60-a3bb-c3f6ede4b38b"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step1-Get_Request_Perf_Memory" id="9570977c-b9bd-44d7-9ebe-08152e358ee9"><con:settings/><con:config service="REST Service 14" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/memory" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1-Get_Request_Perf_Memory" id="b7e38ad5-1bd0-43a0-b9ff-4253a0c85e00" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50001743/endpoint/a633a737-180c-4338-a120-04f9d875ed84/memory</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="be059971-d9f3-46a4-ae08-2e7fa1dcfd47" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="05a2ab73-bfd8-4211-b5f4-5454aa3d40dd" name="JsonPath Count"><con:configuration><path>$[0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="8d4ec8d5-fb08-404b-be5b-ff59e259bd7d" name="JsonPath Count 2"><con:configuration><path>$[1]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d523c6fc-3760-42b5-8d8a-0d09899d7efa" name="JsonPath Existence Match"><con:configuration><path>$[0]['createTimeUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f3c16fca-ec89-41e4-934f-a302e2437f72" name="JsonPath Existence Match 2"><con:configuration><path>$[0]['createdBy']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e1512736-c0a0-4c64-a653-4622839aa9b4" name="JsonPath Existence Match 3"><con:configuration><path>$[0]['index']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="33c91af1-1726-4e15-96dc-fbad14bf78c2" name="JsonPath Match"><con:configuration><path>$[0]['name']</path><content>memory</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="90092670-eb4a-49bb-a2f1-7b6e52ce474e" name="JsonPath Match 2"><con:configuration><path>$[0]['type']</path><content>performanceMemory</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="05fa8536-319a-48ce-946b-7a4fc5704ad7" name="JsonPath Existence Match 6"><con:configuration><path>$[0]['clientID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="40885725-fcce-4a83-a311-98103363da4d" name="JsonPath Existence Match 7"><con:configuration><path>$[0]['siteID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e77f8063-8b5b-466c-973b-f11fe0e6fa3e" name="JsonPath Existence Match 8"><con:configuration><path>$[0]['physicalTotalBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a47995c5-135c-46ed-ba61-2d860c5272f7" name="JsonPath Existence Match 9"><con:configuration><path>$[0]['physicalInUseBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1ff8a2f9-fe25-4f69-b963-fcc7cc64179a" name="JsonPath Existence Match 10"><con:configuration><path>$[0]['physicalAvailableBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8f2e8e92-92be-4bee-b9bd-5282e694aedb" name="JsonPath Existence Match 11"><con:configuration><path>$[0]['virtualTotalBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e6b75072-1c64-489b-9dfc-3b8614f390f7" name="JsonPath Existence Match 12"><con:configuration><path>$[0]['virtualInUseBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="dfabbd2b-19c1-47c3-bec6-6609f96ee7a0" name="JsonPath Existence Match 13"><con:configuration><path>$[0]['virtualAvailableBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9e157efe-3c34-48c2-98c4-2dba2fb0c623" name="JsonPath Existence Match 14"><con:configuration><path>$[0]['percentCommittedInUseBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7e9abe1a-51de-4eb6-96ba-e9ceda7bb6d5" name="JsonPath Existence Match 15"><con:configuration><path>$[0]['committedBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3b2922ac-dee1-468d-90df-6c93e32ab4a9" name="JsonPath Existence Match 16"><con:configuration><path>$[0]['freeSystemPageTableEntriesBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ebade412-0849-4b07-bded-0517fe4f0b1a" name="JsonPath Existence Match 17"><con:configuration><path>$[0]['poolNonPagedBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="bcb6f39c-3a63-4e64-ae38-a1be46862423" name="JsonPath Existence Match 18"><con:configuration><path>$[0]['pagesPerSecondBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="62abf3d5-a4c3-412c-9ecf-907b0d2a8cc5" name="JsonPath Existence Match 19"><con:configuration><path>$[0]['swapinPerSecondBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="cd577e96-b18f-4fad-9da7-006196d9328d" name="JsonPath Existence Match 20"><con:configuration><path>$[0]['swapoutPerSecondBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f24c4a24-6309-4b2b-ab81-13d444542e96" name="JsonPath Existence Match 21"><con:configuration><path>$[0]['pagesOutputPerSec']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="0dc1418f-f649-46e2-9ae6-5fd64e171394" name="JsonPath Match 3"><con:configuration><path>$[0]['endpointID']</path><content>${Step1-Get_Request_Perf_Memory#endpointId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="dd9871c1-c9ad-474b-8c9f-8642e8c55f1a" name="JsonPath Match 4"><con:configuration><path>$[0]['partnerID']</path><content>${Step1-Get_Request_Perf_Memory#partnerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Step2-Perf_Memory_Response_Validation" id="9e53e429-5841-4a56-8b7b-c3a2ab75c789"><con:settings/><con:config><script>import groovy.json.JsonSlurper 
def response = context.expand('${Step1-Get_Request_Perf_Memory#Response}').toString()
def assertionList = []
if(!(response.size() > 0)) {assertionList.add("Memory JSON response is empty!")}
if(response != "")
{
def slurper = new JsonSlurper()
def jsonResponse = slurper.parseText response
log.info("Verifying Memory fields in JSON response")
for (int g=0; g&lt;1;g++ )
{	
def tstamp = "0001-01-01T00:00:00Z"
if(!(jsonResponse[g].createTimeUTC != null)) {assertionList.add("createTimeUTC property in JSON response is null")}
if(!(jsonResponse[g].createTimeUTC != "")) {assertionList.add("createTimeUTC field is empty")}
if(!(jsonResponse[g].createTimeUTC != tstamp)) {assertionList.add("createTimeUTC value can't be defaulted")}

if(!(jsonResponse[g].name != null)) {assertionList.add("name property in JSON response is null")}
if(!(jsonResponse[g].name != "")) {assertionList.add("name field is empty")}

if(!(jsonResponse[g].type != null)) {assertionList.add("name property in JSON response is null")}
if(!(jsonResponse[g].type != "")) {assertionList.add("name field is empty")}

if(!(jsonResponse[g].endpointID != null)) {assertionList.add("endpointID property in JSON response is null")}
if(!(jsonResponse[g].endpointID != "")) {assertionList.add("endpointID field is empty")}

if(!(jsonResponse[g].partnerID != null)) {assertionList.add("partnerID property in JSON response is null")}
if(!(jsonResponse[g].partnerID != "")) {assertionList.add("partnerID field is empty")}

if(!(jsonResponse[g].clientID != null)) {assertionList.add("clientID property in JSON response is null")}
if(!(jsonResponse[g].clientID != "")) {assertionList.add("clientID field is empty")}

if(!(jsonResponse[g].siteID != null)) {assertionList.add("siteID property in JSON response is null")}
if(!(jsonResponse[g].siteID != "")) {assertionList.add("siteID field is empty")}


if(!(jsonResponse[g].physicalTotalBytes >0)) {assertionList.add("physicalTotalBytes property value is zero")}
if(!(jsonResponse[g].virtualTotalBytes >0)) {assertionList.add("virtualTotalBytes property value is zero")}
if(!(jsonResponse[g].percentCommittedInUseBytes >0)) {assertionList.add("percentCommittedInUseBytes property value is zero")}
if(!(jsonResponse[g].committedBytes >0)) {assertionList.add("committedBytes property value is zero")}
if(!(jsonResponse[g].freeSystemPageTableEntriesBytes >0)) {assertionList.add("freeSystemPageTableEntriesBytes property value is zero")}
if(!(jsonResponse[g].poolNonPagedBytes >0)) {assertionList.add("poolNonPagedBytes property value is zero")}

if(!(jsonResponse[g].virtualInUseBytes >0)) {assertionList.add("virtualInUseBytes property value is zero")}
if(!(jsonResponse[g].virtualAvailableBytes >0)) {assertionList.add("virtualAvailableBytes property value is zero")}
if(!(jsonResponse[g].physicalInUseBytes >0)) {assertionList.add("physicalInUseBytes property value is zero")}
if(!(jsonResponse[g].physicalAvailableBytes >0)) {assertionList.add("physicalAvailableBytes property value is zero")}

}
assert assertionList.isEmpty() : assertionList.toString()
log.info("Verified memory fields in JSON response")
}</script></con:config></con:testStep><con:testStep type="restrequest" name="Step3-GET_Memory_byCount" id="4124a083-7eba-4bb5-9b4a-109390fd2f8a"><con:settings/><con:config service="REST Service 18" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/memory" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step3-GET_Memory_byCount" id="fc6db389-b8be-4142-9ae4-485c20743f2d" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/memory</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="a46176db-9b4a-4165-88c8-c9f8fd85ff47" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="d19ae2b4-d361-436f-a9e4-e6d0a48ebc94" name="JsonPath Count"><con:configuration><path>$[0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="ca35813e-3b4c-4082-82fc-f9c52918207d" name="JsonPath Count 2"><con:configuration><path>$[1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="fcbaff0a-761f-4d15-b8c6-a63fd7679d2a" name="JsonPath Count 3"><con:configuration><path>$[2]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step3-GET_Memory_BadRequest" id="77545101-d0eb-4ee8-b219-96d19e75d106"><con:settings/><con:config service="REST Service 19" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/memory" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step3-GET_Memory_BadRequest" id="2604c03c-741a-4059-9a8b-5fb6cc387b1b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/memory</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e47cd07d-bfc1-4d62-afb1-60b96bf622ea" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="count" value="abc12*("/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>4bfa0686-8d58-4f60-a3bb-c3f6ede4b38b</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="9ec5f8fb-9784-4e5a-9d58-128adc50e2f6" name="Performance Storage API Validation"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="a4c7d2f9-fbab-481a-8bc1-28adea5fca2c" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C907728-Validate response format based on PartnerID and EndpointID" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="delay" name="Delay" id="b090e057-eb6e-4fad-a978-242f768eb8af"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step1-Get_Request_Perf_Storage" id="8d392142-f21e-4299-8033-7f8779d2cb5c"><con:settings/><con:config service="REST Service 13" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/storage" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1-Get_Request_Perf_Storage" id="aa4c9d4c-402c-4183-b211-0b07115caade" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/storage</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="83c467bc-4ea3-4b95-a2fb-0c5529344b3a" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="66b89f26-b24b-4ace-90a5-89c64a2206af" name="JsonPath Count"><con:configuration><path>$[0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="4ba8f961-cb8d-48e2-91d8-50eb1bf98b91" name="JsonPath Count 2"><con:configuration><path>$[1]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="61e3c48a-d6a2-4002-b480-50dd4bfaf985" name="JsonPath Existence Match"><con:configuration><path>$[0]['createTimeUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="799724df-ea66-466c-9a11-b8e68bea6de8" name="JsonPath Existence Match 2"><con:configuration><path>$[0]['createdBy']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c5b5a9b7-e984-4dac-a662-123a2490ae1a" name="JsonPath Existence Match 5"><con:configuration><path>$[0]['clientID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4c7d4f8d-3f1c-4834-9647-2f1192c44c3e" name="JsonPath Existence Match 6"><con:configuration><path>$[0]['siteID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6c9ef3ef-dc3a-4fe7-9afa-e9a26531c750" name="JsonPath Match"><con:configuration><path>$[0]['name']</path><content>storage</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="2e8f7f5e-50ce-417e-9fb9-67873f5c5a0c" name="JsonPath Match 2"><con:configuration><path>$[0]['type']</path><content>performanceStorages</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ae4e2c74-2209-40cc-baf3-84946e31d818" name="JsonPath Match 3"><con:configuration><path>$[0]['endpointID']</path><content>${Step1-Get_Request_Perf_Storage#endpointId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bf0436e3-0d03-411a-8d46-86d5de43b7e5" name="JsonPath Match 4"><con:configuration><path>$[0]['partnerID']</path><content>${Step1-Get_Request_Perf_Storage#partnerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f584531d-b7ee-43cf-975d-25ea1c8e1223" name="JsonPath Existence Match 7"><con:configuration><path>$[0]['storages']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6ab71a7f-aded-4670-bfe7-f4b498a87e01" name="JsonPath Existence Match 8"><con:configuration><path>$[0]['storages'][0]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="26bf4177-399a-4ed3-aa1f-07971246e3d9" name="JsonPath Count 3"><con:configuration><path>$[0]['storages'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3668a099-9d61-4019-9d1a-bb15c04b01ca" name="JsonPath Existence Match 9"><con:configuration><path>$[0]['storages'][0]['createTimeUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c0a25974-1230-407b-a31d-b65610be17ef" name="JsonPath Existence Match 10"><con:configuration><path>$[0]['storages'][0]['createdBy']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6998f7e0-afc4-4171-933e-aa96ccc012ba" name="JsonPath Existence Match 11"><con:configuration><path>$[0]['storages'][0]['index']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="dcb06a3a-b638-48f0-b867-fa3dda8e4894" name="JsonPath Existence Match 12"><con:configuration><path>$[0]['storages'][0]['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="5715c0f9-f548-449a-940e-701e000fc887" name="JsonPath Match 5"><con:configuration><path>$[0]['storages'][0]['type']</path><content>performanceStorage</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="dcb10805-1272-47b7-8e45-1f870b1cb277" name="JsonPath Existence Match 13"><con:configuration><path>$[0]['storages'][0]['metric']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="cd0350f0-bd40-4e41-9f4f-80784b03c6e4" name="JsonPath Existence Match 14"><con:configuration><path>$[0]['storages'][0]['metric']['idleTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c8003696-10e9-4506-85bf-a8fafbed7e30" name="JsonPath Existence Match 15"><con:configuration><path>$[0]['storages'][0]['metric']['writeCompleted']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1cf2d107-3be8-4255-a444-49245f72c762" name="JsonPath Existence Match 16"><con:configuration><path>$[0]['storages'][0]['metric']['writeTimeMs']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="bd78ab0e-8885-4b58-8eaa-d0358f83062f" name="JsonPath Existence Match 17"><con:configuration><path>$[0]['storages'][0]['metric']['avgDiskWriteQueueLength']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="190194e5-c857-4b3b-88ae-bc22a24799d2" name="JsonPath Existence Match 18"><con:configuration><path>$[0]['storages'][0]['metric']['avgDiskSecPerWrite']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="03ed889b-a411-48ef-ad70-f104b5aef0d8" name="JsonPath Existence Match 19"><con:configuration><path>$[0]['storages'][0]['metric']['readCompleted']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d6339b6f-b5f9-46cf-89b5-8aff0248dc66" name="JsonPath Existence Match 20"><con:configuration><path>$[0]['storages'][0]['metric']['readTimeMs']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="aa875457-608b-4cb7-8b35-7e3093b237e2" name="JsonPath Existence Match 21"><con:configuration><path>$[0]['storages'][0]['metric']['avgDiskReadQueueLength']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="172a6e20-2748-45af-8f61-2064a210b729" name="JsonPath Existence Match 22"><con:configuration><path>$[0]['storages'][0]['metric']['avgDiskSecPerRead']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6ebc3d08-1d3a-4b3e-ade0-51ab25089561" name="JsonPath Existence Match 23"><con:configuration><path>$[0]['storages'][0]['metric']['freeSpaceBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5b92d1fe-021e-44cc-8b3c-68cba78c1ce9" name="JsonPath Existence Match 24"><con:configuration><path>$[0]['storages'][0]['metric']['usedSpaceBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="98f6aef7-890d-43ca-b91b-fee3e19c6727" name="JsonPath Existence Match 25"><con:configuration><path>$[0]['storages'][0]['metric']['totalSpaceBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a16a3b14-174f-4d91-8c95-3e21bd9c8ffc" name="JsonPath Existence Match 26"><con:configuration><path>$[0]['storages'][0]['metric']['diskTimeTotal']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="71f8270b-7ea2-4050-8151-90c1b5f464aa" name="JsonPath Existence Match 27"><con:configuration><path>$[0]['storages'][0]['partitions']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="83085b99-1e19-4be7-ab5b-dbff5aa03848" name="JsonPath Existence Match 28"><con:configuration><path>$[0]['storages'][0]['partitions'][0]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="3580c5ba-3186-478a-965f-84bfd7618f39" name="JsonPath Count 4"><con:configuration><path>$[0]['storages'][0]['partitions'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="773d8e68-c11b-4d4a-8538-2dd5df4b8eea" name="JsonPath Existence Match 29"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['createTimeUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a8e6c27d-7985-44ce-a181-515264c4ec31" name="JsonPath Existence Match 30"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['createdBy']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6687d5b6-9d03-4111-bb25-76041f1cae2a" name="JsonPath Existence Match 31"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['index']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6355703d-3213-4ffa-a439-41cc5711f97c" name="JsonPath Existence Match 32"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="38b6e353-dc7c-4fd2-8979-9fb155dfacbb" name="JsonPath Existence Match 33"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['mounted']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="946460b8-d9ac-4cdc-b98d-2729d1287cf9" name="JsonPath Match 6"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['type']</path><content>performanceStoragePartition</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b096ae4f-36c4-4873-acb8-3e67a2cc8bb8" name="JsonPath Existence Match 34"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['metric']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c6099493-c6e6-4f22-a85b-0dbd25e8630c" name="JsonPath Existence Match 35"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['metric']['idleTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d275ba37-4f29-4aa8-a1c3-fe99cf9cad48" name="JsonPath Existence Match 36"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['metric']['writeCompleted']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5a152543-4536-4862-b9b2-aaf1678b2c2e" name="JsonPath Existence Match 37"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['metric']['writeTimeMs']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0caede2d-4ba6-473e-a775-cd61dfbc1c8e" name="JsonPath Existence Match 38"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['metric']['avgDiskWriteQueueLength']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="d80d2d7b-464d-40ee-9910-d058efb516b4" name="JsonPath Existence Match 39"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['metric']['avgDiskSecPerWrite']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="15413a3a-dcbc-4503-bb5b-54985cb37dfd" name="JsonPath Existence Match 40"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['metric']['readCompleted']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4d5ef508-807e-4a1c-ad47-7170a791915b" name="JsonPath Existence Match 41"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['metric']['readTimeMs']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="50329dbf-4349-49fb-b424-942a6f008845" name="JsonPath Existence Match 42"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['metric']['avgDiskSecPerRead']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f8cbbfb8-3a9c-48f8-8db5-d7a9088f32f0" name="JsonPath Existence Match 43"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['metric']['freeSpaceBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="aaa95907-3a2e-4acb-9b92-4d19ac6415c9" name="JsonPath Existence Match 44"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['metric']['usedSpaceBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8c739bae-1012-49ea-8684-5ae5657d37a5" name="JsonPath Existence Match 45"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['metric']['totalSpaceBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="377e4c17-22b3-4a07-a08e-95e048dc2586" name="JsonPath Existence Match 46"><con:configuration><path>$[0]['storages'][0]['partitions'][0]['metric']['diskTimeTotal']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Step2-Perf_Storage_response_Validation" id="c67ba92b-3afe-4192-bd30-cfb767d35638"><con:settings/><con:config><script>import groovy.json.JsonSlurper 
def response = context.expand('${Step1-Get_Request_Perf_Storage#Response}').toString()
def assertionList = []
if(!(response.size() > 0)) {assertionList.add("Storage JSON response is empty!")}
if(response != "")
{
def slurper = new JsonSlurper()
def jsonResponse = slurper.parseText response
log.info("Verifying storage fields in JSON response")
for (int g=0; g&lt;1;g++ )
{	
def tstamp = "0001-01-01T00:00:00Z"
if(!(jsonResponse[g].createTimeUTC != null)) {assertionList.add("createTimeUTC property in JSON response is null")}
if(!(jsonResponse[g].createTimeUTC != "")) {assertionList.add("createTimeUTC field is empty")}
if(!(jsonResponse[g].createTimeUTC != tstamp)) {assertionList.add("createTimeUTC value can't be defaulted")}

if(!(jsonResponse[g].name != null)) {assertionList.add("name property in JSON response is null")}
if(!(jsonResponse[g].name != "")) {assertionList.add("name field is empty")}

if(!(jsonResponse[g].type != null)) {assertionList.add("name property in JSON response is null")}
if(!(jsonResponse[g].type != "")) {assertionList.add("name field is empty")}

if(!(jsonResponse[g].endpointID != null)) {assertionList.add("endpointID property in JSON response is null")}
if(!(jsonResponse[g].endpointID != "")) {assertionList.add("endpointID field is empty")}

if(!(jsonResponse[g].partnerID != null)) {assertionList.add("partnerID property in JSON response is null")}
if(!(jsonResponse[g].partnerID != "")) {assertionList.add("partnerID field is empty")}

if(!(jsonResponse[g].clientID != null)) {assertionList.add("clientID property in JSON response is null")}
if(!(jsonResponse[g].clientID != "")) {assertionList.add("clientID field is empty")}

if(!(jsonResponse[g].siteID != null)) {assertionList.add("siteID property in JSON response is null")}
if(!(jsonResponse[g].siteID != "")) {assertionList.add("siteID field is empty")}

if(!(jsonResponse[g].storages != null)) {assertionList.add("storages JSON array is null")}

def storagesArray = jsonResponse[g].storages
if(!( storagesArray.size > 0)) { assertionList.add("storagesArray is empty") }

for (int i = 0; i &lt; storagesArray.size(); i++) {
if(!(jsonResponse[g].storages[i].metric.totalSpaceBytes >0)) {assertionList.add("storages totalSpaceBytes value is zero")}
def storagesPartitionArray = jsonResponse[g].storages[i].partitions
if(!( storagesPartitionArray.size > 0)) { assertionList.add("storagesPartitionArray is empty") }
for (int sp = 0; sp &lt; storagesArray.size(); sp++) {

if(!(jsonResponse[g].storages[i].partitions[sp].metric.totalSpaceBytes >0)) {assertionList.add("storages partition totalSpaceBytes value is zero")}
if(!(jsonResponse[g].storages[i].partitions[sp].metric.usedSpaceBytes >0)) {assertionList.add("storages partition usedSpaceBytes value is zero")}
if(!(jsonResponse[g].storages[i].partitions[sp].metric.freeSpaceBytes >0)) {assertionList.add("storages partition freeSpaceBytes value is zero")}

}
}

}
assert assertionList.isEmpty() : assertionList.toString()
log.info("Verified storage fields in JSON response")
}</script></con:config></con:testStep><con:testStep type="restrequest" name="Step3-GET_Storage_byCount" id="77c2bc30-189f-488a-a503-74f5a4da9e28"><con:settings/><con:config service="REST Service 20" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/storage" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step3-GET_Storage_byCount" id="b3e5eb4b-b0b4-4819-8479-2c18f6cf8351" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/storage</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="6e3f484a-3eea-4d25-9bdb-743bb06a0092" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="ba1efb45-068c-479a-92dd-f2b6d9d33622" name="JsonPath Count"><con:configuration><path>$[0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="e529a6f9-709f-48cb-95b3-d208807d0608" name="JsonPath Count 2"><con:configuration><path>$[1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="066d4512-7774-4e04-a403-b0e6a53b0665" name="JsonPath Count 3"><con:configuration><path>$[2]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step4-GET_Storage_BadRequest" id="89395f6e-1db9-4b0d-8727-946f02181b0b"><con:settings/><con:config service="REST Service 21" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/storage" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step4-GET_Storage_BadRequest" id="2068febb-1075-45c2-b8c7-dd00c212c901" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/storage</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="f356054e-e5d8-42d9-ba84-d1e16d2b2f48" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="count" value="abcd@12"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>b090e057-eb6e-4fad-a978-242f768eb8af</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="c6862061-9a37-4019-9131-9d6d9440e478" name="Performance Network API Validation"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="383dad80-adf6-4cc7-b3c8-5de19944fa9a" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C893201-Validate response format based on PartnerID and EndpointID" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="delay" name="Delay" id="05a50dd9-58b9-4f90-9154-a136f79145c8"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step1-Get_Request_Perf_Network" id="02ef5620-e36b-4299-b65f-34705b5cf250"><con:settings/><con:config service="REST Service 15" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/network" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1-Get_Request_Perf_Network" id="b400ca27-8aed-4570-bb6e-e8611fc1284a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/network</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="6bff3c20-eda0-4e3e-9862-eda00cc29e9f" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f75b06f2-279b-43fd-8a1e-30577cee973d" name="JsonPath Existence Match"><con:configuration><path>$[0]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="e7ab979f-ac37-440c-86c1-650f3de5c086" name="JsonPath Count"><con:configuration><path>$[0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="42cf04bb-a785-4eef-9939-b1b08edb2228" name="JsonPath Count 2"><con:configuration><path>$[1]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="aefdb17c-8318-4c62-978a-c236383d364b" name="JsonPath Existence Match 2"><con:configuration><path>$[0]['createTimeUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6b5e6543-b663-46e7-a7e7-73bc06a3e2f4" name="JsonPath Existence Match 3"><con:configuration><path>$[0]['createdBy']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6b10ae45-170d-4727-9acf-cee6492a30eb" name="JsonPath Existence Match 4"><con:configuration><path>$[0]['index']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="bd669394-0487-444f-a8f0-c53dc0124a14" name="JsonPath Match"><con:configuration><path>$[0]['name']</path><content>network</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ac4b2385-10eb-437c-8461-62b6a77e72d3" name="JsonPath Match 2"><con:configuration><path>$[0]['type']</path><content>performanceNetwork</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e5c4b697-7646-4248-9cdc-2823610a907b" name="JsonPath Match 3"><con:configuration><path>$[0]['endpointID']</path><content>${Step1-Get_Request_Perf_Network#endpointId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ccb35a0a-e59e-4fb6-98ba-3b664eedb5fc" name="JsonPath Match 4"><con:configuration><path>$[0]['partnerID']</path><content>${Step1-Get_Request_Perf_Network#partnerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="369313dc-73d2-4733-bb98-85a3fde09e76" name="JsonPath Existence Match 5"><con:configuration><path>$[0]['clientID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="18bc1a03-8255-4eca-8c9c-0f4ca343fe91" name="JsonPath Existence Match 6"><con:configuration><path>$[0]['siteID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b1b9c7e5-9980-473f-bd9c-18fdcc4a83cb" name="JsonPath Existence Match 7"><con:configuration><path>$[0]['interface']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="edbf65d0-2d70-46ce-96c4-a68d6971c969" name="JsonPath Existence Match 8"><con:configuration><path>$[0]['interface'][0]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="166a1774-3575-4ede-b25f-084b6c94aba7" name="JsonPath Count 3"><con:configuration><path>$[0]['interface'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1029b686-c434-4de3-bffe-f707c1519b53" name="JsonPath Existence Match 9"><con:configuration><path>$[0]['interface'][0]['createTimeUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f67c830b-0f0b-4dba-956e-e443feab49bc" name="JsonPath Existence Match 10"><con:configuration><path>$[0]['interface'][0]['createdBy']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="136909e0-9292-4aad-8a85-224963a7a50e" name="JsonPath Existence Match 11"><con:configuration><path>$[0]['interface'][0]['index']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="43a765a9-6c77-46ce-9b96-3e0d3e58d35c" name="JsonPath Existence Match 12"><con:configuration><path>$[0]['interface'][0]['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="3c289c62-206f-427a-ae96-53fd56f4d92b" name="JsonPath Match 5"><con:configuration><path>$[0]['interface'][0]['type']</path><content>performanceNetworkInterface</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c2c67bcd-44aa-456c-b7c5-bc5e4042719f" name="JsonPath Existence Match 13"><con:configuration><path>$[0]['interface'][0]['receivedBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4fcddb77-b960-4e25-a31b-ca939777e769" name="JsonPath Existence Match 14"><con:configuration><path>$[0]['interface'][0]['transmittedBytes']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5cfa1d75-167d-47b0-b9f8-fc843978e5e5" name="JsonPath Existence Match 15"><con:configuration><path>$[0]['interface'][0]['txQueueLength']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0b9fab3d-01be-4e31-b487-6aa6a53e948c" name="JsonPath Existence Match 16"><con:configuration><path>$[0]['interface'][1]['rxQueueLength']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9a455c67-a58c-486f-9025-356fcfaad39c" name="JsonPath Existence Match 17"><con:configuration><path>$[0]['interface'][0]['receivedBytesPerSec']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2aeee5ab-017b-4867-a7bc-f34167cd0d51" name="JsonPath Existence Match 18"><con:configuration><path>$[0]['interface'][0]['transmittedBytesPerSec']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="82bf2296-cba1-422d-b528-61d509b028a8" name="JsonPath Existence Match 19"><con:configuration><path>$[0]['interface'][0]['totalBytesPerSec']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Step2-Perf_Network_response_Validation" id="06dc7eea-c3f8-48f8-9cd3-e5dc3d0cd8d5"><con:settings/><con:config><script>import groovy.json.JsonSlurper 
def response = context.expand('${Step1-Get_Request_Perf_Network#Response}').toString()
def assertionList = []
if(!(response.size() > 0)) {assertionList.add("Network JSON response is empty!")}
if(response != "")
{
def slurper = new JsonSlurper()
def jsonResponse = slurper.parseText response
log.info("Verifying Network fields in JSON response")
for (int g=0; g&lt;1;g++ )
{	
def tstamp = "0001-01-01T00:00:00Z"
if(!(jsonResponse[g].createTimeUTC != null)) {assertionList.add("createTimeUTC property in JSON response is null")}
if(!(jsonResponse[g].createTimeUTC != "")) {assertionList.add("createTimeUTC field is empty")}
if(!(jsonResponse[g].createTimeUTC != tstamp)) {assertionList.add("createTimeUTC value can't be defaulted")}

if(!(jsonResponse[g].name != null)) {assertionList.add("name property in JSON response is null")}
if(!(jsonResponse[g].name != "")) {assertionList.add("name field is empty")}

if(!(jsonResponse[g].type != null)) {assertionList.add("name property in JSON response is null")}
if(!(jsonResponse[g].type != "")) {assertionList.add("name field is empty")}

if(!(jsonResponse[g].endpointID != null)) {assertionList.add("endpointID property in JSON response is null")}
if(!(jsonResponse[g].endpointID != "")) {assertionList.add("endpointID field is empty")}

if(!(jsonResponse[g].partnerID != null)) {assertionList.add("partnerID property in JSON response is null")}
if(!(jsonResponse[g].partnerID != "")) {assertionList.add("partnerID field is empty")}

if(!(jsonResponse[g].clientID != null)) {assertionList.add("clientID property in JSON response is null")}
if(!(jsonResponse[g].clientID != "")) {assertionList.add("clientID field is empty")}

if(!(jsonResponse[g].siteID != null)) {assertionList.add("siteID property in JSON response is null")}
if(!(jsonResponse[g].siteID != "")) {assertionList.add("siteID field is empty")}

def networkArray = jsonResponse[g].interface
if(!( networkArray.size > 0)) { assertionList.add("networkInterfaceArray is empty") }

}
assert assertionList.isEmpty() : assertionList.toString()
log.info("Verified network fields in JSON response")
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="Step3-GET_Network_byCount" id="93471c72-7f76-4d05-b769-cbcf17cb772d"><con:settings/><con:config service="REST Service 22" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/network" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step3-GET_Network_byCount" id="b25284ce-ac9c-43bc-9672-f2aadea10187" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/network</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ead758b3-31af-4091-9e4b-9627cd7886d0" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="1bae083d-ed37-4111-8393-8cab25050a15" name="JsonPath Count"><con:configuration><path>$[0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c76ada1b-7ed3-43a0-a9c4-d7470b0ee2c5" name="JsonPath Count 2"><con:configuration><path>$[1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="e346887e-b4bf-4b54-b7d1-5029e9b6a460" name="JsonPath Count 3"><con:configuration><path>$[2]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step4-GET_Network_BadRequest" id="cf4fde92-cdd6-4968-848d-a8437eef781a"><con:settings/><con:config service="REST Service 23" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/network" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step4-GET_Network_BadRequest" id="494887f8-8f32-45f1-a947-6374f25acc9c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/network</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="0656f3f5-0dff-4865-a917-e40f1d9f2f46" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="count" value="23eds@"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>05a50dd9-58b9-4f90-9154-a136f79145c8</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="50ff12a0-ee02-4f3d-b089-9036756f9587" name="Performance Processor API Validation"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="aa7efcde-9461-448a-8689-3771b53e5d60" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C816729-Validate response format based on PartnerID and EndpointID" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="delay" name="Delay" id="306a1365-28b6-4fd4-a8e3-4dd0e16a494c"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step1-Get_Request_Perf_Processor" id="d363a4e3-af5b-42f6-91fe-590a647e8c42"><con:settings/><con:config service="REST Service 12" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/processors" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1-Get_Request_Perf_Processor" id="505d40e8-3c9d-42ec-ad5c-dc34f4b57684" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-Continuum-Perf-Service-ELB-Int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50001743/endpoint/a633a737-180c-4338-a120-04f9d875ed84/processor</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e433242a-60af-4bee-9313-d70ab355a626" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="22873fa9-8b21-443d-bbe4-6de278071cc2" name="JsonPath Existence Match"><con:configuration><path>$[0]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="fe57ceea-1c9f-4284-8de5-552ad98181e9" name="JsonPath Count"><con:configuration><path>$[0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="d3e4095c-9c82-47c8-9f1f-b58e99585721" name="JsonPath Count 2"><con:configuration><path>$[1]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ca93ae88-88aa-4d7b-87b8-9c00bcf03a47" name="JsonPath Existence Match 2"><con:configuration><path>$[0]['createTimeUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e307782b-b62c-407f-816c-48d035aebbc5" name="JsonPath Existence Match 3"><con:configuration><path>$[0]['createdBy']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2cb0adb5-79ee-4c0d-983d-583a9811a0c6" name="JsonPath Existence Match 4"><con:configuration><path>$[0]['index']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fdf46000-dc6f-4087-83b8-d72657853959" name="JsonPath Match"><con:configuration><path>$[0]['name']</path><content>processor</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="fb67c5a6-4aaa-40d7-a3ab-080b343136dc" name="JsonPath Match 2"><con:configuration><path>$[0]['type']</path><content>performanceProcessors</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="6644e392-7bcc-481f-a3ec-01da37d48bf4" name="JsonPath Match 3"><con:configuration><path>$[0]['endpointID']</path><content>${Step1-Get_Request_Perf_Processor#endpointId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="af407120-a789-42cc-b5c6-d4cb2e90185a" name="JsonPath Match 4"><con:configuration><path>$[0]['partnerID']</path><content>${Step1-Get_Request_Perf_Processor#partnerId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="da0c3d2c-ec74-414d-af2e-350506821a7b" name="JsonPath Existence Match 5"><con:configuration><path>$[0]['clientID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="76331c47-dd18-4390-aca6-616b2bc8f19c" name="JsonPath Existence Match 6"><con:configuration><path>$[0]['siteID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c74cd0f6-9ed9-475f-b772-7d85ee5e162b" name="JsonPath Existence Match 7"><con:configuration><path>$[0]['metric']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="5b157f36-f3f6-4b3a-8a5b-035a182f1fdf" name="JsonPath Existence Match 8"><con:configuration><path>$[0]['metric']['numOfProcesses']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7e7536e0-fa86-45cf-8eb6-34d9023f1269" name="JsonPath Existence Match 9"><con:configuration><path>$[0]['metric']['percentIOTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="686e4602-157f-46c7-a16d-2d5d0b76c5c2" name="JsonPath Existence Match 10"><con:configuration><path>$[0]['metric']['percentIdleTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3e2c1358-c83b-48fb-91cd-823fed347d7d" name="JsonPath Existence Match 11"><con:configuration><path>$[0]['metric']['percentInterruptTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="af5c0dc4-4cea-4d8c-9a19-f17866af9283" name="JsonPath Existence Match 12"><con:configuration><path>$[0]['metric']['percentSystemTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="fd5337c3-e3df-4af5-bbb8-55ebdd39a298" name="JsonPath Existence Match 13"><con:configuration><path>$[0]['metric']['percentUserTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3a069036-c894-4463-9f5c-97917e146b29" name="JsonPath Existence Match 14"><con:configuration><path>$[0]['metric']['percentUtil']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="93c1ba0c-d63d-4db7-a86b-c4ad8e4fdc96" name="JsonPath Existence Match 15"><con:configuration><path>$[0]['metric']['interruptsPerSec']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="611f339b-5542-4e3e-956f-a543796496c7" name="JsonPath Existence Match 16"><con:configuration><path>$[0]['cpus']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="3205abb7-da89-4556-9114-3a454bf2f4c7" name="JsonPath Existence Match 17"><con:configuration><path>$[0]['cpus'][0]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="0141b72e-7df1-46e1-b9e1-5d692e4752cd" name="JsonPath Count 3"><con:configuration><path>$[0]['cpus'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4f016739-74d0-47db-b7d7-94416d88b616" name="JsonPath Existence Match 18"><con:configuration><path>$[0]['cpus'][0]['cores']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="56e759fe-4359-4439-b96f-9b075d2eadf1" name="JsonPath Count 4"><con:configuration><path>$[0]['cpus'][0]['cores'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a2305530-6dfe-4d46-9824-eecbc2d77669" name="JsonPath Existence Match 19"><con:configuration><path>$[0]['cpus'][0]['cores'][0]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0f50518e-beb5-4732-b619-930865f5734d" name="JsonPath Existence Match 20"><con:configuration><path>$[0]['cpus'][0]['cores']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="496e86a5-9221-4684-be2b-5e13e6d0ec37" name="JsonPath Existence Match 21"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['createTimeUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c1043b3e-b4ca-43ec-b9fa-2662193fd4dd" name="JsonPath Existence Match 22"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['index']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="19b446b4-5fd5-4679-9878-a8c22797db4c" name="JsonPath Existence Match 23"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['createdBy']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2f98b2df-b79f-4cdc-956e-48f56c507bf2" name="JsonPath Existence Match 24"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="834fa61b-34e7-48db-8c96-02e835fc471e" name="JsonPath Existence Match 25"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['metric']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="f6bb8add-6eb9-4774-a1de-6ec10873ebac" name="JsonPath Existence Match 26"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['metric']['numOfProcesses']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1327ccc5-e794-4386-a392-8b7263541fdf" name="JsonPath Existence Match 27"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['metric']['percentIOTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6472e698-6227-47c1-bb45-f09d1ca04839" name="JsonPath Existence Match 28"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['metric']['percentIdleTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2ba36f77-8eb4-47a1-9d8b-916d1fdfe7a4" name="JsonPath Existence Match 29"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['metric']['percentInterruptTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="353c6049-6ea2-47f3-9a44-bab5deba2e2c" name="JsonPath Existence Match 30"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['metric']['percentSystemTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2bcc750f-f839-493c-a865-6af472c3190e" name="JsonPath Existence Match 31"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['metric']['percentUserTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="42469012-b491-4667-9c06-f646ef81e7cb" name="JsonPath Existence Match 32"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['metric']['percentUtil']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="c3692180-a296-44f1-8967-4f759d5484fa" name="JsonPath Existence Match 33"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['metric']['interruptsPerSec']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8ddf8a0e-f197-4e47-a00b-2b27d0de9be7" name="JsonPath Existence Match 34"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['type']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="30e90f4b-ad6b-4207-8c71-ab68e1a218af" name="JsonPath Match 5"><con:configuration><path>$[0]['cpus'][0]['cores'][0]['type']</path><content>performanceProcessorCore</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="aac0a9df-d2b5-46a3-9fb5-d3392f282fbf" name="JsonPath Existence Match 35"><con:configuration><path>$[0]['cpus'][0]['createTimeUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ca33ce43-b7dd-4061-8d13-fb4293db4164" name="JsonPath Existence Match 36"><con:configuration><path>$[0]['cpus'][0]['createdBy']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f5e3ec20-6c6e-4e1c-a752-7aa7b638c12c" name="JsonPath Match 6"><con:configuration><path>$[0]['cpus'][0]['index']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="4f26fdb1-d29a-43a3-b9af-cec07345e39b" name="JsonPath Match 7"><con:configuration><path>$[0]['cpus'][0]['name']</path><content>cpu0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="420bc86e-f034-41bd-9e23-a52d37712ad0" name="JsonPath Existence Match 37"><con:configuration><path>$[0]['cpus'][0]['numOfCores']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2ac0dca3-e561-434c-8bc5-80404c462a9f" name="JsonPath Existence Match 38"><con:configuration><path>$[0]['cpus'][0]['processorQueueLength']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="a892d473-0c7c-4e29-af31-11544fc00ff6" name="JsonPath Match 8"><con:configuration><path>$[0]['cpus'][0]['type']</path><content>performanceProcessor</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b7d5869d-66ac-4e36-954c-f0caf5573935" name="JsonPath Existence Match 39"><con:configuration><path>$[0]['cpus'][0]['metric']['numOfProcesses']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="e52514d5-9aa7-4b90-8b54-431379544319" name="JsonPath Existence Match 40"><con:configuration><path>$[0]['cpus'][0]['metric']['percentIOTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="9786ecb5-1dc1-4c1b-a794-38d590e71ab8" name="JsonPath Existence Match 41"><con:configuration><path>$[0]['cpus'][0]['metric']['percentIdleTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ef40751a-22d5-4437-8396-3ab30e4a5f96" name="JsonPath Existence Match 42"><con:configuration><path>$[0]['cpus'][0]['metric']['percentInterruptTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1bc1406c-2237-45e8-bd71-4196fabbe33a" name="JsonPath Existence Match 43"><con:configuration><path>$[0]['cpus'][0]['metric']['percentSystemTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="a555c501-fe76-42e7-8ad8-ca39fb3618f1" name="JsonPath Existence Match 44"><con:configuration><path>$[0]['cpus'][0]['metric']['percentUserTime']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="ec1c3dd1-5f0f-4b62-99db-951985246572" name="JsonPath Existence Match 45"><con:configuration><path>$[0]['cpus'][0]['metric']['percentUtil']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="09b48a5b-d75d-433a-a6c7-36c3281b393f" name="JsonPath Existence Match 46"><con:configuration><path>$[0]['cpus'][0]['metric']['interruptsPerSec']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Step2-Perf_Processor_response_Validation" id="7d75e01d-2b91-419b-b56a-b19de19f4a21"><con:settings/><con:config><script>import groovy.json.JsonSlurper 
def response = context.expand('${Step1-Get_Request_Perf_Processor#Response}').toString()
def assertionList = []
if(!(response.size() > 0)) {assertionList.add("Processor JSON response is empty!")}
if(response != "")
{
def slurper = new JsonSlurper()
def jsonResponse = slurper.parseText response
log.info("Verifying processor fields in JSON response")
for (int g=0; g&lt;1;g++ )
{	
def tstamp = "0001-01-01T00:00:00Z"
if(!(jsonResponse[g].createTimeUTC != null)) {assertionList.add("createTimeUTC property in JSON response is null")}
if(!(jsonResponse[g].createTimeUTC != "")) {assertionList.add("createTimeUTC field is empty")}
if(!(jsonResponse[g].createTimeUTC != tstamp)) {assertionList.add("createTimeUTC value can't be defaulted")}

if(!(jsonResponse[g].name != null)) {assertionList.add("name property in JSON response is null")}
if(!(jsonResponse[g].name != "")) {assertionList.add("name field is empty")}

if(!(jsonResponse[g].type != null)) {assertionList.add("name property in JSON response is null")}
if(!(jsonResponse[g].type != "")) {assertionList.add("name field is empty")}

if(!(jsonResponse[g].endpointID != null)) {assertionList.add("endpointID property in JSON response is null")}
if(!(jsonResponse[g].endpointID != "")) {assertionList.add("endpointID field is empty")}

if(!(jsonResponse[g].partnerID != null)) {assertionList.add("partnerID property in JSON response is null")}
if(!(jsonResponse[g].partnerID != "")) {assertionList.add("partnerID field is empty")}

if(!(jsonResponse[g].clientID != null)) {assertionList.add("clientID property in JSON response is null")}
if(!(jsonResponse[g].clientID != "")) {assertionList.add("clientID field is empty")}

if(!(jsonResponse[g].siteID != null)) {assertionList.add("siteID property in JSON response is null")}
if(!(jsonResponse[g].siteID != "")) {assertionList.add("siteID field is empty")}

if(!(jsonResponse[g].metric.percentIdleTime >0 )) {assertionList.add("percentIdleTime value is zero")}
//if(!(jsonResponse[g].metric.percentSystemTime >0 )) {assertionList.add("percentSystemTime value is zero")}
//if(!(jsonResponse[g].metric.percentUserTime >0 )) {assertionList.add("percentUserTime value is zero")}
//if(!(jsonResponse[g].metric.percentUtil >0 )) {assertionList.add("percentUtil value is zero")}
if(!(jsonResponse[g].metric.interruptsPerSec >0 )) {assertionList.add("interruptsPerSec value is zero")}

def cpusArray = jsonResponse[g].cpus
if(!( cpusArray.size > 0)) { assertionList.add("cpus array is empty") }

for (int i = 0; i &lt; cpusArray.size(); i++) {

def cpucoreArray = jsonResponse[g].cpus[i].cores
if(!( cpucoreArray.size > 0)) { assertionList.add("cpucoreArray is empty") }

//if(!(jsonResponse[g].cpus[i].metric.percentUserTime >0 )) {assertionList.add("percentUserTime value is zero")}
//if(!(jsonResponse[g].cpus[i].metric.percentUtil >0 )) {assertionList.add("percentUtil value is zero")}
if(!(jsonResponse[g].cpus[i].metric.interruptsPerSec >0 )) {assertionList.add("interruptsPerSec value is zero")}

for (int j = 0; j &lt; cpucoreArray.size(); j++) {


//if(!(jsonResponse[g].cpus[i].cores[j].metric.percentUserTime >0 )) {assertionList.add("percentUserTime value is zero")}
//if(!(jsonResponse[g].cpus[i].cores[j].metric.percentUtil >0 )) {assertionList.add("percentUtil value is zero")}
if(!(jsonResponse[g].cpus[i].cores[j].metric.interruptsPerSec >0 )) {assertionList.add("interruptsPerSec value is zero")}

}
}
}
assert assertionList.isEmpty() : assertionList.toString()
log.info("Verified Processor fields in JSON response")
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="Step3-GET_Processor_byCount" id="a24528e8-700f-4e7f-8580-7df0a55ba1a2"><con:settings/><con:config service="REST Service 24" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/processors" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step3-GET_Processor_byCount" id="8bee7323-c429-4566-b3cb-50924a41674b" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/processors</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="92a6956a-b3b6-4379-9434-2dab56667212" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="21d8107f-13d2-4de5-9b7f-c7efa3cff0d1" name="JsonPath Count"><con:configuration><path>$[0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="e922a11f-8d62-4fde-b0e6-d977d4c67ee3" name="JsonPath Count 2"><con:configuration><path>$[1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="62acd3a5-0345-463d-b0ac-95d268770cae" name="JsonPath Count 3"><con:configuration><path>$[2]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step4-GET_Processor_BadRequest" id="f98cbaaf-ea2f-43ba-acd1-d153465dbd19"><con:settings/><con:config service="REST Service 25" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/processors" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step4-GET_Processor_BadRequest" id="99d7c4e9-3143-45f1-9ac9-430cd0c2ed62" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/processors</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="57e4b313-1b05-43f1-ab52-a184964d3198" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>400</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>306a1365-28b6-4fd4-a8e3-4dd0e16a494c</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="a5206c98-0f05-4fdc-a84e-6ec0cecc4a1f" name="ProcessorsSpecificPerformance"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="4dbaf470-0337-48e8-8fc9-dfba53688b9e" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C1712141-Validate Response Code of REST Endpoint for Performance Processor of a particular processor" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="delay" name="Delay" id="8db3da56-34cc-458e-a15e-0fb66bb69c78"><con:settings/><con:config><delay>10000</delay></con:config></con:testStep><con:testStep type="restrequest" name="Step1-GET Request" id="c1959bcb-1b9d-4f1d-9051-45b3ec974e09"><con:settings/><con:config service="REST Service 26" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/processors/0" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1-GET Request" id="d7980ece-5baf-43d0-8586-5e3d94e01e87" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/processors/0</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="26093622-797c-4fe4-a90e-4d69d20eb027" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="f5140f1d-3bd0-43e2-9dbe-0faf064292cb" name="JsonPath Match"><con:configuration><path>$[0]['cpus'][0]['index']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ea692012-abbd-4001-ab1d-3a37b4421daf" name="JsonPath Match 2"><con:configuration><path>$[0]['cpus'][0]['name']</path><content>cpu0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="e03e09f6-ffbf-480b-b89f-aed3a15eb1a1" name="JsonPath Count"><con:configuration><path>$[0]['cpus'][1]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Step2-GET Request_byCount" id="f92f5b03-6860-4902-a570-c1e06fa83cdc"><con:settings/><con:config service="REST Service 27" resourcePath="/performance/v1/partner/{partnerId}/endpoint/{endpointId}/processors/0" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step2-GET Request_byCount" id="3dcd21fe-2034-4a5f-ad6d-78fe73099e03" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-perf-service-elb-int-603463992.ap-south-1.elb.amazonaws.com/performance/v1/partner/50016364/endpoint/156a254a-f1cb-43bc-9f7d-7b562cadc2d9/processors/0</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="0356fc5d-d323-4389-881a-0b42a4d6c7d1" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="f286e605-225b-4f59-b943-10abba837b29" name="JsonPath Count"><con:configuration><path>$[0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="b4ff5a90-c860-4ce6-8108-683c8ae2d2a9" name="JsonPath Count 2"><con:configuration><path>$[1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="730daa0d-4727-437a-af9e-742ceaf27542" name="JsonPath Count 3"><con:configuration><path>$[0]['cpus'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="2b9ccc9c-5378-4aef-b374-0fde5db9fb3b" name="JsonPath Count 4"><con:configuration><path>$[0]['cpus'][1]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="9da1924d-592a-4920-a765-4bee60ecd5f0" name="JsonPath Count 5"><con:configuration><path>$[1]['cpus'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="84feb94c-97f0-485e-871d-214344e2e204" name="JsonPath Count 6"><con:configuration><path>$[1]['cpus'][1]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="c7bc0af0-54f5-47c7-94a2-bbc8cb280c25" name="JsonPath Count 7"><con:configuration><path>$[2]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="e5b8348d-327c-45cc-9dba-5f71ac92b1c6" name="JsonPath Match"><con:configuration><path>$[1]['cpus'][0]['index']</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="ff5244ff-2213-4cbd-8052-f6973683f1e5" name="JsonPath Match 2"><con:configuration><path>$[0]['cpus'][0]['name']</path><content>cpu0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="endpointId" value="${#Project#End_PointID}"/>
  <con:entry key="partnerId" value="${#Project#partnerId}"/>
</con:parameters><con:parameterOrder><con:entry>count</con:entry><con:entry>partnerId</con:entry><con:entry>endpointId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/><con:breakPoints><con:testStepId>8db3da56-34cc-458e-a15e-0fb66bb69c78</con:testStepId><con:status>NONE</con:status><con:properties/></con:breakPoints></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="368884b1-8ad8-42b4-9e3d-36619c3ebdf3" name="SystemState HealthCheck API Validation"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="59b45555-f849-4e8e-a6ea-6018dbec5b64" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C2311595-Validate REST endpoint for Health Check API" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Step1_GET_Request" id="af611bd4-5bd8-4ee2-a030-761e6f28e916"><con:settings/><con:config service="REST Service 28" resourcePath="/systemstate/health" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1_GET_Request" id="0bfc8e72-d5b6-413a-9c98-f286c068ad4c" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck</con:originalUri><con:assertion type="JsonPath Existence Match" id="f6cb4b5c-4e31-4953-866d-50c1db252b8c" name="JsonPath Existence Match"><con:configuration><path>$['timeStampUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="01056568-6b98-4148-ade9-1a13c9589f32" name="JsonPath Existence Match 2"><con:configuration><path>$['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="11ae6f5f-ddf5-453e-aa3e-9240570daac6" name="JsonPath Existence Match 3"><con:configuration><path>$['type']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6a2c79fb-39c8-49ee-8ad6-8dd06e824fd4" name="JsonPath Existence Match 4"><con:configuration><path>$['serviceName']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1b0ec0b3-7f3a-4836-a26c-980ef4e32742" name="JsonPath Existence Match 5"><con:configuration><path>$['serviceProvider']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="278c546f-e4ff-4344-9c85-e278cad7f78d" name="JsonPath Existence Match 6"><con:configuration><path>$['serviceVersion']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="de2f6bc9-8e5c-42af-ad54-df60cdc11c5a" name="JsonPath Existence Match 8"><con:configuration><path>$['networkInterfaces']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4231ae59-effb-4a0f-8d65-932cd48d4d7a" name="JsonPath Existence Match 9"><con:configuration><path>$['status']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="0cb5b03d-ff05-4e97-b78e-765b8dab3c25" name="JsonPath Count"><con:configuration><path>$['networkInterfaces'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="86a8d58c-7052-42b5-971c-8bbbd246049a" name="JsonPath Count 2"><con:configuration><path>$['networkInterfaces'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="6fa2c7bd-32cd-469a-9256-bff542e13a68" name="JsonPath Count 3"><con:configuration><path>$['networkInterfaces'][1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="d240bcef-d77b-4c91-a930-babe50bc9edc" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="82aafed2-7675-4658-af97-485cfff4bd82" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:type[1]</con:xpath><con:element>type</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>health</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:status[1]</con:xpath><con:element>status</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Running</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:serviceVersion[1]</con:xpath><con:element>serviceVersion</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>v1.0</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:serviceProvider[1]</con:xpath><con:element>serviceProvider</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Continuum LLC</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:serviceName[1]</con:xpath><con:element>serviceName</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Systemstate Micro-Service</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:type[1]</con:xpath><con:element>type</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>OutboundConnectionStatus</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:name[1]</con:xpath><con:element>name</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Systemstate Micro-Service-OutboundConnectionStatus</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:connectionURLs[1]/ns1:e[1]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.48.173:9092</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:connectionURLs[1]/ns1:e[2]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.48.78:9092</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:connectionURLs[1]/ns1:e[3]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.49.107:9092</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:connectionURLs[1]/ns1:e[4]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.49.135:9092</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:connectionType[1]</con:xpath><con:element>connectionType</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Kafka</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[2]/ns1:connectionStatus[1]</con:xpath><con:element>connectionStatus</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Active</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:connectionURLs[1]/ns1:e[1]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.48.6:9042</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:connectionURLs[1]/ns1:e[2]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.48.60:9042</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:connectionURLs[1]/ns1:e[3]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.49.69:9042</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:connectionURLs[1]/ns1:e[4]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.49.233:9042</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:type[1]</con:xpath><con:element>type</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>OutboundConnectionStatus</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:name[1]</con:xpath><con:element>name</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Systemstate Micro-Service-OutboundConnectionStatus</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:connectionType[1]</con:xpath><con:element>connectionType</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Cassandra</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:outboundConnectionStatus[1]/ns1:e[1]/ns1:connectionStatus[1]</con:xpath><con:element>connectionStatus</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Active</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:networkInterfaces[1]/ns1:e[1]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>127.0.0.1:80</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:networkInterfaces[1]/ns1:e[2]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>172.28.49.52:80</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck';
//ns1:Response[1]/ns1:name[1]</con:xpath><con:element>name</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>SystemstateSolution</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/healthCheck">
   <lastStartTimeUTC>2017-12-15T11:39:57.802019632Z</lastStartTimeUTC>
   <name>SystemstateSolution</name>
   <networkInterfaces>
      <e>127.0.0.1:80</e>
      <e>172.28.49.52:80</e>
   </networkInterfaces>
   <outboundConnectionStatus>
      <e>
         <connectionStatus>Active</connectionStatus>
         <connectionType>Cassandra</connectionType>
         <connectionURLs>
            <e>172.28.48.6:9042</e>
            <e>172.28.48.60:9042</e>
            <e>172.28.49.69:9042</e>
            <e>172.28.49.233:9042</e>
         </connectionURLs>
         <name>Systemstate Micro-Service-OutboundConnectionStatus</name>
         <timeStampUTC>2017-12-18T08:21:29.670972426Z</timeStampUTC>
         <type>OutboundConnectionStatus</type>
      </e>
      <e>
         <connectionStatus>Active</connectionStatus>
         <connectionType>Kafka</connectionType>
         <connectionURLs>
            <e>172.28.48.173:9092</e>
            <e>172.28.48.78:9092</e>
            <e>172.28.49.107:9092</e>
            <e>172.28.49.135:9092</e>
         </connectionURLs>
         <name>Systemstate Micro-Service-OutboundConnectionStatus</name>
         <timeStampUTC>2017-12-18T08:21:29.670972426Z</timeStampUTC>
         <type>OutboundConnectionStatus</type>
      </e>
   </outboundConnectionStatus>
   <serviceName>Systemstate Micro-Service</serviceName>
   <serviceProvider>Continuum LLC</serviceProvider>
   <serviceVersion>v1.0</serviceVersion>
   <status>Running</status>
   <timeStampUTC>2017-12-18T08:21:29.670972152Z</timeStampUTC>
   <type>health</type>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="ac77ac43-a9b8-458c-aff5-d4949662612c" name="SystemState Versioning API Validation"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="1a9e178d-c493-4d19-808b-7a3a398bd5cf" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C2311596-Version API Validation" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Step1_API response validation" id="c8665b5b-9cfa-42c5-ac6c-ab1f0b2cedf2"><con:settings/><con:config service="REST Service 29" resourcePath="/systemstate/version" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1_API response validation" id="f775a8fb-53a8-4f8c-9ff3-9b90ca2f0632" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version</con:originalUri><con:assertion type="JsonPath Existence Match" id="887d58e0-8ab6-4367-a1ed-45602acf00d5" name="JsonPath Existence Match"><con:configuration><path>$['timeStampUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0f46cdce-eb2c-411f-9f60-6b41420016e4" name="JsonPath Existence Match 2"><con:configuration><path>$['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4e53a9c6-220d-4f1d-b0de-6e77adfd285b" name="JsonPath Existence Match 3"><con:configuration><path>$['type']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="6d23ae38-ec77-49a7-827b-10666efbd76e" name="JsonPath Existence Match 4"><con:configuration><path>$['serviceName']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="44377a2b-9f50-449a-bd53-53be8e93adc7" name="JsonPath Existence Match 5"><con:configuration><path>$['serviceProvider']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="1216fc9f-1e1a-4e73-b816-9a53062b40cf" name="JsonPath Existence Match 6"><con:configuration><path>$['serviceVersion']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="08532b17-2401-48dc-afaf-06854226f372" name="JsonPath Existence Match 7"><con:configuration><path>$['buildNumber']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Valid HTTP Status Codes" id="6a9fb945-0bbc-463e-b41a-10a330d7d648" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="6a01e6e3-e030-446a-b413-b96d4cca5a33" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version';
//ns1:Response[1]/ns1:buildNumber[1]</con:xpath><con:element>buildNumber</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version';
//ns1:Response[1]/ns1:name[1]</con:xpath><con:element>name</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>SystemstateSolution</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version';
//ns1:Response[1]/ns1:serviceName[1]</con:xpath><con:element>serviceName</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Systemstate Micro-Service</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version';
//ns1:Response[1]/ns1:serviceProvider[1]</con:xpath><con:element>serviceProvider</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>Continuum LLC</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version';
//ns1:Response[1]/ns1:serviceVersion[1]</con:xpath><con:element>serviceVersion</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version';
//ns1:Response[1]/ns1:type[1]</con:xpath><con:element>type</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>version</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version';
//ns1:Response[1]/ns1:timeStampUTC[1]</con:xpath><con:element>timeStampUTC</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>0001-01-01T00:00:00Z</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version">
   <buildNumber>434cc1d48eabf8e908ee7b304080c7406388ae5b</buildNumber>
   <name>SystemstateSolution</name>
   <serviceName>Systemstate Micro-Service</serviceName>
   <serviceProvider>Continuum LLC</serviceProvider>
   <serviceVersion>1.0.0</serviceVersion>
   <timeStampUTC>2017-09-28T10:10:28Z</timeStampUTC>
   <type>Version</type>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="b4a499a4-6642-4eee-88c6-6561821bbcbf" name="Message Content Assertion 2"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version';
//ns1:Response[1]/ns1:buildCommitSHA[1]</con:xpath><con:element>buildCommitSHA</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version';
//ns1:Response[1]/ns1:repository[1]</con:xpath><con:element>repository</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>https://github.com/ContinuumLLC/platform-systemstate-service</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version';
//ns1:Response[1]/ns1:supportedAPIVersions[1]/ns1:e[1]</con:xpath><con:element>e</con:element><con:type xsi:nil="true"/><con:operator>=</con:operator><con:enabled>true</con:enabled><con:expectedValue>/v1</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version';
//ns1:Response[1]/ns1:buildNumber[1]</con:xpath><con:element>buildNumber</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/version">
   <buildCommitSHA>507f936635cd6aac67b7d294070b79de097810a6</buildCommitSHA>
   <buildNumber>507f936635cd6aac67b7d294070b79de097810a6</buildNumber>
   <name>SystemstateSolution</name>
   <repository>https://github.com/ContinuumLLC/platform-systemstate-service</repository>
   <serviceName>Systemstate Micro-Service</serviceName>
   <serviceProvider>Continuum LLC</serviceProvider>
   <serviceVersion>v1.0</serviceVersion>
   <supportedAPIVersions>
      <e>/v1</e>
   </supportedAPIVersions>
   <timeStampUTC>2017-12-18T08:04:00.126731998Z</timeStampUTC>
   <type>version</type>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="5b1a44d2-94a7-48c2-9718-3d2f94957f8f" name="SystemState GET API Validation for specific endpointId"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="a8f374f6-cf7c-4aa4-9828-a04981945d62" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C2311597-Validate GET request response" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Step1_GET_request" id="6d0a40df-c8e2-4119-9008-52b225068a78"><con:settings/><con:config service="REST Service 30" resourcePath="/systemstate/v1/partner/{partner_id}/endpoints/{endpoint_id}" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1_GET_request" id="00a4d77d-e548-4f1e-bf31-16a00885b1e1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/v1/partner/50001794/endpoints/80c6d631-2ae2-4ed1-9e9a-cd332eaa0d75</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="040fe482-9ca1-4694-8a45-d61273829d85" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0d8c1c2f-b689-4d5b-a796-452f03dea2f9" name="JsonPath Existence Match"><con:configuration><path>$['createTimeUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="0d50b49b-462a-4841-8eb2-9ac602f54826" name="JsonPath Existence Match 2"><con:configuration><path>$['createdBy']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="7d5cc167-1131-4d8b-b0db-bb77096c1cc9" name="JsonPath Existence Match 3"><con:configuration><path>$['name']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="76d41503-0c73-4672-b411-997a578601ad" name="JsonPath Existence Match 4"><con:configuration><path>$['type']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="86d93cc9-59c9-4bef-b02f-8ec1f0cf21a8" name="JsonPath Existence Match 5"><con:configuration><path>$['endpointID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="30ed07f3-f597-472a-91be-a8cd35214cb2" name="JsonPath Existence Match 6"><con:configuration><path>$['partnerID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="8e77cb4e-719e-4492-b3fa-da719c31cbd1" name="JsonPath Existence Match 7"><con:configuration><path>$['clientID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b09ee853-9117-46b8-ad3a-0e7da0c9b9ab" name="JsonPath Existence Match 8"><con:configuration><path>$['siteID']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4a0900da-d269-4d51-8fbe-fffa552384f7" name="JsonPath Existence Match 10"><con:configuration><path>$['startupStatus']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="b7af8e85-eb5b-4794-86ab-d09a0dd1a6b6" name="JsonPath Existence Match 11"><con:configuration><path>$['startupStatus']['lastBootUpTimeUTC']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="2ac3719c-f692-4b59-8031-d924bc48634e" name="JsonPath Existence Match 12"><con:configuration><path>$['loggedOnUsers']</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="99055c9f-af2a-43c1-a981-ebc509d20d9e" name="JsonPath Existence Match 13"><con:configuration><path>$['loggedOnUsers'][0]</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="dcccf5db-d05d-4c4f-9d98-f1ef70fa2c7c" name="JsonPath Count"><con:configuration><path>$['loggedOnUsers'][0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="8fb5d428-4b24-447e-9e93-9df57f4e29f9" name="JsonPath Count 2"><con:configuration><path>$['startupStatus']['lastBootUpTimeUTC']</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="MessageContentAssertion" id="54fc27e3-107f-48b6-b045-715ab343db2f" name="Message Content Assertion"><con:configuration xsi:type="con:MessageContentAssertion"><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/v1/partner/50001794/endpoints/80c6d631-2ae2-4ed1-9e9a-cd332eaa0d75';
//ns1:Response[1]/ns1:clientID[1]</con:xpath><con:element>clientID</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/v1/partner/50001794/endpoints/80c6d631-2ae2-4ed1-9e9a-cd332eaa0d75';
//ns1:Response[1]/ns1:createTimeUTC[1]</con:xpath><con:element>createTimeUTC</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>0001-01-01T00:00:00Z</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/v1/partner/50001794/endpoints/80c6d631-2ae2-4ed1-9e9a-cd332eaa0d75';
//ns1:Response[1]/ns1:endpointID[1]</con:xpath><con:element>endpointID</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/v1/partner/50001794/endpoints/80c6d631-2ae2-4ed1-9e9a-cd332eaa0d75';
//ns1:Response[1]/ns1:partnerID[1]</con:xpath><con:element>partnerID</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>0</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/v1/partner/50001794/endpoints/80c6d631-2ae2-4ed1-9e9a-cd332eaa0d75';
//ns1:Response[1]/ns1:siteID[1]</con:xpath><con:element>siteID</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>0</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/v1/partner/50001794/endpoints/80c6d631-2ae2-4ed1-9e9a-cd332eaa0d75';
//ns1:Response[1]/ns1:startupStatus[1]/ns1:lastBootUpTimeUTC[1]</con:xpath><con:element>lastBootUpTimeUTC</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue>0001-01-01T00:00:00Z</con:expectedValue><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/v1/partner/50001794/endpoints/80c6d631-2ae2-4ed1-9e9a-cd332eaa0d75';
//ns1:Response[1]/ns1:loggedOnUsers[1]/ns1:e[1]/ns1:sessionID[1]</con:xpath><con:element>sessionID</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/v1/partner/50001794/endpoints/80c6d631-2ae2-4ed1-9e9a-cd332eaa0d75';
//ns1:Response[1]/ns1:loggedOnUsers[1]/ns1:e[1]/ns1:status[1]</con:xpath><con:element>status</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:elements><con:xpath>declare namespace ns1='http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/v1/partner/50001794/endpoints/80c6d631-2ae2-4ed1-9e9a-cd332eaa0d75';
//ns1:Response[1]/ns1:loggedOnUsers[1]/ns1:e[1]/ns1:sessionName[1]</con:xpath><con:element>sessionName</con:element><con:type xsi:nil="true"/><con:operator>!=</con:operator><con:enabled>true</con:enabled><con:expectedValue/><con:hasValue>false</con:hasValue><con:numberType>false</con:numberType></con:elements><con:originalMessage><![CDATA[<Response xmlns="http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/v1/partner/50001794/endpoints/80c6d631-2ae2-4ed1-9e9a-cd332eaa0d75">
   <clientID>50109539</clientID>
   <createTimeUTC>2017-10-05T19:15:53.489Z</createTimeUTC>
   <createdBy/>
   <endpointID>80c6d631-2ae2-4ed1-9e9a-cd332eaa0d75</endpointID>
   <loggedOnUsers>
      <e>
         <client/>
         <logonType>0</logonType>
         <sessionID>321</sessionID>
         <sessionName>Console</sessionName>
         <status>Active</status>
         <username>CORP\user1</username>
      </e>
      <e>
         <client/>
         <logonType>0</logonType>
         <sessionID>123</sessionID>
         <sessionName>Console</sessionName>
         <status>Active</status>
         <username>CORP\user1</username>
      </e>
      <e>
         <client>1.2.3.4</client>
         <logonType>2</logonType>
         <sessionID>111</sessionID>
         <sessionName/>
         <status>Active</status>
         <username>user2</username>
      </e>
   </loggedOnUsers>
   <name/>
   <partnerID>50001794</partnerID>
   <regID/>
   <siteID>50109539</siteID>
   <startupStatus>
      <lastBootUpTimeUTC>2017-02-05T19:15:53.489Z</lastBootUpTimeUTC>
   </startupStatus>
   <type/>
</Response>]]></con:originalMessage></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters>
  <con:entry key="partner_id" value="${#Project#partnerId}"/>
  <con:entry key="endpoint_id" value="${#Project#End_PointID}"/>
</con:parameters><con:parameterOrder><con:entry>partner_id</con:entry><con:entry>endpoint_id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:testSuite id="0b441767-739c-4243-9f6a-812b12b0efb6" name="SystemState GET API Validation for specific partnerId"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:runType>SEQUENTIAL</con:runType><con:testCase id="0e08d107-aee1-4d26-a05e-8cb26745641a" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="C2311598-Validate systemstate GET response based on partnerID" searchProperties="true" timeout="0"><con:settings/><con:savedRecentRuns>1</con:savedRecentRuns><con:testStep type="restrequest" name="Step1_GET_resquest" id="152f0c5d-e516-4c37-8d0c-b8f4a8bfff7c"><con:settings/><con:config service="REST Service 31" resourcePath="/systemstate/v1/partner/{partnerId}/endpoints" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Step1_GET_resquest" id="4fb71eb5-3cb3-4c7b-9773-7c89b30500d5" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com</con:endpoint><con:request/><con:originalUri>http://internal-continuum-ss1-service-elb-int-171822124.ap-south-1.elb.amazonaws.com/systemstate/v1/partner/50001794/endpoints</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="8fa31c05-1424-4baa-807e-bd9688bfbd00" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="JsonPath Count" id="ab618ad8-f46a-496f-bfe3-9614ae4e352a" name="JsonPath Count"><con:configuration><path>$[0]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>Inherit From Parent</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/><con:parameterOrder><con:entry>partnerId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:savedRecentRuns>1</con:savedRecentRuns><con:requirements/><con:properties><con:property><con:name>End_PointID</con:name><con:value>4a81d29a-0b0b-47f3-a29f-22bd1b6d64a6</con:value></con:property><con:property><con:name>partnerId</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">50001794</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:oAuth2ProfileContainer/><con:reporting><con:reportTemplates/><con:xmlTemplates/><con:xmlTemplates/><con:parameters/><con:parameters/></con:reporting><con:reporting/><con:authRepository/><con:tags/></con:soapui-project>